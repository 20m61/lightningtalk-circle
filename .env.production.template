# Lightning Talk Circle - Production Environment Variables Template
# Copy this file to .env.production and fill in the actual values
# NEVER commit the actual .env.production file to version control

# ============================================
# APPLICATION SETTINGS
# ============================================

# Environment mode (MUST be 'production' for production)
NODE_ENV=production

# Server port (typically 3000 or 8080)
PORT=3000

# Application name and URL
SITE_NAME="なんでもライトニングトーク"
SITE_URL="https://xn--6wym69a.com"  # 発表.com

# ============================================
# SECURITY SETTINGS (CRITICAL)
# ============================================

# JWT Secret - MUST be a strong random string (minimum 32 characters)
# Generate with: openssl rand -base64 32
JWT_SECRET=CHANGE_THIS_TO_STRONG_RANDOM_STRING_MIN_32_CHARS

# JWT Token expiration
JWT_EXPIRES_IN=24h
JWT_REFRESH_EXPIRES_IN=7d

# Session secret - MUST be different from JWT_SECRET
# Generate with: openssl rand -base64 32
SESSION_SECRET=CHANGE_THIS_TO_DIFFERENT_STRONG_RANDOM_STRING

# Admin credentials (change immediately after first login)
ADMIN_EMAIL=admin@yourdomain.com
ADMIN_PASSWORD=CHANGE_THIS_STRONG_TEMP_PASSWORD_123!
ADMIN_NAME=System Administrator

# ============================================
# DATABASE CONFIGURATION
# ============================================

# Database type (use 'dynamodb' for production)
DATABASE_TYPE=dynamodb

# AWS Configuration
AWS_REGION=ap-northeast-1
AWS_ACCOUNT_ID=your-aws-account-id

# DynamoDB Table Names (will be created by CDK)
DYNAMODB_EVENTS_TABLE=lightningtalk-circle-prod-events
DYNAMODB_PARTICIPANTS_TABLE=lightningtalk-circle-prod-participants
DYNAMODB_USERS_TABLE=lightningtalk-circle-prod-users
DYNAMODB_TALKS_TABLE=lightningtalk-circle-prod-talks
DYNAMODB_PARTICIPATION_VOTES_TABLE=lightningtalk-circle-prod-participation-votes
DYNAMODB_VOTING_SESSIONS_TABLE=lightningtalk-circle-prod-voting-sessions

# ============================================
# EXTERNAL SERVICES
# ============================================

# GitHub Integration (for issue management)
GITHUB_TOKEN=ghp_YOUR_GITHUB_PERSONAL_ACCESS_TOKEN
GITHUB_OWNER=your-github-username
GITHUB_REPO=your-repo-name

# Email Service Configuration
EMAIL_ENABLED=true
EMAIL_FROM="noreply@xn--6wym69a.com"
EMAIL_SERVICE=aws-ses  # Options: gmail, sendgrid, aws-ses, smtp, mailgun

# AWS SES Configuration (if using aws-ses)
AWS_SES_REGION=ap-northeast-1

# SendGrid Configuration (if using sendgrid)
# SENDGRID_API_KEY=SG.YOUR_SENDGRID_API_KEY

# SMTP Configuration (if using smtp)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_SECURE=false
# SMTP_USER=your-email@gmail.com
# SMTP_PASS=your-app-specific-password

# ============================================
# MONITORING AND LOGGING
# ============================================

# CloudWatch Configuration
CLOUDWATCH_LOG_GROUP=/aws/ecs/lightningtalk-circle
CLOUDWATCH_LOG_STREAM_PREFIX=prod

# Error tracking (optional)
SENTRY_DSN=https://YOUR_SENTRY_DSN@sentry.io/PROJECT_ID

# Analytics (optional)
GOOGLE_ANALYTICS_ID=G-XXXXXXXXXX

# ============================================
# SECURITY HEADERS AND CORS
# ============================================

# Allowed CORS origins (comma-separated)
CORS_ORIGINS=https://xn--6wym69a.com,https://www.xn--6wym69a.com

# Content Security Policy
CSP_REPORT_URI=https://your-csp-report-endpoint.com

# ============================================
# RATE LIMITING
# ============================================

# General API rate limiting
RATE_LIMIT_WINDOW_MS=900000  # 15 minutes
RATE_LIMIT_MAX_REQUESTS=100

# Registration-specific rate limiting
REGISTRATION_LIMIT_PER_HOUR=5

# ============================================
# FEATURE FLAGS
# ============================================

# Email notifications
SEND_CONFIRMATION_EMAILS=true
SEND_REMINDER_EMAILS=true

# Survey counter visibility
SHOW_SURVEY_COUNTER=false

# GitHub automation
AUTO_CREATE_ISSUES=false
AUTO_MERGE=false
REQUIRE_REVIEW=true
REQUIRE_STATUS_CHECKS=true

# ============================================
# CDN AND STATIC ASSETS
# ============================================

# CloudFront Distribution ID (after CDK deployment)
CLOUDFRONT_DISTRIBUTION_ID=EXXXXXXXXXX

# S3 Bucket for static assets (created by CDK)
S3_BUCKET_NAME=lightningtalk-circle-prod-static

# ============================================
# EXTERNAL INTEGRATIONS
# ============================================

# Google OAuth (for Cognito)
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret

# Slack notifications (optional)
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL

# External survey/feedback form
FEEDBACK_URL=https://docs.google.com/forms/d/YOUR_FORM_ID

# ============================================
# DEPLOYMENT CONFIGURATION
# ============================================

# ECS Configuration (set by CDK)
ECS_CLUSTER_NAME=lightningtalk-circle-prod
ECS_SERVICE_NAME=lightningtalk-circle-prod-api
ECS_TASK_DEFINITION=lightningtalk-circle-prod-task

# Load Balancer
ALB_DNS_NAME=lightningtalk-prod-alb-xxxxxxxxx.ap-northeast-1.elb.amazonaws.com

# ============================================
# BACKUP AND DISASTER RECOVERY
# ============================================

# Backup S3 bucket
BACKUP_BUCKET_NAME=lightningtalk-circle-prod-backups

# Backup retention days
BACKUP_RETENTION_DAYS=30

# ============================================
# GOOGLE OAUTH CONFIGURATION
# ============================================

# Google OAuth設定（オプション）
# GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
# GOOGLE_CLIENT_SECRET=your-google-client-secret

# AWS Cognito設定（Google認証用）
# VITE_USER_POOL_ID=ap-northeast-1_xxxxxxxxx
# VITE_USER_POOL_CLIENT_ID=xxxxxxxxxxxxxxxxxxxxxxxxxx
# VITE_IDENTITY_POOL_ID=ap-northeast-1:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
# VITE_COGNITO_DOMAIN=your-domain.auth.ap-northeast-1.amazoncognito.com
# USER_POOL_ID=ap-northeast-1_xxxxxxxxx
# USER_POOL_CLIENT_ID=xxxxxxxxxxxxxxxxxxxxxxxxxx

# ============================================
# IMPORTANT NOTES
# ============================================

# 1. Generate all secrets using cryptographically secure methods
# 2. Use AWS Secrets Manager or Parameter Store for production
# 3. Rotate secrets regularly (at least every 90 days)
# 4. Monitor access logs for suspicious activity
# 5. Enable MFA for all admin accounts
# 6. Review and update this configuration quarterly

# End of production environment template