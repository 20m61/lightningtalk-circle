version: '3.8'

services:
  # メインブランチ開発環境
  app-main:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: lightningtalk-main
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - BRANCH=main
      - DEBUG=lightningtalk:*
    restart: unless-stopped
    networks:
      - lightningtalk-dev

  # Feature ブランチ開発環境（worktree 用）
  app-feature:
    build:
      context: ../lightningtalk-worktrees/feature
      dockerfile: ../../lightningtalk-circle/Dockerfile.dev
    container_name: lightningtalk-feature
    volumes:
      - ../lightningtalk-worktrees/feature:/app
      - /app/node_modules
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - BRANCH=feature
      - DEBUG=lightningtalk:*
    restart: unless-stopped
    networks:
      - lightningtalk-dev
    profiles:
      - feature

  # ホットフィックス用環境
  app-hotfix:
    build:
      context: ../lightningtalk-worktrees/hotfix
      dockerfile: ../../lightningtalk-circle/Dockerfile.dev
    container_name: lightningtalk-hotfix
    volumes:
      - ../lightningtalk-worktrees/hotfix:/app
      - /app/node_modules
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=development
      - BRANCH=hotfix
      - DEBUG=lightningtalk:*
    restart: unless-stopped
    networks:
      - lightningtalk-dev
    profiles:
      - hotfix

  # テスト実行環境
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: lightningtalk-test
    volumes:
      - .:/app
      - ./coverage:/app/coverage
      - /app/node_modules
    environment:
      - NODE_ENV=test
      - CI=true
    networks:
      - lightningtalk-dev
    profiles:
      - test

  # ブラウザテスト用 Selenium
  selenium:
    image: selenium/standalone-chrome:latest
    container_name: lightningtalk-selenium
    ports:
      - "4444:4444"
      - "7900:7900"  # VNC アクセス用
    environment:
      - SE_VNC_NO_PASSWORD=1
      - SE_NODE_SESSION_TIMEOUT=300
    networks:
      - lightningtalk-dev
    profiles:
      - test
      - e2e

  # Redis（セッション管理用）
  redis:
    image: redis:7-alpine
    container_name: lightningtalk-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - lightningtalk-dev

  # PostgreSQL（将来の DB 使用を想定）
  postgres:
    image: postgres:15-alpine
    container_name: lightningtalk-postgres
    environment:
      - POSTGRES_USER=lightningtalk
      - POSTGRES_PASSWORD=lightningtalk
      - POSTGRES_DB=lightningtalk_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/db-init:/docker-entrypoint-initdb.d
    networks:
      - lightningtalk-dev
    profiles:
      - database

  # Nginx（リバースプロキシ）
  nginx:
    image: nginx:alpine
    container_name: lightningtalk-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certs:/etc/nginx/certs
    depends_on:
      - app-main
    networks:
      - lightningtalk-dev
    profiles:
      - proxy

networks:
  lightningtalk-dev:
    driver: bridge

volumes:
  redis-data:
  postgres-data: