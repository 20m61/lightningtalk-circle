{"version":3,"names":["cov_xltoaqtqe","actualCoverage","EventEmitter","s","require","v4","uuidv4","logger","NotificationService","constructor","f","clients","Map","wsClients","Set","subscriptions","notificationHistory","maxHistorySize","setupInternalEvents","on","data","broadcast","message","name","participant","timestamp","Date","toISOString","title","talk","event","type","b","author","setupSSE","req","res","clientId","writeHead","write","JSON","stringify","client","id","response","connectedAt","lastActivity","set","info","sendRecentNotifications","heartbeat","setInterval","has","error","removeSSEClient","clearInterval","setupWebSocket","wss","ws","add","send","sendRecentNotificationsWS","parse","handleWebSocketMessage","delete","readyState","OPEN","ping","handleSubscription","topics","handleUnsubscription","handleChatMessage","warn","Array","isArray","forEach","topic","get","join","trim","chatMessage","emit","notification","addToHistory","broadcastSSE","broadcastWebSocket","broadcastToTopic","recentNotifications","slice","filter","push","length","end","getConnectionStats","sseClients","size","totalConnections","Object","fromEntries","cleanupInactiveClients","now","timeoutMs","close","startPeriodicCleanup","shutdown","clear","notificationService","process","exit","module","exports"],"sources":["notificationService.js"],"sourcesContent":["/**\n * リアルタイム通知サービス\n * WebSocketとServer-Sent Eventsを使用したリアルタイム通知機能\n */\n\nconst EventEmitter = require('events');\nconst { v4: uuidv4 } = require('uuid');\nconst logger = require('../middleware/logger');\n\nclass NotificationService extends EventEmitter {\n  constructor() {\n    super();\n    this.clients = new Map(); // SSE クライアント管理\n    this.wsClients = new Set(); // WebSocket クライアント管理\n    this.subscriptions = new Map(); // トピック別サブスクリプション\n    this.notificationHistory = []; // 通知履歴\n    this.maxHistorySize = 1000;\n    \n    // 内部イベントの設定\n    this.setupInternalEvents();\n  }\n\n  /**\n   * 内部イベントリスナーの設定\n   */\n  setupInternalEvents() {\n    // 新規参加者登録\n    this.on('participant:registered', (data) => {\n      this.broadcast('participant_registered', {\n        message: `${data.name}さんが参加登録しました`,\n        participant: data,\n        timestamp: new Date().toISOString()\n      });\n    });\n\n    // 新規発表申込み\n    this.on('talk:submitted', (data) => {\n      this.broadcast('talk_submitted', {\n        message: `新しい発表「${data.title}」が申し込まれました`,\n        talk: data,\n        timestamp: new Date().toISOString()\n      });\n    });\n\n    // イベント更新\n    this.on('event:updated', (data) => {\n      this.broadcast('event_updated', {\n        message: 'イベント情報が更新されました',\n        event: data,\n        timestamp: new Date().toISOString()\n      });\n    });\n\n    // システム通知\n    this.on('system:notification', (data) => {\n      this.broadcast('system_notification', {\n        message: data.message,\n        type: data.type || 'info',\n        timestamp: new Date().toISOString()\n      });\n    });\n\n    // チャットメッセージ\n    this.on('chat:message', (data) => {\n      this.broadcast('chat_message', {\n        message: data.message,\n        author: data.author,\n        timestamp: new Date().toISOString()\n      });\n    });\n  }\n\n  /**\n   * SSE (Server-Sent Events) の設定\n   */\n  setupSSE(req, res) {\n    const clientId = uuidv4();\n    \n    // SSE ヘッダーの設定\n    res.writeHead(200, {\n      'Content-Type': 'text/event-stream',\n      'Cache-Control': 'no-cache',\n      'Connection': 'keep-alive',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Headers': 'Cache-Control',\n      'Access-Control-Allow-Credentials': true\n    });\n\n    // 接続確認メッセージ\n    res.write(`id: ${clientId}\\n`);\n    res.write(`event: connected\\n`);\n    res.write(`data: ${JSON.stringify({ \n      message: 'Connected to Lightning Talk notifications',\n      clientId: clientId,\n      timestamp: new Date().toISOString()\n    })}\\n\\n`);\n\n    // クライアント情報を保存\n    const client = {\n      id: clientId,\n      response: res,\n      connectedAt: new Date(),\n      lastActivity: new Date(),\n      subscriptions: new Set(['all']) // デフォルトで全通知を受信\n    };\n\n    this.clients.set(clientId, client);\n    logger.info(`SSE client connected: ${clientId}`);\n\n    // 最近の通知履歴を送信\n    this.sendRecentNotifications(clientId);\n\n    // 接続維持のためのハートビート\n    const heartbeat = setInterval(() => {\n      if (this.clients.has(clientId)) {\n        try {\n          res.write(`event: heartbeat\\n`);\n          res.write(`data: ${JSON.stringify({ timestamp: new Date().toISOString() })}\\n\\n`);\n          client.lastActivity = new Date();\n        } catch (error) {\n          logger.error(`Heartbeat failed for client ${clientId}:`, error);\n          this.removeSSEClient(clientId);\n          clearInterval(heartbeat);\n        }\n      } else {\n        clearInterval(heartbeat);\n      }\n    }, 30000); // 30秒ごと\n\n    // クライアント切断時の処理\n    req.on('close', () => {\n      this.removeSSEClient(clientId);\n      clearInterval(heartbeat);\n      logger.info(`SSE client disconnected: ${clientId}`);\n    });\n\n    req.on('error', (error) => {\n      logger.error(`SSE client error ${clientId}:`, error);\n      this.removeSSEClient(clientId);\n      clearInterval(heartbeat);\n    });\n\n    return clientId;\n  }\n\n  /**\n   * WebSocket の設定\n   */\n  setupWebSocket(wss) {\n    wss.on('connection', (ws, req) => {\n      const clientId = uuidv4();\n      ws.clientId = clientId;\n      ws.connectedAt = new Date();\n      ws.subscriptions = new Set(['all']);\n\n      this.wsClients.add(ws);\n      logger.info(`WebSocket client connected: ${clientId}`);\n\n      // 接続確認メッセージ\n      ws.send(JSON.stringify({\n        event: 'connected',\n        data: {\n          message: 'Connected to Lightning Talk WebSocket',\n          clientId: clientId,\n          timestamp: new Date().toISOString()\n        }\n      }));\n\n      // 最近の通知履歴を送信\n      this.sendRecentNotificationsWS(ws);\n\n      // メッセージ受信処理\n      ws.on('message', (message) => {\n        try {\n          const data = JSON.parse(message);\n          this.handleWebSocketMessage(ws, data);\n        } catch (error) {\n          logger.error(`Invalid WebSocket message from ${clientId}:`, error);\n        }\n      });\n\n      // 切断処理\n      ws.on('close', () => {\n        this.wsClients.delete(ws);\n        logger.info(`WebSocket client disconnected: ${clientId}`);\n      });\n\n      ws.on('error', (error) => {\n        logger.error(`WebSocket client error ${clientId}:`, error);\n        this.wsClients.delete(ws);\n      });\n\n      // ハートビート\n      const heartbeat = setInterval(() => {\n        if (ws.readyState === ws.OPEN) {\n          ws.ping();\n        } else {\n          clearInterval(heartbeat);\n        }\n      }, 30000);\n\n      ws.on('pong', () => {\n        ws.lastActivity = new Date();\n      });\n    });\n  }\n\n  /**\n   * WebSocket メッセージの処理\n   */\n  handleWebSocketMessage(ws, data) {\n    switch (data.type) {\n      case 'subscribe':\n        this.handleSubscription(ws, data.topics);\n        break;\n      case 'unsubscribe':\n        this.handleUnsubscription(ws, data.topics);\n        break;\n      case 'chat':\n        this.handleChatMessage(ws, data);\n        break;\n      case 'ping':\n        ws.send(JSON.stringify({ type: 'pong', timestamp: new Date().toISOString() }));\n        break;\n      default:\n        logger.warn(`Unknown WebSocket message type: ${data.type}`);\n    }\n  }\n\n  /**\n   * トピック購読の処理\n   */\n  handleSubscription(ws, topics) {\n    if (Array.isArray(topics)) {\n      topics.forEach(topic => {\n        ws.subscriptions.add(topic);\n        \n        // トピック別サブスクリプション管理\n        if (!this.subscriptions.has(topic)) {\n          this.subscriptions.set(topic, new Set());\n        }\n        this.subscriptions.get(topic).add(ws);\n      });\n\n      ws.send(JSON.stringify({\n        event: 'subscribed',\n        data: {\n          topics: topics,\n          message: `Subscribed to ${topics.join(', ')}`,\n          timestamp: new Date().toISOString()\n        }\n      }));\n\n      logger.info(`Client ${ws.clientId} subscribed to: ${topics.join(', ')}`);\n    }\n  }\n\n  /**\n   * トピック購読解除の処理\n   */\n  handleUnsubscription(ws, topics) {\n    if (Array.isArray(topics)) {\n      topics.forEach(topic => {\n        ws.subscriptions.delete(topic);\n        \n        if (this.subscriptions.has(topic)) {\n          this.subscriptions.get(topic).delete(ws);\n        }\n      });\n\n      ws.send(JSON.stringify({\n        event: 'unsubscribed',\n        data: {\n          topics: topics,\n          message: `Unsubscribed from ${topics.join(', ')}`,\n          timestamp: new Date().toISOString()\n        }\n      }));\n\n      logger.info(`Client ${ws.clientId} unsubscribed from: ${topics.join(', ')}`);\n    }\n  }\n\n  /**\n   * チャットメッセージの処理\n   */\n  handleChatMessage(ws, data) {\n    if (data.message && data.message.trim()) {\n      const chatMessage = {\n        id: uuidv4(),\n        message: data.message.trim(),\n        author: data.author || 'Anonymous',\n        timestamp: new Date().toISOString(),\n        clientId: ws.clientId\n      };\n\n      // チャットメッセージを配信\n      this.emit('chat:message', chatMessage);\n      \n      logger.info(`Chat message from ${ws.clientId}: ${chatMessage.message}`);\n    }\n  }\n\n  /**\n   * 全クライアントへの配信\n   */\n  broadcast(event, data, topic = 'all') {\n    const notification = {\n      id: uuidv4(),\n      event: event,\n      data: data,\n      topic: topic,\n      timestamp: new Date().toISOString()\n    };\n\n    // 通知履歴に追加\n    this.addToHistory(notification);\n\n    // SSE クライアントに送信\n    this.broadcastSSE(notification);\n\n    // WebSocket クライアントに送信\n    this.broadcastWebSocket(notification);\n\n    logger.info(`Broadcasted ${event} to all clients`);\n  }\n\n  /**\n   * SSE クライアントへの配信\n   */\n  broadcastSSE(notification) {\n    const message = `id: ${notification.id}\\nevent: ${notification.event}\\ndata: ${JSON.stringify(notification.data)}\\n\\n`;\n\n    this.clients.forEach((client, clientId) => {\n      if (client.subscriptions.has('all') || client.subscriptions.has(notification.topic)) {\n        try {\n          client.response.write(message);\n          client.lastActivity = new Date();\n        } catch (error) {\n          logger.error(`Failed to send SSE to client ${clientId}:`, error);\n          this.removeSSEClient(clientId);\n        }\n      }\n    });\n  }\n\n  /**\n   * WebSocket クライアントへの配信\n   */\n  broadcastWebSocket(notification) {\n    const message = JSON.stringify({\n      id: notification.id,\n      event: notification.event,\n      data: notification.data,\n      timestamp: notification.timestamp\n    });\n\n    this.wsClients.forEach(ws => {\n      if (ws.readyState === ws.OPEN && \n          (ws.subscriptions.has('all') || ws.subscriptions.has(notification.topic))) {\n        try {\n          ws.send(message);\n          ws.lastActivity = new Date();\n        } catch (error) {\n          logger.error(`Failed to send WebSocket message to client ${ws.clientId}:`, error);\n          this.wsClients.delete(ws);\n        }\n      }\n    });\n  }\n\n  /**\n   * 特定のトピックに配信\n   */\n  broadcastToTopic(topic, event, data) {\n    this.broadcast(event, data, topic);\n  }\n\n  /**\n   * 最近の通知履歴を送信 (SSE)\n   */\n  sendRecentNotifications(clientId) {\n    const client = this.clients.get(clientId);\n    if (!client) return;\n\n    const recentNotifications = this.notificationHistory\n      .slice(-10) // 最新10件\n      .filter(notification => \n        client.subscriptions.has('all') || \n        client.subscriptions.has(notification.topic)\n      );\n\n    recentNotifications.forEach(notification => {\n      try {\n        const message = `id: ${notification.id}\\nevent: ${notification.event}\\ndata: ${JSON.stringify(notification.data)}\\n\\n`;\n        client.response.write(message);\n      } catch (error) {\n        logger.error(`Failed to send recent notification to SSE client ${clientId}:`, error);\n      }\n    });\n  }\n\n  /**\n   * 最近の通知履歴を送信 (WebSocket)\n   */\n  sendRecentNotificationsWS(ws) {\n    const recentNotifications = this.notificationHistory\n      .slice(-10) // 最新10件\n      .filter(notification => \n        ws.subscriptions.has('all') || \n        ws.subscriptions.has(notification.topic)\n      );\n\n    recentNotifications.forEach(notification => {\n      try {\n        ws.send(JSON.stringify({\n          id: notification.id,\n          event: notification.event,\n          data: notification.data,\n          timestamp: notification.timestamp\n        }));\n      } catch (error) {\n        logger.error(`Failed to send recent notification to WebSocket client ${ws.clientId}:`, error);\n      }\n    });\n  }\n\n  /**\n   * 通知履歴に追加\n   */\n  addToHistory(notification) {\n    this.notificationHistory.push(notification);\n    \n    // 履歴サイズの制限\n    if (this.notificationHistory.length > this.maxHistorySize) {\n      this.notificationHistory = this.notificationHistory.slice(-this.maxHistorySize);\n    }\n  }\n\n  /**\n   * SSE クライアントの削除\n   */\n  removeSSEClient(clientId) {\n    const client = this.clients.get(clientId);\n    if (client) {\n      try {\n        client.response.end();\n      } catch (error) {\n        // Already closed\n      }\n      this.clients.delete(clientId);\n    }\n  }\n\n  /**\n   * 接続統計の取得\n   */\n  getConnectionStats() {\n    return {\n      sseClients: this.clients.size,\n      wsClients: this.wsClients.size,\n      totalConnections: this.clients.size + this.wsClients.size,\n      subscriptions: Object.fromEntries(this.subscriptions),\n      notificationHistory: this.notificationHistory.length\n    };\n  }\n\n  /**\n   * アクティブでないクライアントのクリーンアップ\n   */\n  cleanupInactiveClients() {\n    const now = new Date();\n    const timeoutMs = 5 * 60 * 1000; // 5分\n\n    // SSE クライアントのクリーンアップ\n    this.clients.forEach((client, clientId) => {\n      if (now - client.lastActivity > timeoutMs) {\n        logger.info(`Cleaning up inactive SSE client: ${clientId}`);\n        this.removeSSEClient(clientId);\n      }\n    });\n\n    // WebSocket クライアントのクリーンアップ\n    this.wsClients.forEach(ws => {\n      if (ws.readyState !== ws.OPEN || \n          (ws.lastActivity && now - ws.lastActivity > timeoutMs)) {\n        logger.info(`Cleaning up inactive WebSocket client: ${ws.clientId}`);\n        this.wsClients.delete(ws);\n        try {\n          ws.close();\n        } catch (error) {\n          // Already closed\n        }\n      }\n    });\n  }\n\n  /**\n   * 定期クリーンアップの開始\n   */\n  startPeriodicCleanup() {\n    setInterval(() => {\n      this.cleanupInactiveClients();\n    }, 60000); // 1分ごと\n  }\n\n  /**\n   * サービス停止時のクリーンアップ\n   */\n  shutdown() {\n    logger.info('Shutting down notification service...');\n    \n    // 全 SSE クライアントを切断\n    this.clients.forEach((client, clientId) => {\n      this.removeSSEClient(clientId);\n    });\n\n    // 全 WebSocket クライアントを切断\n    this.wsClients.forEach(ws => {\n      try {\n        ws.close();\n      } catch (error) {\n        // Already closed\n      }\n    });\n\n    this.wsClients.clear();\n    this.subscriptions.clear();\n    this.notificationHistory = [];\n    \n    logger.info('Notification service shutdown complete');\n  }\n}\n\n// シングルトンインスタンス\nconst notificationService = new NotificationService();\n\n// 定期クリーンアップの開始\nnotificationService.startPeriodicCleanup();\n\n// プロセス終了時のクリーンアップ\nprocess.on('SIGINT', () => {\n  notificationService.shutdown();\n  process.exit(0);\n});\n\nprocess.on('SIGTERM', () => {\n  notificationService.shutdown();\n  process.exit(0);\n});\n\nmodule.exports = notificationService;"],"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","ignoreList":[]}