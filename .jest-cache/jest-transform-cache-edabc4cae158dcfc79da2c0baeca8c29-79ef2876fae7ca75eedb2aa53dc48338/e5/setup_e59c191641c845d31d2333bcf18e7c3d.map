{"version":3,"names":["fs","require","path","process","env","NODE_ENV","PORT","GITHUB_TOKEN","GITHUB_OWNER","GITHUB_REPO","jest","setTimeout","beforeAll","testDataDir","join","cwd","ensureDir","console","log","afterEach","clearAllMocks","afterAll","pathExists","remove","global","mockConsole","fn","error","warn","info","SILENCE_CONSOLE","expect","extend","toBeValidIssue","received","pass","title","length","Array","isArray","labels","message","toHaveGitHubIssueStructure","requiredFields","hasAllFields","every","field","hasOwnProperty"],"sources":["setup.js"],"sourcesContent":["/**\n * Jest テスト環境のセットアップファイル\n */\n\nconst fs = require('fs-extra');\nconst path = require('path');\n\n// テスト環境変数の設定\nprocess.env.NODE_ENV = 'test';\nprocess.env.PORT = '3001';\nprocess.env.GITHUB_TOKEN = 'test-token';\nprocess.env.GITHUB_OWNER = 'test-owner';\nprocess.env.GITHUB_REPO = 'test-repo';\n\n// グローバルタイムアウト設定\njest.setTimeout(10000);\n\n// グローバルセットアップ\nbeforeAll(async () => {\n  // テスト用データディレクトリの作成\n  const testDataDir = path.join(process.cwd(), 'tests', 'data');\n  await fs.ensureDir(testDataDir);\n  \n  console.log('🧪 Test environment setup completed');\n});\n\n// 各テスト後のクリーンアップ\nafterEach(() => {\n  // モックのクリア\n  jest.clearAllMocks();\n});\n\n// 全テスト後のクリーンアップ\nafterAll(async () => {\n  // テスト用ファイルのクリーンアップ\n  const testDataDir = path.join(process.cwd(), 'tests', 'data');\n  if (await fs.pathExists(testDataDir)) {\n    await fs.remove(testDataDir);\n  }\n  \n  console.log('🧹 Test environment cleanup completed');\n});\n\n// グローバルモック設定\nglobal.mockConsole = {\n  log: jest.fn(),\n  error: jest.fn(),\n  warn: jest.fn(),\n  info: jest.fn()\n};\n\n// console.log をモック化（必要に応じて）\nif (process.env.SILENCE_CONSOLE === 'true') {\n  global.console = global.mockConsole;\n}\n\n// カスタムマッチャーの追加\nexpect.extend({\n  toBeValidIssue(received) {\n    const pass = received &&\n                 typeof received.title === 'string' &&\n                 received.title.length > 0 &&\n                 Array.isArray(received.labels) &&\n                 received.labels.length > 0;\n    \n    if (pass) {\n      return {\n        message: () => `expected ${received} not to be a valid issue`,\n        pass: true,\n      };\n    } else {\n      return {\n        message: () => `expected ${received} to be a valid issue with title and labels`,\n        pass: false,\n      };\n    }\n  },\n  \n  toHaveGitHubIssueStructure(received) {\n    const requiredFields = ['number', 'title', 'state', 'html_url'];\n    const hasAllFields = requiredFields.every(field => received.hasOwnProperty(field));\n    \n    if (hasAllFields) {\n      return {\n        message: () => `expected ${received} not to have GitHub issue structure`,\n        pass: true,\n      };\n    } else {\n      return {\n        message: () => `expected ${received} to have GitHub issue structure with fields: ${requiredFields.join(', ')}`,\n        pass: false,\n      };\n    }\n  }\n});"],"mappings":"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","ignoreList":[]}