{"version":3,"names":["cov_1a81gl3a9v","actualCoverage","express","s","require","swaggerUi","YAML","path","fs","logger","router","Router","swaggerDocument","openApiPath","join","__dirname","load","info","error","openapi","title","version","description","paths","swaggerOptions","explorer","persistAuthorization","displayRequestDuration","filter","showExtensions","showCommonExtensions","docExpansion","defaultModelsExpandDepth","defaultModelExpandDepth","tryItOutEnabled","customCss","customSiteTitle","customfavIcon","use","serve","get","setup","req","res","f","json","status","success","message","existsSync","b","setHeader","sendFile","quickstartGuide","baseUrl","protocol","authentication","admin","type","header","apiKey","quickExamples","method","endpoint","example","curl","response","data","id","date","name","eventId","realTimeFeatures","javascript","multiEventFeatures","errorHandling","nextSteps","apiStatus","api","contact","license","endpoints","total","Object","keys","length","byMethod","byTag","features","realTime","multiEvent","monitoring","lastUpdated","Date","toISOString","documentation","swagger","openapi_json","openapi_yaml","quickstart","entries","forEach","methods","toUpperCase","tags","tag","sdkInfo","officialSdks","installation","github","python","codeGenerators","openapi_generator","usage","supportedLanguages","swagger_codegen","postmanCollection","import","url","steps","examples","basicUsage","httpie","community","discord","discussions","issues","changelog","currentVersion","versions","releaseDate","changes","added","changed","deprecated","removed","fixed","security","migration","breakingChanges","recommendations","upcomingFeatures","expectedRelease","deprecationPolicy","notice","supportPeriod","module","exports"],"sources":["docs.js"],"sourcesContent":["/**\n * API Documentation Routes\n * OpenAPI/Swagger統合とAPIドキュメント提供\n */\n\nconst express = require('express');\nconst swaggerUi = require('swagger-ui-express');\nconst YAML = require('yamljs');\nconst path = require('path');\nconst fs = require('fs');\nconst { logger } = require('../middleware/logger');\n\nconst router = express.Router();\n\n// OpenAPI仕様を読み込み\nlet swaggerDocument;\ntry {\n  const openApiPath = path.join(__dirname, '../../docs/api/openapi.yaml');\n  swaggerDocument = YAML.load(openApiPath);\n  logger.info('OpenAPI specification loaded successfully');\n} catch (error) {\n  logger.error('Failed to load OpenAPI specification:', error);\n  swaggerDocument = {\n    openapi: '3.0.3',\n    info: {\n      title: 'Lightning Talk API',\n      version: '1.0.0',\n      description: 'API documentation is temporarily unavailable'\n    },\n    paths: {}\n  };\n}\n\n// Swagger UI設定\nconst swaggerOptions = {\n  explorer: true,\n  swaggerOptions: {\n    persistAuthorization: true,\n    displayRequestDuration: true,\n    filter: true,\n    showExtensions: true,\n    showCommonExtensions: true,\n    docExpansion: 'list',\n    defaultModelsExpandDepth: 3,\n    defaultModelExpandDepth: 3,\n    tryItOutEnabled: true\n  },\n  customCss: `\n    .swagger-ui .topbar { display: none; }\n    .swagger-ui .info { margin: 20px 0; }\n    .swagger-ui .info .title { font-size: 2.5em; color: #2c3e50; }\n    .swagger-ui .scheme-container { background: #f8f9fa; padding: 15px; border-radius: 8px; }\n    .swagger-ui .opblock-summary-path { font-weight: bold; }\n    .swagger-ui .btn.authorize { background-color: #007bff; border-color: #007bff; }\n    .swagger-ui .btn.authorize:hover { background-color: #0056b3; border-color: #0056b3; }\n  `,\n  customSiteTitle: 'Lightning Talk API Documentation',\n  customfavIcon: '/favicon.ico'\n};\n\n/**\n * Swagger UI ドキュメント\n * GET /api/docs\n */\nrouter.use('/', swaggerUi.serve);\nrouter.get('/', swaggerUi.setup(swaggerDocument, swaggerOptions));\n\n/**\n * OpenAPI仕様のJSON形式取得\n * GET /api/docs/openapi.json\n */\nrouter.get('/openapi.json', (req, res) => {\n  try {\n    res.json(swaggerDocument);\n  } catch (error) {\n    logger.error('Failed to serve OpenAPI JSON:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Failed to load API specification',\n      error: error.message\n    });\n  }\n});\n\n/**\n * OpenAPI仕様のYAML形式取得\n * GET /api/docs/openapi.yaml\n */\nrouter.get('/openapi.yaml', (req, res) => {\n  try {\n    const openApiPath = path.join(__dirname, '../../docs/api/openapi.yaml');\n    \n    if (fs.existsSync(openApiPath)) {\n      res.setHeader('Content-Type', 'application/x-yaml');\n      res.sendFile(openApiPath);\n    } else {\n      res.status(404).json({\n        success: false,\n        message: 'OpenAPI YAML file not found'\n      });\n    }\n  } catch (error) {\n    logger.error('Failed to serve OpenAPI YAML:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Failed to load API specification',\n      error: error.message\n    });\n  }\n});\n\n/**\n * API概要とクイックスタート\n * GET /api/docs/quickstart\n */\nrouter.get('/quickstart', (req, res) => {\n  try {\n    const quickstartGuide = {\n      title: 'Lightning Talk API クイックスタート',\n      version: swaggerDocument.info.version,\n      baseUrl: req.protocol + '://' + req.get('host') + '/api',\n      authentication: {\n        admin: {\n          type: 'Bearer Token (JWT)',\n          header: 'Authorization: Bearer YOUR_JWT_TOKEN',\n          description: '管理者機能にはJWTトークンが必要です'\n        },\n        apiKey: {\n          type: 'API Key',\n          header: 'X-API-Key: YOUR_API_KEY',\n          description: '一部のエンドポイントではAPIキーを使用できます'\n        }\n      },\n      quickExamples: {\n        'イベント一覧取得': {\n          method: 'GET',\n          endpoint: '/events',\n          description: '公開されているイベントの一覧を取得',\n          example: {\n            curl: `curl -X GET \"${req.protocol}://${req.get('host')}/api/events\"`,\n            response: {\n              success: true,\n              data: [\n                {\n                  id: 'event-001',\n                  title: '第1回 なんでもライトニングトーク',\n                  date: '2025-06-25T19:00:00+09:00',\n                  status: 'upcoming'\n                }\n              ]\n            }\n          }\n        },\n        '参加者登録': {\n          method: 'POST',\n          endpoint: '/participants/register',\n          description: 'イベントへの参加登録',\n          example: {\n            curl: `curl -X POST \"${req.protocol}://${req.get('host')}/api/participants/register\" \\\\\n  -H \"Content-Type: application/json\" \\\\\n  -d '{\n    \"name\": \"テスト太郎\",\n    \"email\": \"test@example.com\",\n    \"eventId\": \"event-001\",\n    \"participationType\": \"online\"\n  }'`,\n            response: {\n              success: true,\n              message: '参加登録が完了しました',\n              data: {\n                id: 'participant-001',\n                name: 'テスト太郎',\n                eventId: 'event-001'\n              }\n            }\n          }\n        },\n        '発表提出': {\n          method: 'POST',\n          endpoint: '/talks',\n          description: 'ライトニングトークの発表提出',\n          example: {\n            curl: `curl -X POST \"${req.protocol}://${req.get('host')}/api/talks\" \\\\\n  -H \"Content-Type: application/json\" \\\\\n  -d '{\n    \"title\": \"JavaScriptの新機能紹介\",\n    \"description\": \"ES2025の新機能を簡単に紹介します\",\n    \"speakerName\": \"発表太郎\",\n    \"speakerEmail\": \"speaker@example.com\",\n    \"eventId\": \"event-001\",\n    \"category\": \"技術\"\n  }'`,\n            response: {\n              success: true,\n              message: '発表が正常に提出されました',\n              data: {\n                id: 'talk-001',\n                title: 'JavaScriptの新機能紹介',\n                status: 'pending'\n              }\n            }\n          }\n        }\n      },\n      realTimeFeatures: {\n        'Server-Sent Events': {\n          endpoint: '/notifications/stream',\n          description: 'リアルタイム通知のSSEストリーム',\n          example: {\n            javascript: `const eventSource = new EventSource('${req.protocol}://${req.get('host')}/api/notifications/stream');\neventSource.addEventListener('connected', (event) => {\n  console.log('接続完了:', JSON.parse(event.data));\n});\neventSource.addEventListener('participant_registered', (event) => {\n  console.log('新規参加者:', JSON.parse(event.data));\n});`\n          }\n        },\n        'WebSocket': {\n          endpoint: '/ws',\n          description: 'WebSocket接続によるリアルタイム通信',\n          example: {\n            javascript: `const ws = new WebSocket('${req.protocol === 'https' ? 'wss' : 'ws'}://${req.get('host')}/ws');\nws.onmessage = (event) => {\n  const message = JSON.parse(event.data);\n  console.log('受信メッセージ:', message);\n};\nws.send(JSON.stringify({\n  type: 'subscribe',\n  topics: ['all']\n}));`\n          }\n        }\n      },\n      multiEventFeatures: {\n        '複数イベント一括作成': {\n          endpoint: '/multi-events/create-batch',\n          description: '複数のイベントを一括で作成',\n          authentication: 'Admin Required'\n        },\n        '並行イベント管理': {\n          endpoint: '/multi-events/concurrent',\n          description: '同時実行中のイベント管理',\n          authentication: 'Admin Required'\n        },\n        'リアルタイムダッシュボード': {\n          endpoint: '/multi-events/dashboard',\n          description: 'マルチイベント管理ダッシュボード',\n          authentication: 'Admin Required'\n        }\n      },\n      errorHandling: {\n        '400 Bad Request': '不正なリクエスト（バリデーションエラー）',\n        '401 Unauthorized': '認証が必要',\n        '403 Forbidden': 'アクセス権限なし',\n        '404 Not Found': 'リソースが見つからない',\n        '409 Conflict': '重複データ（例：重複登録）',\n        '429 Too Many Requests': 'レート制限に達した',\n        '500 Internal Server Error': 'サーバー内部エラー'\n      },\n      nextSteps: [\n        '詳細なAPI仕様は /api/docs で確認してください',\n        'WebSocketやSSEを使用したリアルタイム機能を試してみてください',\n        '管理者機能を使用する場合は、適切な認証トークンを取得してください',\n        'GitHub Repositoryでソースコードとより詳しいドキュメントを確認できます'\n      ]\n    };\n\n    res.json({\n      success: true,\n      data: quickstartGuide\n    });\n\n  } catch (error) {\n    logger.error('Failed to generate quickstart guide:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Failed to generate quickstart guide',\n      error: error.message\n    });\n  }\n});\n\n/**\n * APIステータスとメトリクス\n * GET /api/docs/status\n */\nrouter.get('/status', (req, res) => {\n  try {\n    const apiStatus = {\n      api: {\n        version: swaggerDocument.info.version,\n        title: swaggerDocument.info.title,\n        description: swaggerDocument.info.description,\n        contact: swaggerDocument.info.contact,\n        license: swaggerDocument.info.license\n      },\n      endpoints: {\n        total: Object.keys(swaggerDocument.paths || {}).length,\n        byMethod: {},\n        byTag: {}\n      },\n      features: {\n        authentication: ['JWT Bearer Token', 'API Key'],\n        realTime: ['WebSocket', 'Server-Sent Events'],\n        multiEvent: ['Batch Creation', 'Concurrent Management', 'Analytics'],\n        monitoring: ['Health Checks', 'Rate Limiting', 'Error Tracking']\n      },\n      lastUpdated: new Date().toISOString(),\n      documentation: {\n        swagger: '/api/docs',\n        openapi_json: '/api/docs/openapi.json',\n        openapi_yaml: '/api/docs/openapi.yaml',\n        quickstart: '/api/docs/quickstart'\n      }\n    };\n\n    // エンドポイント統計の計算\n    if (swaggerDocument.paths) {\n      Object.entries(swaggerDocument.paths).forEach(([path, methods]) => {\n        Object.keys(methods).forEach(method => {\n          if (method !== 'parameters') {\n            apiStatus.endpoints.byMethod[method.toUpperCase()] = \n              (apiStatus.endpoints.byMethod[method.toUpperCase()] || 0) + 1;\n              \n            const tags = methods[method].tags || ['Untagged'];\n            tags.forEach(tag => {\n              apiStatus.endpoints.byTag[tag] = \n                (apiStatus.endpoints.byTag[tag] || 0) + 1;\n            });\n          }\n        });\n      });\n    }\n\n    res.json({\n      success: true,\n      data: apiStatus\n    });\n\n  } catch (error) {\n    logger.error('Failed to get API status:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Failed to get API status',\n      error: error.message\n    });\n  }\n});\n\n/**\n * SDKとクライアントライブラリ情報\n * GET /api/docs/sdks\n */\nrouter.get('/sdks', (req, res) => {\n  try {\n    const sdkInfo = {\n      title: 'Lightning Talk API - SDK & Client Libraries',\n      description: 'API利用のためのSDKとクライアントライブラリ情報',\n      \n      officialSdks: {\n        javascript: {\n          name: 'lightning-talk-js-sdk',\n          version: '1.0.0',\n          description: 'JavaScript/TypeScript用公式SDK',\n          installation: 'npm install lightning-talk-js-sdk',\n          github: 'https://github.com/example/lightning-talk-js-sdk',\n          example: `import { LightningTalkAPI } from 'lightning-talk-js-sdk';\n\nconst api = new LightningTalkAPI('${req.protocol}://${req.get('host')}/api');\n\n// イベント取得\nconst events = await api.events.list();\n\n// 参加者登録\nconst participant = await api.participants.register({\n  name: 'テスト太郎',\n  email: 'test@example.com',\n  eventId: 'event-001',\n  participationType: 'online'\n});\n\n// リアルタイム通知\napi.notifications.onParticipantRegistered((data) => {\n  console.log('新規参加者:', data);\n});`\n        },\n        \n        python: {\n          name: 'lightning-talk-python-sdk',\n          version: '1.0.0',\n          description: 'Python用公式SDK',\n          installation: 'pip install lightning-talk-python-sdk',\n          github: 'https://github.com/example/lightning-talk-python-sdk',\n          example: `from lightning_talk import LightningTalkAPI\n\napi = LightningTalkAPI('${req.protocol}://${req.get('host')}/api')\n\n# イベント取得\nevents = api.events.list()\n\n# 参加者登録\nparticipant = api.participants.register(\n    name='テスト太郎',\n    email='test@example.com',\n    event_id='event-001',\n    participation_type='online'\n)\n\n# 統計情報取得（管理者権限必要）\napi.set_admin_token('your-jwt-token')\nstats = api.analytics.get_event_statistics('event-001')`\n        }\n      },\n      \n      codeGenerators: {\n        openapi_generator: {\n          description: 'OpenAPI Generatorを使用してクライアントコードを生成',\n          installation: 'npm install @openapitools/openapi-generator-cli -g',\n          usage: [\n            `openapi-generator-cli generate -i ${req.protocol}://${req.get('host')}/api/docs/openapi.json -g javascript -o ./lightning-talk-client`,\n            `openapi-generator-cli generate -i ${req.protocol}://${req.get('host')}/api/docs/openapi.json -g python -o ./lightning-talk-client-python`,\n            `openapi-generator-cli generate -i ${req.protocol}://${req.get('host')}/api/docs/openapi.json -g typescript-axios -o ./lightning-talk-client-ts`\n          ],\n          supportedLanguages: [\n            'javascript', 'typescript-axios', 'typescript-node',\n            'python', 'java', 'csharp', 'go', 'php', 'ruby', 'swift'\n          ]\n        },\n        \n        swagger_codegen: {\n          description: 'Swagger Codegenを使用してクライアントコードを生成',\n          usage: [\n            `swagger-codegen generate -i ${req.protocol}://${req.get('host')}/api/docs/openapi.json -l javascript -o ./client-js`,\n            `swagger-codegen generate -i ${req.protocol}://${req.get('host')}/api/docs/openapi.json -l python -o ./client-python`\n          ]\n        }\n      },\n      \n      postmanCollection: {\n        description: 'Postman用のAPIコレクション',\n        import: {\n          method: 'OpenAPI仕様をPostmanにインポート',\n          url: `${req.protocol}://${req.get('host')}/api/docs/openapi.json`,\n          steps: [\n            'Postmanを開く',\n            'Import > Link タブを選択',\n            `上記URLを入力: ${req.protocol}://${req.get('host')}/api/docs/openapi.json`,\n            'Importボタンをクリック'\n          ]\n        }\n      },\n      \n      examples: {\n        curl: {\n          description: 'cURLを使用したAPIアクセス例',\n          basicUsage: [\n            `# イベント一覧取得\ncurl -X GET \"${req.protocol}://${req.get('host')}/api/events\"`,\n            \n            `# 参加者登録\ncurl -X POST \"${req.protocol}://${req.get('host')}/api/participants/register\" \\\\\n  -H \"Content-Type: application/json\" \\\\\n  -d '{\n    \"name\": \"テスト太郎\",\n    \"email\": \"test@example.com\",\n    \"eventId\": \"event-001\",\n    \"participationType\": \"online\"\n  }'`,\n    \n            `# 管理者機能（JWTトークン必要）\ncurl -X GET \"${req.protocol}://${req.get('host')}/api/participants/event-001\" \\\\\n  -H \"Authorization: Bearer YOUR_JWT_TOKEN\"`\n          ]\n        },\n        \n        httpie: {\n          description: 'HTTPieを使用したAPIアクセス例',\n          basicUsage: [\n            `# イベント一覧取得\nhttp GET ${req.protocol}://${req.get('host')}/api/events`,\n            \n            `# 参加者登録\nhttp POST ${req.protocol}://${req.get('host')}/api/participants/register \\\\\n  name=\"テスト太郎\" \\\\\n  email=\"test@example.com\" \\\\\n  eventId=\"event-001\" \\\\\n  participationType=\"online\"`,\n            \n            `# 管理者機能\nhttp GET ${req.protocol}://${req.get('host')}/api/participants/event-001 \\\\\n  Authorization:\"Bearer YOUR_JWT_TOKEN\"`\n          ]\n        }\n      },\n      \n      community: {\n        discord: 'https://discord.gg/lightningtalk',\n        github: 'https://github.com/example/lightningtalk-circle',\n        discussions: 'https://github.com/example/lightningtalk-circle/discussions',\n        issues: 'https://github.com/example/lightningtalk-circle/issues'\n      }\n    };\n\n    res.json({\n      success: true,\n      data: sdkInfo\n    });\n\n  } catch (error) {\n    logger.error('Failed to get SDK information:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Failed to get SDK information',\n      error: error.message\n    });\n  }\n});\n\n/**\n * APIの更新履歴\n * GET /api/docs/changelog\n */\nrouter.get('/changelog', (req, res) => {\n  try {\n    const changelog = {\n      title: 'Lightning Talk API - Changelog',\n      description: 'APIの変更履歴とバージョン情報',\n      currentVersion: swaggerDocument.info.version,\n      \n      versions: [\n        {\n          version: '1.0.0',\n          releaseDate: '2025-06-22',\n          type: 'major',\n          changes: {\n            added: [\n              '基本的なイベント管理API',\n              '参加者登録・管理機能',\n              '発表提出・管理機能',\n              'リアルタイム通知機能（WebSocket, SSE）',\n              '複数イベント同時管理機能',\n              '詳細な分析・レポート機能',\n              'OpenAPI 3.0準拠のAPI仕様',\n              'Swagger UI統合ドキュメント'\n            ],\n            changed: [],\n            deprecated: [],\n            removed: [],\n            fixed: [],\n            security: [\n              'JWT認証システム',\n              'レート制限機能',\n              '入力値検証強化',\n              'CORS設定最適化'\n            ]\n          },\n          migration: {\n            breakingChanges: [],\n            recommendations: [\n              '新規プロジェクトでは最新のSDKを使用してください',\n              'リアルタイム機能を活用してユーザーエクスペリエンスを向上させてください'\n            ]\n          }\n        }\n      ],\n      \n      upcomingFeatures: [\n        {\n          version: '1.1.0',\n          expectedRelease: '2025-07-15',\n          features: [\n            'GraphQL API対応',\n            'ファイルアップロード機能',\n            'カレンダー統合',\n            'メール通知テンプレートカスタマイズ'\n          ]\n        },\n        {\n          version: '1.2.0',\n          expectedRelease: '2025-08-30',\n          features: [\n            'マルチテナント対応',\n            '決済システム統合',\n            'モバイルアプリ用API拡張',\n            '高度な分析ダッシュボード'\n          ]\n        }\n      ],\n      \n      deprecationPolicy: {\n        notice: 'APIの重要な変更は最低3ヶ月前に通知します',\n        supportPeriod: 'メジャーバージョンは最低12ヶ月間サポートします',\n        migration: '移行ガイドと互換性情報を提供します'\n      }\n    };\n\n    res.json({\n      success: true,\n      data: changelog\n    });\n\n  } catch (error) {\n    logger.error('Failed to get changelog:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Failed to get changelog',\n      error: error.message\n    });\n  }\n});\n\nmodule.exports = router;\n"],"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","ignoreList":[]}