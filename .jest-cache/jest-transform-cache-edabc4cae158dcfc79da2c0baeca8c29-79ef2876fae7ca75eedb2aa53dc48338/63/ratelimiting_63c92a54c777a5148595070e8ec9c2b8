137180b9773fb38f3bd7fe1372acdc38
/* istanbul ignore next */
function cov_kz438n1j9() {
  var path = "/home/ec2-user/workspace/lightningtalk-circle/server/middleware/rate-limiting.js";
  var hash = "dab0574a7289752ff4ae98e2382f4b6f0a278037";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ec2-user/workspace/lightningtalk-circle/server/middleware/rate-limiting.js",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 21
        },
        end: {
          line: 10,
          column: 30
        }
      },
      "1": {
        start: {
          line: 11,
          column: 22
        },
        end: {
          line: 11,
          column: 31
        }
      },
      "2": {
        start: {
          line: 16,
          column: 27
        },
        end: {
          line: 21,
          column: 1
        }
      },
      "3": {
        start: {
          line: 18,
          column: 22
        },
        end: {
          line: 18,
          column: 56
        }
      },
      "4": {
        start: {
          line: 19,
          column: 22
        },
        end: {
          line: 19,
          column: 58
        }
      },
      "5": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 56
        }
      },
      "6": {
        start: {
          line: 26,
          column: 30
        },
        end: {
          line: 77,
          column: 1
        }
      },
      "7": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 76,
          column: 6
        }
      },
      "8": {
        start: {
          line: 28,
          column: 20
        },
        end: {
          line: 28,
          column: 43
        }
      },
      "9": {
        start: {
          line: 29,
          column: 20
        },
        end: {
          line: 29,
          column: 30
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "11": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 85
        }
      },
      "12": {
        start: {
          line: 36,
          column: 25
        },
        end: {
          line: 36,
          column: 46
        }
      },
      "13": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 25
        }
      },
      "14": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 35
        }
      },
      "15": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "16": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 38
        }
      },
      "17": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 50,
          column: 15
        }
      },
      "18": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "19": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 37
        }
      },
      "20": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 67,
          column: 11
        }
      },
      "21": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 75,
          column: 11
        }
      },
      "22": {
        start: {
          line: 82,
          column: 23
        },
        end: {
          line: 94,
          column: 1
        }
      },
      "23": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 93,
          column: 7
        }
      },
      "24": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 47
        }
      },
      "25": {
        start: {
          line: 99,
          column: 32
        },
        end: {
          line: 189,
          column: 1
        }
      },
      "26": {
        start: {
          line: 194,
          column: 35
        },
        end: {
          line: 203,
          column: 1
        }
      },
      "27": {
        start: {
          line: 208,
          column: 33
        },
        end: {
          line: 228,
          column: 1
        }
      },
      "28": {
        start: {
          line: 209,
          column: 15
        },
        end: {
          line: 209,
          column: 21
        }
      },
      "29": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 210,
          column: 39
        }
      },
      "30": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 225,
          column: 5
        }
      },
      "31": {
        start: {
          line: 215,
          column: 30
        },
        end: {
          line: 222,
          column: 10
        }
      },
      "32": {
        start: {
          line: 218,
          column: 32
        },
        end: {
          line: 218,
          column: 35
        }
      },
      "33": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 45
        }
      },
      "34": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 227,
          column: 11
        }
      },
      "35": {
        start: {
          line: 233,
          column: 30
        },
        end: {
          line: 252,
          column: 2
        }
      },
      "36": {
        start: {
          line: 236,
          column: 27
        },
        end: {
          line: 236,
          column: 33
        }
      },
      "37": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 242,
          column: 11
        }
      },
      "38": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 248,
          column: 11
        }
      },
      "39": {
        start: {
          line: 257,
          column: 36
        },
        end: {
          line: 281,
          column: 1
        }
      },
      "40": {
        start: {
          line: 258,
          column: 19
        },
        end: {
          line: 258,
          column: 29
        }
      },
      "41": {
        start: {
          line: 259,
          column: 17
        },
        end: {
          line: 259,
          column: 25
        }
      },
      "42": {
        start: {
          line: 262,
          column: 4
        },
        end: {
          line: 265,
          column: 5
        }
      },
      "43": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 264,
          column: 22
        }
      },
      "44": {
        start: {
          line: 267,
          column: 4
        },
        end: {
          line: 269,
          column: 5
        }
      },
      "45": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 268,
          column: 61
        }
      },
      "46": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 273,
          column: 5
        }
      },
      "47": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 272,
          column: 54
        }
      },
      "48": {
        start: {
          line: 275,
          column: 4
        },
        end: {
          line: 277,
          column: 5
        }
      },
      "49": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 57
        }
      },
      "50": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 280,
          column: 48
        }
      },
      "51": {
        start: {
          line: 286,
          column: 32
        },
        end: {
          line: 312,
          column: 1
        }
      },
      "52": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 300,
          column: 10
        }
      },
      "53": {
        start: {
          line: 293,
          column: 39
        },
        end: {
          line: 293,
          column: 78
        }
      },
      "54": {
        start: {
          line: 294,
          column: 39
        },
        end: {
          line: 298,
          column: 17
        }
      },
      "55": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 304,
          column: 30
        }
      },
      "56": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 305,
          column: 51
        }
      },
      "57": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 309,
          column: 30
        }
      },
      "58": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 310,
          column: 57
        }
      },
      "59": {
        start: {
          line: 317,
          column: 32
        },
        end: {
          line: 329,
          column: 1
        }
      },
      "60": {
        start: {
          line: 318,
          column: 16
        },
        end: {
          line: 318,
          column: 26
        }
      },
      "61": {
        start: {
          line: 319,
          column: 23
        },
        end: {
          line: 319,
          column: 36
        }
      },
      "62": {
        start: {
          line: 322,
          column: 4
        },
        end: {
          line: 326,
          column: 5
        }
      },
      "63": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "64": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 37
        }
      },
      "65": {
        start: {
          line: 328,
          column: 4
        },
        end: {
          line: 328,
          column: 48
        }
      },
      "66": {
        start: {
          line: 332,
          column: 0
        },
        end: {
          line: 332,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 16,
            column: 27
          },
          end: {
            line: 16,
            column: 28
          }
        },
        loc: {
          start: {
            line: 16,
            column: 36
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 16
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 26,
            column: 30
          },
          end: {
            line: 26,
            column: 31
          }
        },
        loc: {
          start: {
            line: 26,
            column: 44
          },
          end: {
            line: 77,
            column: 1
          }
        },
        line: 26
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 25
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 27
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 82,
            column: 23
          },
          end: {
            line: 82,
            column: 24
          }
        },
        loc: {
          start: {
            line: 82,
            column: 48
          },
          end: {
            line: 94,
            column: 1
          }
        },
        line: 82
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 89,
            column: 14
          },
          end: {
            line: 89,
            column: 15
          }
        },
        loc: {
          start: {
            line: 89,
            column: 23
          },
          end: {
            line: 92,
            column: 9
          }
        },
        line: 89
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 208,
            column: 33
          },
          end: {
            line: 208,
            column: 34
          }
        },
        loc: {
          start: {
            line: 208,
            column: 53
          },
          end: {
            line: 228,
            column: 1
          }
        },
        line: 208
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 218,
            column: 26
          },
          end: {
            line: 218,
            column: 27
          }
        },
        loc: {
          start: {
            line: 218,
            column: 32
          },
          end: {
            line: 218,
            column: 35
          }
        },
        line: 218
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 236,
            column: 18
          },
          end: {
            line: 236,
            column: 19
          }
        },
        loc: {
          start: {
            line: 236,
            column: 27
          },
          end: {
            line: 236,
            column: 33
          }
        },
        line: 236
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 237,
            column: 13
          },
          end: {
            line: 237,
            column: 14
          }
        },
        loc: {
          start: {
            line: 237,
            column: 27
          },
          end: {
            line: 249,
            column: 5
          }
        },
        line: 237
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 257,
            column: 36
          },
          end: {
            line: 257,
            column: 37
          }
        },
        loc: {
          start: {
            line: 257,
            column: 56
          },
          end: {
            line: 281,
            column: 1
          }
        },
        line: 257
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 287,
            column: 14
          },
          end: {
            line: 287,
            column: 15
          }
        },
        loc: {
          start: {
            line: 287,
            column: 20
          },
          end: {
            line: 301,
            column: 5
          }
        },
        line: 287
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 293,
            column: 24
          },
          end: {
            line: 293,
            column: 25
          }
        },
        loc: {
          start: {
            line: 293,
            column: 39
          },
          end: {
            line: 293,
            column: 78
          }
        },
        line: 293
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 294,
            column: 21
          },
          end: {
            line: 294,
            column: 22
          }
        },
        loc: {
          start: {
            line: 294,
            column: 39
          },
          end: {
            line: 298,
            column: 17
          }
        },
        line: 294
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 303,
            column: 21
          },
          end: {
            line: 303,
            column: 22
          }
        },
        loc: {
          start: {
            line: 303,
            column: 27
          },
          end: {
            line: 306,
            column: 5
          }
        },
        line: 303
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 308,
            column: 21
          },
          end: {
            line: 308,
            column: 22
          }
        },
        loc: {
          start: {
            line: 308,
            column: 29
          },
          end: {
            line: 311,
            column: 5
          }
        },
        line: 308
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 317,
            column: 32
          },
          end: {
            line: 317,
            column: 33
          }
        },
        loc: {
          start: {
            line: 317,
            column: 38
          },
          end: {
            line: 329,
            column: 1
          }
        },
        line: 317
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 22
          },
          end: {
            line: 18,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 22
          },
          end: {
            line: 18,
            column: 43
          }
        }, {
          start: {
            line: 18,
            column: 47
          },
          end: {
            line: 18,
            column: 56
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 22
          },
          end: {
            line: 19,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 22
          },
          end: {
            line: 19,
            column: 48
          }
        }, {
          start: {
            line: 19,
            column: 52
          },
          end: {
            line: 19,
            column: 58
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "4": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "5": {
        loc: {
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 225,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 225,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "6": {
        loc: {
          start: {
            line: 262,
            column: 4
          },
          end: {
            line: 265,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 4
          },
          end: {
            line: 265,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "7": {
        loc: {
          start: {
            line: 262,
            column: 8
          },
          end: {
            line: 262,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 262,
            column: 8
          },
          end: {
            line: 262,
            column: 24
          }
        }, {
          start: {
            line: 262,
            column: 28
          },
          end: {
            line: 262,
            column: 52
          }
        }],
        line: 262
      },
      "8": {
        loc: {
          start: {
            line: 267,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 267,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 267
      },
      "9": {
        loc: {
          start: {
            line: 267,
            column: 8
          },
          end: {
            line: 267,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 267,
            column: 8
          },
          end: {
            line: 267,
            column: 25
          }
        }, {
          start: {
            line: 267,
            column: 29
          },
          end: {
            line: 267,
            column: 55
          }
        }],
        line: 267
      },
      "10": {
        loc: {
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "11": {
        loc: {
          start: {
            line: 271,
            column: 8
          },
          end: {
            line: 271,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 271,
            column: 8
          },
          end: {
            line: 271,
            column: 25
          }
        }, {
          start: {
            line: 271,
            column: 29
          },
          end: {
            line: 271,
            column: 52
          }
        }],
        line: 271
      },
      "12": {
        loc: {
          start: {
            line: 275,
            column: 4
          },
          end: {
            line: 277,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 4
          },
          end: {
            line: 277,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 275
      },
      "13": {
        loc: {
          start: {
            line: 323,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 323,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 323
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dab0574a7289752ff4ae98e2382f4b6f0a278037"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_kz438n1j9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_kz438n1j9();
/**
 * Advanced Rate Limiting Configuration
 * Comprehensive rate limiting for all API endpoints
 */

import rateLimit from 'express-rate-limit';
import slowDown from 'express-slow-down';

// Store for tracking failed attempts and suspicious activity
const attemptStore =
/* istanbul ignore next */
(cov_kz438n1j9().s[0]++, new Map());
const suspiciousIPs =
/* istanbul ignore next */
(cov_kz438n1j9().s[1]++, new Set());

/**
 * Custom key generator for more granular rate limiting
 */
/* istanbul ignore next */
cov_kz438n1j9().s[2]++;
const customKeyGenerator = req => {
  /* istanbul ignore next */
  cov_kz438n1j9().f[0]++;
  // Combine IP with user agent for better fingerprinting
  const userAgent =
  /* istanbul ignore next */
  (cov_kz438n1j9().s[3]++,
  /* istanbul ignore next */
  (cov_kz438n1j9().b[0][0]++, req.get('User-Agent')) ||
  /* istanbul ignore next */
  (cov_kz438n1j9().b[0][1]++, 'unknown'));
  const forwarded =
  /* istanbul ignore next */
  (cov_kz438n1j9().s[4]++,
  /* istanbul ignore next */
  (cov_kz438n1j9().b[1][0]++, req.get('X-Forwarded-For')) ||
  /* istanbul ignore next */
  (cov_kz438n1j9().b[1][1]++, req.ip));
  /* istanbul ignore next */
  cov_kz438n1j9().s[5]++;
  return `${forwarded}-${userAgent.substring(0, 50)}`;
};

/**
 * Enhanced handler with security logging and adaptive measures
 */
/* istanbul ignore next */
cov_kz438n1j9().s[6]++;
const createSecurityHandler = endpoint => {
  /* istanbul ignore next */
  cov_kz438n1j9().f[1]++;
  cov_kz438n1j9().s[7]++;
  return (req, res) => {
    /* istanbul ignore next */
    cov_kz438n1j9().f[2]++;
    const key =
    /* istanbul ignore next */
    (cov_kz438n1j9().s[8]++, customKeyGenerator(req));
    const now =
    /* istanbul ignore next */
    (cov_kz438n1j9().s[9]++, Date.now());

    // Track failed attempts
    /* istanbul ignore next */
    cov_kz438n1j9().s[10]++;
    if (!attemptStore.has(key)) {
      /* istanbul ignore next */
      cov_kz438n1j9().b[2][0]++;
      cov_kz438n1j9().s[11]++;
      attemptStore.set(key, {
        count: 0,
        firstAttempt: now,
        lastAttempt: now
      });
    } else
    /* istanbul ignore next */
    {
      cov_kz438n1j9().b[2][1]++;
    }
    const attempts =
    /* istanbul ignore next */
    (cov_kz438n1j9().s[12]++, attemptStore.get(key));
    /* istanbul ignore next */
    cov_kz438n1j9().s[13]++;
    attempts.count++;
    /* istanbul ignore next */
    cov_kz438n1j9().s[14]++;
    attempts.lastAttempt = now;

    // Mark as suspicious after multiple rate limit hits
    /* istanbul ignore next */
    cov_kz438n1j9().s[15]++;
    if (attempts.count > 5) {
      /* istanbul ignore next */
      cov_kz438n1j9().b[3][0]++;
      cov_kz438n1j9().s[16]++;
      suspiciousIPs.add(req.ip);
      /* istanbul ignore next */
      cov_kz438n1j9().s[17]++;
      console.error('Suspicious activity detected:', {
        ip: req.ip,
        userAgent: req.get('User-Agent'),
        endpoint: endpoint,
        attempts: attempts.count,
        timeSpan: now - attempts.firstAttempt,
        timestamp: new Date().toISOString()
      });
    } else
    /* istanbul ignore next */
    {
      cov_kz438n1j9().b[3][1]++;
    }

    // Clean old entries (older than 1 hour)
    cov_kz438n1j9().s[18]++;
    if (now - attempts.firstAttempt > 3600000) {
      /* istanbul ignore next */
      cov_kz438n1j9().b[4][0]++;
      cov_kz438n1j9().s[19]++;
      attemptStore.delete(key);
    } else
    /* istanbul ignore next */
    {
      cov_kz438n1j9().b[4][1]++;
    }

    // Log rate limit hit
    cov_kz438n1j9().s[20]++;
    console.warn('Rate limit exceeded:', {
      ip: req.ip,
      userAgent: req.get('User-Agent'),
      endpoint: endpoint,
      method: req.method,
      url: req.originalUrl,
      totalAttempts: attempts.count,
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_kz438n1j9().s[21]++;
    res.status(429).json({
      success: false,
      message: 'Rate limit exceeded',
      endpoint: endpoint,
      retryAfter: 3600,
      timestamp: new Date().toISOString()
    });
  };
};

/**
 * Progressive delay for repeated requests
 */
/* istanbul ignore next */
cov_kz438n1j9().s[22]++;
const createSlowDown = (delayAfter, delayMs) => {
  /* istanbul ignore next */
  cov_kz438n1j9().f[3]++;
  cov_kz438n1j9().s[23]++;
  return slowDown({
    windowMs: 15 * 60 * 1000,
    // 15 minutes
    delayAfter: delayAfter,
    delayMs: delayMs,
    maxDelayMs: 20000,
    // Max 20 second delay
    keyGenerator: customKeyGenerator,
    skip: req => {
      /* istanbul ignore next */
      cov_kz438n1j9().f[4]++;
      cov_kz438n1j9().s[24]++;
      // Skip delay for health checks
      return req.url.includes('/health');
    }
  });
};

/**
 * Endpoint-specific rate limiters
 */
export const endpointLimiters =
/* istanbul ignore next */
(cov_kz438n1j9().s[25]++, {
  // Authentication endpoints (very strict)
  auth: rateLimit({
    windowMs: 15 * 60 * 1000,
    // 15 minutes
    max: 5,
    keyGenerator: customKeyGenerator,
    handler: createSecurityHandler('auth'),
    standardHeaders: true,
    legacyHeaders: false
  }),
  // Registration endpoints
  registration: rateLimit({
    windowMs: 60 * 60 * 1000,
    // 1 hour
    max: 5,
    keyGenerator: customKeyGenerator,
    handler: createSecurityHandler('registration'),
    standardHeaders: true,
    legacyHeaders: false
  }),
  // Email endpoints
  email: rateLimit({
    windowMs: 60 * 60 * 1000,
    // 1 hour
    max: 10,
    keyGenerator: customKeyGenerator,
    handler: createSecurityHandler('email'),
    standardHeaders: true,
    legacyHeaders: false
  }),
  // File upload endpoints
  upload: rateLimit({
    windowMs: 60 * 60 * 1000,
    // 1 hour
    max: 20,
    keyGenerator: customKeyGenerator,
    handler: createSecurityHandler('upload'),
    standardHeaders: true,
    legacyHeaders: false
  }),
  // Search endpoints
  search: rateLimit({
    windowMs: 5 * 60 * 1000,
    // 5 minutes
    max: 100,
    keyGenerator: customKeyGenerator,
    handler: createSecurityHandler('search'),
    standardHeaders: true,
    legacyHeaders: false
  }),
  // API creation endpoints (POST/PUT/DELETE)
  creation: rateLimit({
    windowMs: 15 * 60 * 1000,
    // 15 minutes
    max: 30,
    keyGenerator: customKeyGenerator,
    handler: createSecurityHandler('creation'),
    standardHeaders: true,
    legacyHeaders: false
  }),
  // Admin endpoints
  admin: rateLimit({
    windowMs: 10 * 60 * 1000,
    // 10 minutes
    max: 50,
    keyGenerator: customKeyGenerator,
    handler: createSecurityHandler('admin'),
    standardHeaders: true,
    legacyHeaders: false
  }),
  // WordPress integration endpoints
  wordpress: rateLimit({
    windowMs: 60 * 60 * 1000,
    // 1 hour
    max: 30,
    keyGenerator: customKeyGenerator,
    handler: createSecurityHandler('wordpress'),
    standardHeaders: true,
    legacyHeaders: false
  }),
  // General API endpoints
  api: rateLimit({
    windowMs: 15 * 60 * 1000,
    // 15 minutes
    max: 100,
    keyGenerator: customKeyGenerator,
    handler: createSecurityHandler('api'),
    standardHeaders: true,
    legacyHeaders: false
  })
});

/**
 * Progressive slow-down middleware
 */
export const progressiveSlowDown =
/* istanbul ignore next */
(cov_kz438n1j9().s[26]++, {
  // Slow down after 20 requests
  light: createSlowDown(20, 500),
  // Slow down after 10 requests
  medium: createSlowDown(10, 1000),
  // Slow down after 5 requests
  heavy: createSlowDown(5, 2000)
});

/**
 * Adaptive rate limiting based on request patterns
 */
/* istanbul ignore next */
cov_kz438n1j9().s[27]++;
export const adaptiveRateLimit = (req, res, next) => {
  /* istanbul ignore next */
  cov_kz438n1j9().f[5]++;
  const ip =
  /* istanbul ignore next */
  (cov_kz438n1j9().s[28]++, req.ip);
  const key =
  /* istanbul ignore next */
  (cov_kz438n1j9().s[29]++, customKeyGenerator(req));

  // Check if IP is marked as suspicious
  /* istanbul ignore next */
  cov_kz438n1j9().s[30]++;
  if (suspiciousIPs.has(ip)) {
    /* istanbul ignore next */
    cov_kz438n1j9().b[5][0]++;
    // Apply stricter limits for suspicious IPs
    const strictLimiter =
    /* istanbul ignore next */
    (cov_kz438n1j9().s[31]++, rateLimit({
      windowMs: 60 * 60 * 1000,
      // 1 hour
      max: 10,
      // Very low limit
      keyGenerator: () => {
        /* istanbul ignore next */
        cov_kz438n1j9().f[6]++;
        cov_kz438n1j9().s[32]++;
        return key;
      },
      handler: createSecurityHandler('suspicious'),
      standardHeaders: true,
      legacyHeaders: false
    }));
    /* istanbul ignore next */
    cov_kz438n1j9().s[33]++;
    return strictLimiter(req, res, next);
  } else
  /* istanbul ignore next */
  {
    cov_kz438n1j9().b[5][1]++;
  }
  cov_kz438n1j9().s[34]++;
  next();
};

/**
 * DDoS protection middleware
 */
export const ddosProtection =
/* istanbul ignore next */
(cov_kz438n1j9().s[35]++, rateLimit({
  windowMs: 1 * 60 * 1000,
  // 1 minute
  max: 200,
  // Allow up to 200 requests per minute per IP
  keyGenerator: req => {
    /* istanbul ignore next */
    cov_kz438n1j9().f[7]++;
    cov_kz438n1j9().s[36]++;
    return req.ip;
  },
  handler: (req, res) => {
    /* istanbul ignore next */
    cov_kz438n1j9().f[8]++;
    cov_kz438n1j9().s[37]++;
    console.error('Potential DDoS attack detected:', {
      ip: req.ip,
      userAgent: req.get('User-Agent'),
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_kz438n1j9().s[38]++;
    res.status(429).json({
      success: false,
      message: 'Too many requests - potential DDoS detected',
      timestamp: new Date().toISOString()
    });
  },
  standardHeaders: true,
  legacyHeaders: false
}));

/**
 * Conditional rate limiting based on request type
 */
/* istanbul ignore next */
cov_kz438n1j9().s[39]++;
export const conditionalRateLimit = (req, res, next) => {
  /* istanbul ignore next */
  cov_kz438n1j9().f[9]++;
  const method =
  /* istanbul ignore next */
  (cov_kz438n1j9().s[40]++, req.method);
  const path =
  /* istanbul ignore next */
  (cov_kz438n1j9().s[41]++, req.path);

  // Apply different limits based on operation type
  /* istanbul ignore next */
  cov_kz438n1j9().s[42]++;
  if (
  /* istanbul ignore next */
  (cov_kz438n1j9().b[7][0]++, method === 'GET') &&
  /* istanbul ignore next */
  (cov_kz438n1j9().b[7][1]++, path.includes('/health'))) {
    /* istanbul ignore next */
    cov_kz438n1j9().b[6][0]++;
    cov_kz438n1j9().s[43]++;
    // No limits for health checks
    return next();
  } else
  /* istanbul ignore next */
  {
    cov_kz438n1j9().b[6][1]++;
  }
  cov_kz438n1j9().s[44]++;
  if (
  /* istanbul ignore next */
  (cov_kz438n1j9().b[9][0]++, method === 'POST') &&
  /* istanbul ignore next */
  (cov_kz438n1j9().b[9][1]++, path.includes('/register'))) {
    /* istanbul ignore next */
    cov_kz438n1j9().b[8][0]++;
    cov_kz438n1j9().s[45]++;
    return endpointLimiters.registration(req, res, next);
  } else
  /* istanbul ignore next */
  {
    cov_kz438n1j9().b[8][1]++;
  }
  cov_kz438n1j9().s[46]++;
  if (
  /* istanbul ignore next */
  (cov_kz438n1j9().b[11][0]++, method === 'POST') &&
  /* istanbul ignore next */
  (cov_kz438n1j9().b[11][1]++, path.includes('/email'))) {
    /* istanbul ignore next */
    cov_kz438n1j9().b[10][0]++;
    cov_kz438n1j9().s[47]++;
    return endpointLimiters.email(req, res, next);
  } else
  /* istanbul ignore next */
  {
    cov_kz438n1j9().b[10][1]++;
  }
  cov_kz438n1j9().s[48]++;
  if (['POST', 'PUT', 'DELETE'].includes(method)) {
    /* istanbul ignore next */
    cov_kz438n1j9().b[12][0]++;
    cov_kz438n1j9().s[49]++;
    return endpointLimiters.creation(req, res, next);
  } else
  /* istanbul ignore next */
  {
    cov_kz438n1j9().b[12][1]++;
  }

  // Default to general API limits
  cov_kz438n1j9().s[50]++;
  return endpointLimiters.api(req, res, next);
};

/**
 * Rate limit monitoring and reporting
 */
export const rateLimitMonitor =
/* istanbul ignore next */
(cov_kz438n1j9().s[51]++, {
  getStats: () => {
    /* istanbul ignore next */
    cov_kz438n1j9().f[10]++;
    cov_kz438n1j9().s[52]++;
    return {
      totalAttempts: attemptStore.size,
      suspiciousIPs: suspiciousIPs.size,
      suspiciousIPsList: Array.from(suspiciousIPs),
      recentAttempts: Array.from(attemptStore.entries()).filter(([_, data]) => {
        /* istanbul ignore next */
        cov_kz438n1j9().f[11]++;
        cov_kz438n1j9().s[53]++;
        return Date.now() - data.lastAttempt < 3600000;
      }).map(([key, data]) => {
        /* istanbul ignore next */
        cov_kz438n1j9().f[12]++;
        cov_kz438n1j9().s[54]++;
        return {
          key: key.substring(0, 50),
          attempts: data.count,
          timeSpan: Date.now() - data.firstAttempt
        };
      }),
      timestamp: new Date().toISOString()
    };
  },
  clearSuspicious: () => {
    /* istanbul ignore next */
    cov_kz438n1j9().f[13]++;
    cov_kz438n1j9().s[55]++;
    suspiciousIPs.clear();
    /* istanbul ignore next */
    cov_kz438n1j9().s[56]++;
    console.log('Suspicious IPs list cleared');
  },
  addToSuspicious: ip => {
    /* istanbul ignore next */
    cov_kz438n1j9().f[14]++;
    cov_kz438n1j9().s[57]++;
    suspiciousIPs.add(ip);
    /* istanbul ignore next */
    cov_kz438n1j9().s[58]++;
    console.warn('IP added to suspicious list:', ip);
  }
});

/**
 * Cleanup middleware to prevent memory leaks
 */
/* istanbul ignore next */
cov_kz438n1j9().s[59]++;
export const cleanupRateLimit = () => {
  /* istanbul ignore next */
  cov_kz438n1j9().f[15]++;
  const now =
  /* istanbul ignore next */
  (cov_kz438n1j9().s[60]++, Date.now());
  const oneHourAgo =
  /* istanbul ignore next */
  (cov_kz438n1j9().s[61]++, now - 3600000);

  // Clean old attempt records
  /* istanbul ignore next */
  cov_kz438n1j9().s[62]++;
  for (const [key, data] of attemptStore.entries()) {
    /* istanbul ignore next */
    cov_kz438n1j9().s[63]++;
    if (data.lastAttempt < oneHourAgo) {
      /* istanbul ignore next */
      cov_kz438n1j9().b[13][0]++;
      cov_kz438n1j9().s[64]++;
      attemptStore.delete(key);
    } else
    /* istanbul ignore next */
    {
      cov_kz438n1j9().b[13][1]++;
    }
  }
  /* istanbul ignore next */
  cov_kz438n1j9().s[65]++;
  console.log('Rate limit cleanup completed');
};

// Run cleanup every 30 minutes
/* istanbul ignore next */
cov_kz438n1j9().s[66]++;
setInterval(cleanupRateLimit, 30 * 60 * 1000);
export default {
  endpointLimiters,
  progressiveSlowDown,
  adaptiveRateLimit,
  ddosProtection,
  conditionalRateLimit,
  rateLimitMonitor,
  cleanupRateLimit
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,