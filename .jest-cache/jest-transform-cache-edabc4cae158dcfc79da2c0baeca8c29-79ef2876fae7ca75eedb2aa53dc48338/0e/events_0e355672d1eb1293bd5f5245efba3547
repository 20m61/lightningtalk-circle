b0fbc06a6761542f748182cc3cc4b1f0
/* istanbul ignore next */
function cov_b9hc7fgit() {
  var path = "/home/ec2-user/workspace/lightningtalk-circle/server/routes/events.js";
  var hash = "6a8ecff3e96e4b0d8a5abcd4240cc3bae8d94558";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ec2-user/workspace/lightningtalk-circle/server/routes/events.js",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 31
        }
      },
      "1": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 28
        }
      },
      "2": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 26
        }
      },
      "3": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 29
        }
      },
      "4": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 104,
          column: 3
        }
      },
      "5": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 103,
          column: 5
        }
      },
      "6": {
        start: {
          line: 28,
          column: 29
        },
        end: {
          line: 28,
          column: 43
        }
      },
      "7": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 21
        }
      },
      "8": {
        start: {
          line: 39,
          column: 23
        },
        end: {
          line: 39,
          column: 25
        }
      },
      "9": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 43
        }
      },
      "10": {
        start: {
          line: 40,
          column: 20
        },
        end: {
          line: 40,
          column: 43
        }
      },
      "11": {
        start: {
          line: 43,
          column: 21
        },
        end: {
          line: 43,
          column: 61
        }
      },
      "12": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "13": {
        start: {
          line: 47,
          column: 24
        },
        end: {
          line: 47,
          column: 34
        }
      },
      "14": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 72
        }
      },
      "15": {
        start: {
          line: 48,
          column: 44
        },
        end: {
          line: 48,
          column: 70
        }
      },
      "16": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 59,
          column: 11
        }
      },
      "17": {
        start: {
          line: 53,
          column: 27
        },
        end: {
          line: 53,
          column: 46
        }
      },
      "18": {
        start: {
          line: 54,
          column: 27
        },
        end: {
          line: 54,
          column: 46
        }
      },
      "19": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 57,
          column: 13
        }
      },
      "20": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 39
        }
      },
      "21": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 35
        }
      },
      "22": {
        start: {
          line: 62,
          column: 22
        },
        end: {
          line: 62,
          column: 35
        }
      },
      "23": {
        start: {
          line: 63,
          column: 32
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "24": {
        start: {
          line: 69,
          column: 31
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "25": {
        start: {
          line: 71,
          column: 54
        },
        end: {
          line: 74,
          column: 18
        }
      },
      "26": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 83,
          column: 18
        }
      },
      "27": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 95,
          column: 11
        }
      },
      "28": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 55
        }
      },
      "29": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 102,
          column: 11
        }
      },
      "30": {
        start: {
          line: 110,
          column: 0
        },
        end: {
          line: 151,
          column: 3
        }
      },
      "31": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 150,
          column: 5
        }
      },
      "32": {
        start: {
          line: 112,
          column: 29
        },
        end: {
          line: 112,
          column: 43
        }
      },
      "33": {
        start: {
          line: 114,
          column: 29
        },
        end: {
          line: 114,
          column: 61
        }
      },
      "34": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 121,
          column: 9
        }
      },
      "35": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 120,
          column: 15
        }
      },
      "36": {
        start: {
          line: 124,
          column: 57
        },
        end: {
          line: 128,
          column: 10
        }
      },
      "37": {
        start: {
          line: 130,
          column: 30
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "38": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 142,
          column: 11
        }
      },
      "39": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 62
        }
      },
      "40": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 149,
          column: 11
        }
      },
      "41": {
        start: {
          line: 157,
          column: 0
        },
        end: {
          line: 230,
          column: 2
        }
      },
      "42": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "43": {
        start: {
          line: 162,
          column: 33
        },
        end: {
          line: 162,
          column: 47
        }
      },
      "44": {
        start: {
          line: 163,
          column: 27
        },
        end: {
          line: 163,
          column: 37
        }
      },
      "45": {
        start: {
          line: 164,
          column: 74
        },
        end: {
          line: 164,
          column: 83
        }
      },
      "46": {
        start: {
          line: 166,
          column: 26
        },
        end: {
          line: 166,
          column: 63
        }
      },
      "47": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 173,
          column: 13
        }
      },
      "48": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 172,
          column: 19
        }
      },
      "49": {
        start: {
          line: 176,
          column: 50
        },
        end: {
          line: 179,
          column: 14
        }
      },
      "50": {
        start: {
          line: 181,
          column: 34
        },
        end: {
          line: 188,
          column: 13
        }
      },
      "51": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 201,
          column: 13
        }
      },
      "52": {
        start: {
          line: 192,
          column: 37
        },
        end: {
          line: 192,
          column: 92
        }
      },
      "53": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 200,
          column: 20
        }
      },
      "54": {
        start: {
          line: 193,
          column: 68
        },
        end: {
          line: 200,
          column: 17
        }
      },
      "55": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 216,
          column: 13
        }
      },
      "56": {
        start: {
          line: 205,
          column: 30
        },
        end: {
          line: 205,
          column: 78
        }
      },
      "57": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 215,
          column: 20
        }
      },
      "58": {
        start: {
          line: 206,
          column: 54
        },
        end: {
          line: 215,
          column: 17
        }
      },
      "59": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 220,
          column: 15
        }
      },
      "60": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 58
        }
      },
      "61": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 227,
          column: 15
        }
      },
      "62": {
        start: {
          line: 236,
          column: 0
        },
        end: {
          line: 290,
          column: 2
        }
      },
      "63": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 288,
          column: 9
        }
      },
      "64": {
        start: {
          line: 242,
          column: 47
        },
        end: {
          line: 242,
          column: 61
        }
      },
      "65": {
        start: {
          line: 243,
          column: 30
        },
        end: {
          line: 243,
          column: 38
        }
      },
      "66": {
        start: {
          line: 246,
          column: 28
        },
        end: {
          line: 246,
          column: 92
        }
      },
      "67": {
        start: {
          line: 249,
          column: 29
        },
        end: {
          line: 267,
          column: 13
        }
      },
      "68": {
        start: {
          line: 269,
          column: 26
        },
        end: {
          line: 269,
          column: 67
        }
      },
      "69": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 274,
          column: 15
        }
      },
      "70": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 280,
          column: 15
        }
      },
      "71": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 283,
          column: 58
        }
      },
      "72": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 287,
          column: 15
        }
      },
      "73": {
        start: {
          line: 296,
          column: 0
        },
        end: {
          line: 362,
          column: 2
        }
      },
      "74": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 360,
          column: 9
        }
      },
      "75": {
        start: {
          line: 302,
          column: 47
        },
        end: {
          line: 302,
          column: 61
        }
      },
      "76": {
        start: {
          line: 303,
          column: 27
        },
        end: {
          line: 303,
          column: 37
        }
      },
      "77": {
        start: {
          line: 304,
          column: 28
        },
        end: {
          line: 304,
          column: 36
        }
      },
      "78": {
        start: {
          line: 307,
          column: 26
        },
        end: {
          line: 307,
          column: 63
        }
      },
      "79": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 313,
          column: 13
        }
      },
      "80": {
        start: {
          line: 309,
          column: 16
        },
        end: {
          line: 312,
          column: 19
        }
      },
      "81": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 328,
          column: 13
        }
      },
      "82": {
        start: {
          line: 317,
          column: 34
        },
        end: {
          line: 317,
          column: 70
        }
      },
      "83": {
        start: {
          line: 318,
          column: 32
        },
        end: {
          line: 320,
          column: 68
        }
      },
      "84": {
        start: {
          line: 322,
          column: 16
        },
        end: {
          line: 327,
          column: 17
        }
      },
      "85": {
        start: {
          line: 323,
          column: 20
        },
        end: {
          line: 326,
          column: 23
        }
      },
      "86": {
        start: {
          line: 331,
          column: 34
        },
        end: {
          line: 335,
          column: 13
        }
      },
      "87": {
        start: {
          line: 338,
          column: 33
        },
        end: {
          line: 338,
          column: 83
        }
      },
      "88": {
        start: {
          line: 341,
          column: 12
        },
        end: {
          line: 346,
          column: 13
        }
      },
      "89": {
        start: {
          line: 342,
          column: 16
        },
        end: {
          line: 345,
          column: 19
        }
      },
      "90": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 352,
          column: 15
        }
      },
      "91": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 355,
          column: 58
        }
      },
      "92": {
        start: {
          line: 356,
          column: 12
        },
        end: {
          line: 359,
          column: 15
        }
      },
      "93": {
        start: {
          line: 368,
          column: 0
        },
        end: {
          line: 424,
          column: 2
        }
      },
      "94": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 422,
          column: 9
        }
      },
      "95": {
        start: {
          line: 373,
          column: 47
        },
        end: {
          line: 373,
          column: 61
        }
      },
      "96": {
        start: {
          line: 374,
          column: 27
        },
        end: {
          line: 374,
          column: 37
        }
      },
      "97": {
        start: {
          line: 377,
          column: 26
        },
        end: {
          line: 377,
          column: 63
        }
      },
      "98": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 383,
          column: 13
        }
      },
      "99": {
        start: {
          line: 379,
          column: 16
        },
        end: {
          line: 382,
          column: 19
        }
      },
      "100": {
        start: {
          line: 386,
          column: 37
        },
        end: {
          line: 386,
          column: 90
        }
      },
      "101": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 393,
          column: 13
        }
      },
      "102": {
        start: {
          line: 388,
          column: 16
        },
        end: {
          line: 392,
          column: 19
        }
      },
      "103": {
        start: {
          line: 396,
          column: 26
        },
        end: {
          line: 396,
          column: 74
        }
      },
      "104": {
        start: {
          line: 397,
          column: 12
        },
        end: {
          line: 399,
          column: 13
        }
      },
      "105": {
        start: {
          line: 398,
          column: 16
        },
        end: {
          line: 398,
          column: 56
        }
      },
      "106": {
        start: {
          line: 402,
          column: 12
        },
        end: {
          line: 402,
          column: 48
        }
      },
      "107": {
        start: {
          line: 405,
          column: 12
        },
        end: {
          line: 408,
          column: 15
        }
      },
      "108": {
        start: {
          line: 410,
          column: 12
        },
        end: {
          line: 414,
          column: 15
        }
      },
      "109": {
        start: {
          line: 417,
          column: 12
        },
        end: {
          line: 417,
          column: 58
        }
      },
      "110": {
        start: {
          line: 418,
          column: 12
        },
        end: {
          line: 421,
          column: 15
        }
      },
      "111": {
        start: {
          line: 430,
          column: 0
        },
        end: {
          line: 499,
          column: 2
        }
      },
      "112": {
        start: {
          line: 434,
          column: 8
        },
        end: {
          line: 497,
          column: 9
        }
      },
      "113": {
        start: {
          line: 435,
          column: 33
        },
        end: {
          line: 435,
          column: 47
        }
      },
      "114": {
        start: {
          line: 436,
          column: 27
        },
        end: {
          line: 436,
          column: 37
        }
      },
      "115": {
        start: {
          line: 439,
          column: 26
        },
        end: {
          line: 439,
          column: 63
        }
      },
      "116": {
        start: {
          line: 440,
          column: 12
        },
        end: {
          line: 445,
          column: 13
        }
      },
      "117": {
        start: {
          line: 441,
          column: 16
        },
        end: {
          line: 444,
          column: 19
        }
      },
      "118": {
        start: {
          line: 448,
          column: 30
        },
        end: {
          line: 448,
          column: 66
        }
      },
      "119": {
        start: {
          line: 451,
          column: 33
        },
        end: {
          line: 451,
          column: 88
        }
      },
      "120": {
        start: {
          line: 452,
          column: 26
        },
        end: {
          line: 452,
          column: 74
        }
      },
      "121": {
        start: {
          line: 454,
          column: 38
        },
        end: {
          line: 479,
          column: 13
        }
      },
      "122": {
        start: {
          line: 470,
          column: 46
        },
        end: {
          line: 470,
          column: 51
        }
      },
      "123": {
        start: {
          line: 481,
          column: 12
        },
        end: {
          line: 489,
          column: 15
        }
      },
      "124": {
        start: {
          line: 492,
          column: 12
        },
        end: {
          line: 492,
          column: 62
        }
      },
      "125": {
        start: {
          line: 493,
          column: 12
        },
        end: {
          line: 496,
          column: 15
        }
      },
      "126": {
        start: {
          line: 505,
          column: 0
        },
        end: {
          line: 627,
          column: 2
        }
      },
      "127": {
        start: {
          line: 513,
          column: 8
        },
        end: {
          line: 625,
          column: 9
        }
      },
      "128": {
        start: {
          line: 514,
          column: 61
        },
        end: {
          line: 514,
          column: 75
        }
      },
      "129": {
        start: {
          line: 515,
          column: 27
        },
        end: {
          line: 515,
          column: 37
        }
      },
      "130": {
        start: {
          line: 516,
          column: 44
        },
        end: {
          line: 516,
          column: 52
        }
      },
      "131": {
        start: {
          line: 519,
          column: 26
        },
        end: {
          line: 519,
          column: 63
        }
      },
      "132": {
        start: {
          line: 520,
          column: 12
        },
        end: {
          line: 525,
          column: 13
        }
      },
      "133": {
        start: {
          line: 521,
          column: 16
        },
        end: {
          line: 524,
          column: 19
        }
      },
      "134": {
        start: {
          line: 528,
          column: 37
        },
        end: {
          line: 533,
          column: 13
        }
      },
      "135": {
        start: {
          line: 535,
          column: 12
        },
        end: {
          line: 540,
          column: 13
        }
      },
      "136": {
        start: {
          line: 536,
          column: 16
        },
        end: {
          line: 539,
          column: 19
        }
      },
      "137": {
        start: {
          line: 543,
          column: 33
        },
        end: {
          line: 547,
          column: 14
        }
      },
      "138": {
        start: {
          line: 550,
          column: 33
        },
        end: {
          line: 550,
          column: 88
        }
      },
      "139": {
        start: {
          line: 551,
          column: 29
        },
        end: {
          line: 551,
          column: 57
        }
      },
      "140": {
        start: {
          line: 553,
          column: 12
        },
        end: {
          line: 598,
          column: 13
        }
      },
      "141": {
        start: {
          line: 556,
          column: 20
        },
        end: {
          line: 559,
          column: 23
        }
      },
      "142": {
        start: {
          line: 562,
          column: 20
        },
        end: {
          line: 570,
          column: 21
        }
      },
      "143": {
        start: {
          line: 563,
          column: 24
        },
        end: {
          line: 569,
          column: 25
        }
      },
      "144": {
        start: {
          line: 564,
          column: 28
        },
        end: {
          line: 568,
          column: 29
        }
      },
      "145": {
        start: {
          line: 565,
          column: 32
        },
        end: {
          line: 565,
          column: 101
        }
      },
      "146": {
        start: {
          line: 567,
          column: 32
        },
        end: {
          line: 567,
          column: 91
        }
      },
      "147": {
        start: {
          line: 571,
          column: 20
        },
        end: {
          line: 571,
          column: 26
        }
      },
      "148": {
        start: {
          line: 575,
          column: 20
        },
        end: {
          line: 577,
          column: 23
        }
      },
      "149": {
        start: {
          line: 578,
          column: 20
        },
        end: {
          line: 578,
          column: 26
        }
      },
      "150": {
        start: {
          line: 582,
          column: 20
        },
        end: {
          line: 585,
          column: 23
        }
      },
      "151": {
        start: {
          line: 588,
          column: 20
        },
        end: {
          line: 596,
          column: 21
        }
      },
      "152": {
        start: {
          line: 589,
          column: 24
        },
        end: {
          line: 595,
          column: 25
        }
      },
      "153": {
        start: {
          line: 590,
          column: 28
        },
        end: {
          line: 594,
          column: 29
        }
      },
      "154": {
        start: {
          line: 591,
          column: 32
        },
        end: {
          line: 591,
          column: 91
        }
      },
      "155": {
        start: {
          line: 593,
          column: 32
        },
        end: {
          line: 593,
          column: 87
        }
      },
      "156": {
        start: {
          line: 597,
          column: 20
        },
        end: {
          line: 597,
          column: 26
        }
      },
      "157": {
        start: {
          line: 601,
          column: 12
        },
        end: {
          line: 606,
          column: 15
        }
      },
      "158": {
        start: {
          line: 608,
          column: 12
        },
        end: {
          line: 617,
          column: 15
        }
      },
      "159": {
        start: {
          line: 620,
          column: 12
        },
        end: {
          line: 620,
          column: 65
        }
      },
      "160": {
        start: {
          line: 621,
          column: 12
        },
        end: {
          line: 624,
          column: 15
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 24
          },
          end: {
            line: 104,
            column: 1
          }
        },
        line: 26
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 48,
            column: 35
          },
          end: {
            line: 48,
            column: 36
          }
        },
        loc: {
          start: {
            line: 48,
            column: 44
          },
          end: {
            line: 48,
            column: 70
          }
        },
        line: 48
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 52,
            column: 20
          },
          end: {
            line: 52,
            column: 21
          }
        },
        loc: {
          start: {
            line: 52,
            column: 30
          },
          end: {
            line: 59,
            column: 9
          }
        },
        line: 52
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 70,
            column: 32
          },
          end: {
            line: 70,
            column: 33
          }
        },
        loc: {
          start: {
            line: 70,
            column: 49
          },
          end: {
            line: 84,
            column: 13
          }
        },
        line: 70
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 110,
            column: 23
          },
          end: {
            line: 110,
            column: 24
          }
        },
        loc: {
          start: {
            line: 110,
            column: 43
          },
          end: {
            line: 151,
            column: 1
          }
        },
        line: 110
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 160,
            column: 4
          },
          end: {
            line: 160,
            column: 5
          }
        },
        loc: {
          start: {
            line: 160,
            column: 24
          },
          end: {
            line: 229,
            column: 5
          }
        },
        line: 160
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 193,
            column: 62
          },
          end: {
            line: 193,
            column: 63
          }
        },
        loc: {
          start: {
            line: 193,
            column: 68
          },
          end: {
            line: 200,
            column: 17
          }
        },
        line: 193
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 206,
            column: 48
          },
          end: {
            line: 206,
            column: 49
          }
        },
        loc: {
          start: {
            line: 206,
            column: 54
          },
          end: {
            line: 215,
            column: 17
          }
        },
        line: 206
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 240,
            column: 4
          },
          end: {
            line: 240,
            column: 5
          }
        },
        loc: {
          start: {
            line: 240,
            column: 24
          },
          end: {
            line: 289,
            column: 5
          }
        },
        line: 240
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 300,
            column: 4
          },
          end: {
            line: 300,
            column: 5
          }
        },
        loc: {
          start: {
            line: 300,
            column: 24
          },
          end: {
            line: 361,
            column: 5
          }
        },
        line: 300
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 371,
            column: 4
          },
          end: {
            line: 371,
            column: 5
          }
        },
        loc: {
          start: {
            line: 371,
            column: 24
          },
          end: {
            line: 423,
            column: 5
          }
        },
        line: 371
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 433,
            column: 4
          },
          end: {
            line: 433,
            column: 5
          }
        },
        loc: {
          start: {
            line: 433,
            column: 24
          },
          end: {
            line: 498,
            column: 5
          }
        },
        line: 433
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 470,
            column: 30
          },
          end: {
            line: 470,
            column: 31
          }
        },
        loc: {
          start: {
            line: 470,
            column: 46
          },
          end: {
            line: 470,
            column: 51
          }
        },
        line: 470
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 512,
            column: 4
          },
          end: {
            line: 512,
            column: 5
          }
        },
        loc: {
          start: {
            line: 512,
            column: 24
          },
          end: {
            line: 626,
            column: 5
          }
        },
        line: 512
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 31,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 31,
            column: 23
          },
          end: {
            line: 31,
            column: 28
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 32,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 20
          },
          end: {
            line: 32,
            column: 22
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 33,
            column: 21
          },
          end: {
            line: 33,
            column: 22
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 34,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 34,
            column: 21
          },
          end: {
            line: 34,
            column: 27
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 29
          }
        }],
        line: 35
      },
      "5": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "6": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "7": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "8": {
        loc: {
          start: {
            line: 81,
            column: 53
          },
          end: {
            line: 81,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 53
          },
          end: {
            line: 81,
            column: 67
          }
        }, {
          start: {
            line: 81,
            column: 71
          },
          end: {
            line: 81,
            column: 73
          }
        }],
        line: 81
      },
      "9": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "10": {
        loc: {
          start: {
            line: 135,
            column: 45
          },
          end: {
            line: 135,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 45
          },
          end: {
            line: 135,
            column: 66
          }
        }, {
          start: {
            line: 135,
            column: 70
          },
          end: {
            line: 135,
            column: 72
          }
        }],
        line: 135
      },
      "11": {
        loc: {
          start: {
            line: 164,
            column: 20
          },
          end: {
            line: 164,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 164,
            column: 42
          },
          end: {
            line: 164,
            column: 47
          }
        }],
        line: 164
      },
      "12": {
        loc: {
          start: {
            line: 164,
            column: 49
          },
          end: {
            line: 164,
            column: 69
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 164,
            column: 64
          },
          end: {
            line: 164,
            column: 69
          }
        }],
        line: 164
      },
      "13": {
        loc: {
          start: {
            line: 168,
            column: 12
          },
          end: {
            line: 173,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 12
          },
          end: {
            line: 173,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "14": {
        loc: {
          start: {
            line: 186,
            column: 49
          },
          end: {
            line: 186,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 49
          },
          end: {
            line: 186,
            column: 63
          }
        }, {
          start: {
            line: 186,
            column: 67
          },
          end: {
            line: 186,
            column: 69
          }
        }],
        line: 186
      },
      "15": {
        loc: {
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 201,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 201,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "16": {
        loc: {
          start: {
            line: 198,
            column: 31
          },
          end: {
            line: 198,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 198,
            column: 31
          },
          end: {
            line: 198,
            column: 42
          }
        }, {
          start: {
            line: 198,
            column: 46
          },
          end: {
            line: 198,
            column: 51
          }
        }],
        line: 198
      },
      "17": {
        loc: {
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 216,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 216,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "18": {
        loc: {
          start: {
            line: 252,
            column: 24
          },
          end: {
            line: 252,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 252,
            column: 24
          },
          end: {
            line: 252,
            column: 40
          }
        }, {
          start: {
            line: 252,
            column: 44
          },
          end: {
            line: 252,
            column: 54
          }
        }],
        line: 252
      },
      "19": {
        loc: {
          start: {
            line: 255,
            column: 35
          },
          end: {
            line: 255,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 255,
            column: 35
          },
          end: {
            line: 255,
            column: 53
          }
        }, {
          start: {
            line: 255,
            column: 57
          },
          end: {
            line: 255,
            column: 59
          }
        }],
        line: 255
      },
      "20": {
        loc: {
          start: {
            line: 256,
            column: 39
          },
          end: {
            line: 256,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 256,
            column: 39
          },
          end: {
            line: 256,
            column: 61
          }
        }, {
          start: {
            line: 256,
            column: 65
          },
          end: {
            line: 256,
            column: 66
          }
        }],
        line: 256
      },
      "21": {
        loc: {
          start: {
            line: 259,
            column: 29
          },
          end: {
            line: 259,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 259,
            column: 29
          },
          end: {
            line: 259,
            column: 52
          }
        }, {
          start: {
            line: 259,
            column: 56
          },
          end: {
            line: 259,
            column: 58
          }
        }],
        line: 259
      },
      "22": {
        loc: {
          start: {
            line: 260,
            column: 39
          },
          end: {
            line: 260,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 260,
            column: 39
          },
          end: {
            line: 260,
            column: 63
          }
        }, {
          start: {
            line: 260,
            column: 67
          },
          end: {
            line: 260,
            column: 70
          }
        }],
        line: 260
      },
      "23": {
        loc: {
          start: {
            line: 261,
            column: 28
          },
          end: {
            line: 261,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 261,
            column: 28
          },
          end: {
            line: 261,
            column: 50
          }
        }, {
          start: {
            line: 261,
            column: 54
          },
          end: {
            line: 261,
            column: 59
          }
        }],
        line: 261
      },
      "24": {
        loc: {
          start: {
            line: 262,
            column: 31
          },
          end: {
            line: 262,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 262,
            column: 31
          },
          end: {
            line: 262,
            column: 56
          }
        }, {
          start: {
            line: 262,
            column: 60
          },
          end: {
            line: 262,
            column: 62
          }
        }],
        line: 262
      },
      "25": {
        loc: {
          start: {
            line: 266,
            column: 27
          },
          end: {
            line: 266,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 266,
            column: 27
          },
          end: {
            line: 266,
            column: 39
          }
        }, {
          start: {
            line: 266,
            column: 43
          },
          end: {
            line: 266,
            column: 50
          }
        }],
        line: 266
      },
      "26": {
        loc: {
          start: {
            line: 308,
            column: 12
          },
          end: {
            line: 313,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 308,
            column: 12
          },
          end: {
            line: 313,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 308
      },
      "27": {
        loc: {
          start: {
            line: 316,
            column: 12
          },
          end: {
            line: 328,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 316,
            column: 12
          },
          end: {
            line: 328,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 316
      },
      "28": {
        loc: {
          start: {
            line: 316,
            column: 16
          },
          end: {
            line: 316,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 316,
            column: 16
          },
          end: {
            line: 316,
            column: 28
          }
        }, {
          start: {
            line: 316,
            column: 32
          },
          end: {
            line: 316,
            column: 47
          }
        }],
        line: 316
      },
      "29": {
        loc: {
          start: {
            line: 317,
            column: 43
          },
          end: {
            line: 317,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 317,
            column: 43
          },
          end: {
            line: 317,
            column: 55
          }
        }, {
          start: {
            line: 317,
            column: 59
          },
          end: {
            line: 317,
            column: 69
          }
        }],
        line: 317
      },
      "30": {
        loc: {
          start: {
            line: 318,
            column: 32
          },
          end: {
            line: 320,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 319,
            column: 20
          },
          end: {
            line: 319,
            column: 45
          }
        }, {
          start: {
            line: 320,
            column: 21
          },
          end: {
            line: 320,
            column: 67
          }
        }],
        line: 318
      },
      "31": {
        loc: {
          start: {
            line: 320,
            column: 21
          },
          end: {
            line: 320,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 320,
            column: 37
          },
          end: {
            line: 320,
            column: 60
          }
        }, {
          start: {
            line: 320,
            column: 63
          },
          end: {
            line: 320,
            column: 67
          }
        }],
        line: 320
      },
      "32": {
        loc: {
          start: {
            line: 322,
            column: 16
          },
          end: {
            line: 327,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 322,
            column: 16
          },
          end: {
            line: 327,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 322
      },
      "33": {
        loc: {
          start: {
            line: 322,
            column: 20
          },
          end: {
            line: 322,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 322,
            column: 20
          },
          end: {
            line: 322,
            column: 27
          }
        }, {
          start: {
            line: 322,
            column: 31
          },
          end: {
            line: 322,
            column: 51
          }
        }],
        line: 322
      },
      "34": {
        loc: {
          start: {
            line: 334,
            column: 27
          },
          end: {
            line: 334,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 334,
            column: 27
          },
          end: {
            line: 334,
            column: 39
          }
        }, {
          start: {
            line: 334,
            column: 43
          },
          end: {
            line: 334,
            column: 50
          }
        }],
        line: 334
      },
      "35": {
        loc: {
          start: {
            line: 341,
            column: 12
          },
          end: {
            line: 346,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 341,
            column: 12
          },
          end: {
            line: 346,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 341
      },
      "36": {
        loc: {
          start: {
            line: 341,
            column: 16
          },
          end: {
            line: 341,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 341,
            column: 16
          },
          end: {
            line: 341,
            column: 30
          }
        }, {
          start: {
            line: 341,
            column: 34
          },
          end: {
            line: 341,
            column: 65
          }
        }],
        line: 341
      },
      "37": {
        loc: {
          start: {
            line: 378,
            column: 12
          },
          end: {
            line: 383,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 378,
            column: 12
          },
          end: {
            line: 383,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 378
      },
      "38": {
        loc: {
          start: {
            line: 387,
            column: 12
          },
          end: {
            line: 393,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 387,
            column: 12
          },
          end: {
            line: 393,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 387
      },
      "39": {
        loc: {
          start: {
            line: 440,
            column: 12
          },
          end: {
            line: 445,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 440,
            column: 12
          },
          end: {
            line: 445,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 440
      },
      "40": {
        loc: {
          start: {
            line: 464,
            column: 34
          },
          end: {
            line: 464,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 464,
            column: 34
          },
          end: {
            line: 464,
            column: 69
          }
        }, {
          start: {
            line: 464,
            column: 73
          },
          end: {
            line: 464,
            column: 74
          }
        }],
        line: 464
      },
      "41": {
        loc: {
          start: {
            line: 474,
            column: 67
          },
          end: {
            line: 474,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 474,
            column: 67
          },
          end: {
            line: 474,
            column: 88
          }
        }, {
          start: {
            line: 474,
            column: 92
          },
          end: {
            line: 474,
            column: 95
          }
        }],
        line: 474
      },
      "42": {
        loc: {
          start: {
            line: 475,
            column: 61
          },
          end: {
            line: 475,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 475,
            column: 61
          },
          end: {
            line: 475,
            column: 75
          }
        }, {
          start: {
            line: 475,
            column: 79
          },
          end: {
            line: 475,
            column: 81
          }
        }],
        line: 475
      },
      "43": {
        loc: {
          start: {
            line: 476,
            column: 49
          },
          end: {
            line: 476,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 476,
            column: 49
          },
          end: {
            line: 476,
            column: 63
          }
        }, {
          start: {
            line: 476,
            column: 67
          },
          end: {
            line: 476,
            column: 69
          }
        }],
        line: 476
      },
      "44": {
        loc: {
          start: {
            line: 516,
            column: 28
          },
          end: {
            line: 516,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 516,
            column: 37
          },
          end: {
            line: 516,
            column: 39
          }
        }],
        line: 516
      },
      "45": {
        loc: {
          start: {
            line: 520,
            column: 12
          },
          end: {
            line: 525,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 520,
            column: 12
          },
          end: {
            line: 525,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 520
      },
      "46": {
        loc: {
          start: {
            line: 535,
            column: 12
          },
          end: {
            line: 540,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 535,
            column: 12
          },
          end: {
            line: 540,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 535
      },
      "47": {
        loc: {
          start: {
            line: 553,
            column: 12
          },
          end: {
            line: 598,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 554,
            column: 16
          },
          end: {
            line: 571,
            column: 26
          }
        }, {
          start: {
            line: 573,
            column: 16
          },
          end: {
            line: 578,
            column: 26
          }
        }, {
          start: {
            line: 580,
            column: 16
          },
          end: {
            line: 597,
            column: 26
          }
        }],
        line: 553
      },
      "48": {
        loc: {
          start: {
            line: 562,
            column: 20
          },
          end: {
            line: 570,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 562,
            column: 20
          },
          end: {
            line: 570,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 562
      },
      "49": {
        loc: {
          start: {
            line: 588,
            column: 20
          },
          end: {
            line: 596,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 588,
            column: 20
          },
          end: {
            line: 596,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 588
      },
      "50": {
        loc: {
          start: {
            line: 613,
            column: 32
          },
          end: {
            line: 613,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 613,
            column: 56
          },
          end: {
            line: 613,
            column: 75
          }
        }, {
          start: {
            line: 613,
            column: 78
          },
          end: {
            line: 613,
            column: 79
          }
        }],
        line: 613
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0],
      "12": [0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6a8ecff3e96e4b0d8a5abcd4240cc3bae8d94558"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_b9hc7fgit = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_b9hc7fgit();
/**
 * Events API Routes
 * Handle event creation, management, and queries
 */

import express from 'express';
import { body, param, query } from 'express-validator';
import { validateRequest, sanitizeInput, securityHeaders, rateLimiters } from '../middleware/validation-enhanced.js';
import { eventValidationRules, queryValidationRules } from '../middleware/validation-rules.js';
const router =
/* istanbul ignore next */
(cov_b9hc7fgit().s[0]++, express.Router());

// Apply security middleware
/* istanbul ignore next */
cov_b9hc7fgit().s[1]++;
router.use(securityHeaders);
/* istanbul ignore next */
cov_b9hc7fgit().s[2]++;
router.use(sanitizeInput);
/* istanbul ignore next */
cov_b9hc7fgit().s[3]++;
router.use(rateLimiters.api);

/**
 * GET /api/events
 * Get all events with optional filtering
 */
/* istanbul ignore next */
cov_b9hc7fgit().s[4]++;
router.get('/', queryValidationRules.pagination, queryValidationRules.search, validateRequest, async (req, res) => {
  /* istanbul ignore next */
  cov_b9hc7fgit().f[0]++;
  cov_b9hc7fgit().s[5]++;
  try {
    const {
      database
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[6]++, req.app.locals);
    const {
      status,
      upcoming =
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[0][0]++, false),
      limit =
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[1][0]++, 10),
      offset =
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[2][0]++, 0),
      sortBy =
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[3][0]++, 'date'),
      sortOrder =
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[4][0]++, 'asc')
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[7]++, req.query);

    // Build filter
    const filter =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[8]++, {});
    /* istanbul ignore next */
    cov_b9hc7fgit().s[9]++;
    if (status) {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[5][0]++;
      cov_b9hc7fgit().s[10]++;
      filter.status = status;
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[5][1]++;
    }

    // Get events
    let events =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[11]++, await database.findAll('events', filter));

    // Filter upcoming events
    /* istanbul ignore next */
    cov_b9hc7fgit().s[12]++;
    if (upcoming === 'true') {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[6][0]++;
      const now =
      /* istanbul ignore next */
      (cov_b9hc7fgit().s[13]++, new Date());
      /* istanbul ignore next */
      cov_b9hc7fgit().s[14]++;
      events = events.filter(event => {
        /* istanbul ignore next */
        cov_b9hc7fgit().f[1]++;
        cov_b9hc7fgit().s[15]++;
        return new Date(event.date) > now;
      });
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[6][1]++;
    }

    // Sort events
    cov_b9hc7fgit().s[16]++;
    events.sort((a, b) => {
      /* istanbul ignore next */
      cov_b9hc7fgit().f[2]++;
      const aValue =
      /* istanbul ignore next */
      (cov_b9hc7fgit().s[17]++, new Date(a[sortBy]));
      const bValue =
      /* istanbul ignore next */
      (cov_b9hc7fgit().s[18]++, new Date(b[sortBy]));
      /* istanbul ignore next */
      cov_b9hc7fgit().s[19]++;
      if (sortOrder === 'desc') {
        /* istanbul ignore next */
        cov_b9hc7fgit().b[7][0]++;
        cov_b9hc7fgit().s[20]++;
        return bValue - aValue;
      } else
      /* istanbul ignore next */
      {
        cov_b9hc7fgit().b[7][1]++;
      }
      cov_b9hc7fgit().s[21]++;
      return aValue - bValue;
    });

    // Paginate
    const total =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[22]++, events.length);
    const paginatedEvents =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[23]++, events.slice(parseInt(offset), parseInt(offset) + parseInt(limit)));

    // Enhance events with additional data
    const enhancedEvents =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[24]++, await Promise.all(paginatedEvents.map(async event => {
      /* istanbul ignore next */
      cov_b9hc7fgit().f[3]++;
      const [participantCount, talkCount] =
      /* istanbul ignore next */
      (cov_b9hc7fgit().s[25]++, await Promise.all([database.count('participants', {
        eventId: event.id
      }), database.count('talks', {
        eventId: event.id
      })]));
      /* istanbul ignore next */
      cov_b9hc7fgit().s[26]++;
      return {
        ...event,
        stats: {
          participantCount,
          talkCount,
          spotsRemaining: Math.max(0, (
          /* istanbul ignore next */
          (cov_b9hc7fgit().b[8][0]++, event.maxTalks) ||
          /* istanbul ignore next */
          (cov_b9hc7fgit().b[8][1]++, 20)) - talkCount)
        }
      };
    })));
    /* istanbul ignore next */
    cov_b9hc7fgit().s[27]++;
    res.json({
      events: enhancedEvents,
      pagination: {
        total,
        limit: parseInt(limit),
        offset: parseInt(offset),
        hasMore: parseInt(offset) + parseInt(limit) < total
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_b9hc7fgit().s[28]++;
    console.error('Error fetching events:', error);
    /* istanbul ignore next */
    cov_b9hc7fgit().s[29]++;
    res.status(500).json({
      error: 'Failed to fetch events',
      message: 'イベント情報の取得に失敗しました'
    });
  }
});

/**
 * GET /api/events/current
 * Get the current/next upcoming event
 */
/* istanbul ignore next */
cov_b9hc7fgit().s[30]++;
router.get('/current', async (req, res) => {
  /* istanbul ignore next */
  cov_b9hc7fgit().f[4]++;
  cov_b9hc7fgit().s[31]++;
  try {
    const {
      database
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[32]++, req.app.locals);
    const currentEvent =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[33]++, await database.getCurrentEvent());
    /* istanbul ignore next */
    cov_b9hc7fgit().s[34]++;
    if (!currentEvent) {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[9][0]++;
      cov_b9hc7fgit().s[35]++;
      return res.status(404).json({
        error: 'No current event',
        message: '現在開催予定のイベントはありません'
      });
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[9][1]++;
    }

    // Get event statistics
    const [participantCount, talkCount, analytics] =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[36]++, await Promise.all([database.count('participants', {
      eventId: currentEvent.id
    }), database.count('talks', {
      eventId: currentEvent.id
    }), database.getEventAnalytics(currentEvent.id)]));
    const enhancedEvent =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[37]++, {
      ...currentEvent,
      stats: {
        participantCount,
        talkCount,
        spotsRemaining: Math.max(0, (
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[10][0]++, currentEvent.maxTalks) ||
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[10][1]++, 20)) - talkCount),
        ...analytics
      }
    });
    /* istanbul ignore next */
    cov_b9hc7fgit().s[38]++;
    res.json({
      event: enhancedEvent
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_b9hc7fgit().s[39]++;
    console.error('Error fetching current event:', error);
    /* istanbul ignore next */
    cov_b9hc7fgit().s[40]++;
    res.status(500).json({
      error: 'Failed to fetch current event',
      message: '現在のイベント情報の取得に失敗しました'
    });
  }
});

/**
 * GET /api/events/:id
 * Get a specific event by ID
 */
/* istanbul ignore next */
cov_b9hc7fgit().s[41]++;
router.get('/:id', param('id').matches(/^[a-zA-Z0-9\-_]{3,50}$/).withMessage('Event ID must be alphanumeric with hyphens/underscores, 3-50 characters'), validateRequest, async (req, res) => {
  /* istanbul ignore next */
  cov_b9hc7fgit().f[5]++;
  cov_b9hc7fgit().s[42]++;
  try {
    const {
      database
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[43]++, req.app.locals);
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[44]++, req.params);
    const {
      includeParticipants =
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[11][0]++, false),
      includeTalks =
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[12][0]++, false)
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[45]++, req.query);
    const event =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[46]++, await database.findById('events', id));
    /* istanbul ignore next */
    cov_b9hc7fgit().s[47]++;
    if (!event) {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[13][0]++;
      cov_b9hc7fgit().s[48]++;
      return res.status(404).json({
        error: 'Event not found',
        message: 'イベントが見つかりません'
      });
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[13][1]++;
    }

    // Get event statistics
    const [participantCount, talkCount] =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[49]++, await Promise.all([database.count('participants', {
      eventId: id
    }), database.count('talks', {
      eventId: id
    })]));
    const enhancedEvent =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[50]++, {
      ...event,
      stats: {
        participantCount,
        talkCount,
        spotsRemaining: Math.max(0, (
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[14][0]++, event.maxTalks) ||
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[14][1]++, 20)) - talkCount)
      }
    });

    // Include participants if requested
    /* istanbul ignore next */
    cov_b9hc7fgit().s[51]++;
    if (includeParticipants === 'true') {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[15][0]++;
      const participants =
      /* istanbul ignore next */
      (cov_b9hc7fgit().s[52]++, await database.findAll('participants', {
        eventId: id
      }));
      /* istanbul ignore next */
      cov_b9hc7fgit().s[53]++;
      enhancedEvent.participants = participants.map(p => {
        /* istanbul ignore next */
        cov_b9hc7fgit().f[6]++;
        cov_b9hc7fgit().s[54]++;
        return {
          id: p.id,
          name: p.name,
          participationType: p.participationType,
          status: p.status,
          isSpeaker:
          /* istanbul ignore next */
          (cov_b9hc7fgit().b[16][0]++, p.isSpeaker) ||
          /* istanbul ignore next */
          (cov_b9hc7fgit().b[16][1]++, false),
          registeredAt: p.createdAt
        };
      });
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[15][1]++;
    }

    // Include talks if requested
    cov_b9hc7fgit().s[55]++;
    if (includeTalks === 'true') {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[17][0]++;
      const talks =
      /* istanbul ignore next */
      (cov_b9hc7fgit().s[56]++, await database.findAll('talks', {
        eventId: id
      }));
      /* istanbul ignore next */
      cov_b9hc7fgit().s[57]++;
      enhancedEvent.talks = talks.map(t => {
        /* istanbul ignore next */
        cov_b9hc7fgit().f[7]++;
        cov_b9hc7fgit().s[58]++;
        return {
          id: t.id,
          title: t.title,
          description: t.description,
          category: t.category,
          speakerName: t.speakerName,
          duration: t.duration,
          status: t.status,
          submittedAt: t.createdAt
        };
      });
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[17][1]++;
    }
    cov_b9hc7fgit().s[59]++;
    res.json({
      event: enhancedEvent
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_b9hc7fgit().s[60]++;
    console.error('Error fetching event:', error);
    /* istanbul ignore next */
    cov_b9hc7fgit().s[61]++;
    res.status(500).json({
      error: 'Failed to fetch event',
      message: 'イベント情報の取得に失敗しました'
    });
  }
});

/**
 * POST /api/events
 * Create a new event (admin only)
 */
/* istanbul ignore next */
cov_b9hc7fgit().s[62]++;
router.post('/', rateLimiters.admin, eventValidationRules.create, validateRequest, async (req, res) => {
  /* istanbul ignore next */
  cov_b9hc7fgit().f[8]++;
  cov_b9hc7fgit().s[63]++;
  try {
    const {
      database,
      eventService
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[64]++, req.app.locals);
    const eventData =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[65]++, req.body);

    // Generate unique event ID
    const eventId =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[66]++, `event-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`);

    // Set defaults with security considerations
    const newEvent =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[67]++, {
      id: eventId,
      ...eventData,
      status:
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[18][0]++, eventData.status) ||
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[18][1]++, 'upcoming'),
      registrationOpen: eventData.registrationOpen !== false,
      talkSubmissionOpen: eventData.talkSubmissionOpen !== false,
      maxTalks: Math.min(
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[19][0]++, eventData.maxTalks) ||
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[19][1]++, 20), 50),
      // Cap at 50
      talkDuration: Math.min(
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[20][0]++, eventData.talkDuration) ||
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[20][1]++, 5), 60),
      // Cap at 60 minutes
      venue: {
        name: eventData.venue.name,
        address:
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[21][0]++, eventData.venue.address) ||
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[21][1]++, ''),
        capacity: Math.min(
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[22][0]++, eventData.venue.capacity) ||
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[22][1]++, 100), 10000),
        // Cap at 10k
        online:
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[23][0]++, eventData.venue.online) ||
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[23][1]++, false),
        onlineUrl:
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[24][0]++, eventData.venue.onlineUrl) ||
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[24][1]++, '')
      },
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString(),
      createdBy:
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[25][0]++, req.user?.id) ||
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[25][1]++, 'admin')
    });
    const event =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[68]++, await database.create('events', newEvent));

    // Track analytics
    /* istanbul ignore next */
    cov_b9hc7fgit().s[69]++;
    await eventService.trackAnalytics(event.id, 'event_created', {
      source: 'admin'
    });
    /* istanbul ignore next */
    cov_b9hc7fgit().s[70]++;
    res.status(201).json({
      success: true,
      message: 'Event created successfully',
      event
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_b9hc7fgit().s[71]++;
    console.error('Error creating event:', error);
    /* istanbul ignore next */
    cov_b9hc7fgit().s[72]++;
    res.status(500).json({
      error: 'Failed to create event',
      message: 'イベントの作成に失敗しました'
    });
  }
});

/**
 * PUT /api/events/:id
 * Update an event (admin only)
 */
/* istanbul ignore next */
cov_b9hc7fgit().s[73]++;
router.put('/:id', rateLimiters.admin, eventValidationRules.update, validateRequest, async (req, res) => {
  /* istanbul ignore next */
  cov_b9hc7fgit().f[9]++;
  cov_b9hc7fgit().s[74]++;
  try {
    const {
      database,
      eventService
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[75]++, req.app.locals);
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[76]++, req.params);
    const updates =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[77]++, req.body);

    // Find existing event
    const event =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[78]++, await database.findById('events', id));
    /* istanbul ignore next */
    cov_b9hc7fgit().s[79]++;
    if (!event) {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[26][0]++;
      cov_b9hc7fgit().s[80]++;
      return res.status(404).json({
        error: 'Event not found',
        message: 'イベントが見つかりません'
      });
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[26][1]++;
    }

    // Validate date changes
    cov_b9hc7fgit().s[81]++;
    if (
    /* istanbul ignore next */
    (cov_b9hc7fgit().b[28][0]++, updates.date) ||
    /* istanbul ignore next */
    (cov_b9hc7fgit().b[28][1]++, updates.endDate)) {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[27][0]++;
      const startDate =
      /* istanbul ignore next */
      (cov_b9hc7fgit().s[82]++, new Date(
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[29][0]++, updates.date) ||
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[29][1]++, event.date)));
      const endDate =
      /* istanbul ignore next */
      (cov_b9hc7fgit().s[83]++, updates.endDate ?
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[30][0]++, new Date(updates.endDate)) :
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[30][1]++, event.endDate ?
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[31][0]++, new Date(event.endDate)) :
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[31][1]++, null)));
      /* istanbul ignore next */
      cov_b9hc7fgit().s[84]++;
      if (
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[33][0]++, endDate) &&
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[33][1]++, endDate <= startDate)) {
        /* istanbul ignore next */
        cov_b9hc7fgit().b[32][0]++;
        cov_b9hc7fgit().s[85]++;
        return res.status(400).json({
          error: 'Invalid dates',
          message: 'End date must be after start date'
        });
      } else
      /* istanbul ignore next */
      {
        cov_b9hc7fgit().b[32][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[27][1]++;
    }

    // Add security metadata to updates
    const secureUpdates =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[86]++, {
      ...updates,
      updatedAt: new Date().toISOString(),
      updatedBy:
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[34][0]++, req.user?.id) ||
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[34][1]++, 'admin')
    });

    // Update event
    const updatedEvent =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[87]++, await database.update('events', id, secureUpdates));

    // Track analytics for status changes
    /* istanbul ignore next */
    cov_b9hc7fgit().s[88]++;
    if (
    /* istanbul ignore next */
    (cov_b9hc7fgit().b[36][0]++, updates.status) &&
    /* istanbul ignore next */
    (cov_b9hc7fgit().b[36][1]++, updates.status !== event.status)) {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[35][0]++;
      cov_b9hc7fgit().s[89]++;
      await eventService.trackAnalytics(id, 'event_status_changed', {
        from: event.status,
        to: updates.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[35][1]++;
    }
    cov_b9hc7fgit().s[90]++;
    res.json({
      success: true,
      message: 'Event updated successfully',
      event: updatedEvent
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_b9hc7fgit().s[91]++;
    console.error('Error updating event:', error);
    /* istanbul ignore next */
    cov_b9hc7fgit().s[92]++;
    res.status(500).json({
      error: 'Failed to update event',
      message: 'イベントの更新に失敗しました'
    });
  }
});

/**
 * DELETE /api/events/:id
 * Delete an event (admin only)
 */
/* istanbul ignore next */
cov_b9hc7fgit().s[93]++;
router.delete('/:id', param('id').isLength({
  min: 1
}).withMessage('Event ID is required'), handleValidationErrors, async (req, res) => {
  /* istanbul ignore next */
  cov_b9hc7fgit().f[10]++;
  cov_b9hc7fgit().s[94]++;
  try {
    const {
      database,
      eventService
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[95]++, req.app.locals);
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[96]++, req.params);

    // Find existing event
    const event =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[97]++, await database.findById('events', id));
    /* istanbul ignore next */
    cov_b9hc7fgit().s[98]++;
    if (!event) {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[37][0]++;
      cov_b9hc7fgit().s[99]++;
      return res.status(404).json({
        error: 'Event not found',
        message: 'イベントが見つかりません'
      });
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[37][1]++;
    }

    // Check if event has participants
    const participantCount =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[100]++, await database.count('participants', {
      eventId: id
    }));
    /* istanbul ignore next */
    cov_b9hc7fgit().s[101]++;
    if (participantCount > 0) {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[38][0]++;
      cov_b9hc7fgit().s[102]++;
      return res.status(400).json({
        error: 'Cannot delete event with participants',
        message: '参加者がいるイベントは削除できません。代わりにキャンセルすることを検討してください。',
        suggestion: 'Consider updating status to "cancelled" instead'
      });
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[38][1]++;
    }

    // Delete related talks first
    const talks =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[103]++, await database.findAll('talks', {
      eventId: id
    }));
    /* istanbul ignore next */
    cov_b9hc7fgit().s[104]++;
    for (const talk of talks) {
      /* istanbul ignore next */
      cov_b9hc7fgit().s[105]++;
      await database.delete('talks', talk.id);
    }

    // Delete event
    /* istanbul ignore next */
    cov_b9hc7fgit().s[106]++;
    await database.delete('events', id);

    // Track analytics
    /* istanbul ignore next */
    cov_b9hc7fgit().s[107]++;
    await eventService.trackAnalytics(id, 'event_deleted', {
      participantCount,
      talkCount: talks.length
    });
    /* istanbul ignore next */
    cov_b9hc7fgit().s[108]++;
    res.json({
      success: true,
      message: 'Event deleted successfully',
      eventId: id
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_b9hc7fgit().s[109]++;
    console.error('Error deleting event:', error);
    /* istanbul ignore next */
    cov_b9hc7fgit().s[110]++;
    res.status(500).json({
      error: 'Failed to delete event',
      message: 'イベントの削除に失敗しました'
    });
  }
});

/**
 * GET /api/events/:id/analytics
 * Get event analytics (admin only)
 */
/* istanbul ignore next */
cov_b9hc7fgit().s[111]++;
router.get('/:id/analytics', param('id').isLength({
  min: 1
}).withMessage('Event ID is required'), handleValidationErrors, async (req, res) => {
  /* istanbul ignore next */
  cov_b9hc7fgit().f[11]++;
  cov_b9hc7fgit().s[112]++;
  try {
    const {
      database
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[113]++, req.app.locals);
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[114]++, req.params);

    // Check if event exists
    const event =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[115]++, await database.findById('events', id));
    /* istanbul ignore next */
    cov_b9hc7fgit().s[116]++;
    if (!event) {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[39][0]++;
      cov_b9hc7fgit().s[117]++;
      return res.status(404).json({
        error: 'Event not found',
        message: 'イベントが見つかりません'
      });
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[39][1]++;
    }

    // Get comprehensive analytics
    const analytics =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[118]++, await database.getEventAnalytics(id));

    // Additional analytics
    const participants =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[119]++, await database.findAll('participants', {
      eventId: id
    }));
    const talks =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[120]++, await database.findAll('talks', {
      eventId: id
    }));
    const enhancedAnalytics =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[121]++, {
      ...analytics,
      timeline: {
        registrationTrend: analytics.registrationTrend,
        dailyRegistrations: this.getDailyRegistrations(participants),
        peakRegistrationDay: this.getPeakRegistrationDay(participants)
      },
      demographics: {
        participationTypes: analytics.participationTypes,
        speakerRatio: analytics.speakerCount / analytics.participantCount,
        onlineRatio: (
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[40][0]++, analytics.participationTypes.online) ||
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[40][1]++, 0)) / analytics.participantCount
      },
      content: {
        talkCategories: analytics.talkCategories,
        avgTalkRating: analytics.avgRating,
        topCategories: Object.entries(analytics.talkCategories).sort(([, a], [, b]) => {
          /* istanbul ignore next */
          cov_b9hc7fgit().f[12]++;
          cov_b9hc7fgit().s[122]++;
          return b - a;
        }).slice(0, 5)
      },
      capacity: {
        currentCapacity: analytics.participantCount / (
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[41][0]++, event.venue?.capacity) ||
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[41][1]++, 100)),
        talkSlotsUsed: analytics.speakerCount / (
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[42][0]++, event.maxTalks) ||
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[42][1]++, 20)),
        remainingSlots: Math.max(0, (
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[43][0]++, event.maxTalks) ||
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[43][1]++, 20)) - analytics.speakerCount)
      },
      generatedAt: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_b9hc7fgit().s[123]++;
    res.json({
      analytics: enhancedAnalytics,
      event: {
        id: event.id,
        title: event.title,
        date: event.date,
        status: event.status
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_b9hc7fgit().s[124]++;
    console.error('Error fetching analytics:', error);
    /* istanbul ignore next */
    cov_b9hc7fgit().s[125]++;
    res.status(500).json({
      error: 'Failed to fetch analytics',
      message: 'アナリティクスデータの取得に失敗しました'
    });
  }
});

/**
 * POST /api/events/:id/status
 * Update event status with automatic actions
 */
/* istanbul ignore next */
cov_b9hc7fgit().s[126]++;
router.post('/:id/status', [param('id').isLength({
  min: 1
}).withMessage('Event ID is required'), body('status').isIn(['upcoming', 'ongoing', 'completed', 'cancelled']).withMessage('Valid status is required'), body('reason').optional().trim().isLength({
  max: 500
}).withMessage('Reason must be less than 500 characters')], handleValidationErrors, async (req, res) => {
  /* istanbul ignore next */
  cov_b9hc7fgit().f[13]++;
  cov_b9hc7fgit().s[127]++;
  try {
    const {
      database,
      eventService,
      emailService
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[128]++, req.app.locals);
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[129]++, req.params);
    const {
      status,
      reason =
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[44][0]++, '')
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[130]++, req.body);

    // Find existing event
    const event =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[131]++, await database.findById('events', id));
    /* istanbul ignore next */
    cov_b9hc7fgit().s[132]++;
    if (!event) {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[45][0]++;
      cov_b9hc7fgit().s[133]++;
      return res.status(404).json({
        error: 'Event not found',
        message: 'イベントが見つかりません'
      });
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[45][1]++;
    }

    // Prevent invalid status transitions
    const validTransitions =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[134]++, {
      upcoming: ['ongoing', 'cancelled'],
      ongoing: ['completed', 'cancelled'],
      completed: [],
      cancelled: []
    });
    /* istanbul ignore next */
    cov_b9hc7fgit().s[135]++;
    if (!validTransitions[event.status].includes(status)) {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[46][0]++;
      cov_b9hc7fgit().s[136]++;
      return res.status(400).json({
        error: 'Invalid status transition',
        message: `Cannot change status from ${event.status} to ${status}`
      });
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[46][1]++;
    }

    // Update event status
    const updatedEvent =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[137]++, await database.update('events', id, {
      status,
      statusChangeReason: reason,
      statusChangedAt: new Date().toISOString()
    }));

    // Perform status-specific actions
    const participants =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[138]++, await database.findAll('participants', {
      eventId: id
    }));
    const settings =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[139]++, await database.getSettings());
    /* istanbul ignore next */
    cov_b9hc7fgit().s[140]++;
    switch (status) {
      case 'cancelled':
        /* istanbul ignore next */
        cov_b9hc7fgit().b[47][0]++;
        cov_b9hc7fgit().s[141]++;
        // Close registration and talk submission
        await database.update('events', id, {
          registrationOpen: false,
          talkSubmissionOpen: false
        });

        // Notify participants if email is enabled
        /* istanbul ignore next */
        cov_b9hc7fgit().s[142]++;
        if (settings.emailEnabled) {
          /* istanbul ignore next */
          cov_b9hc7fgit().b[48][0]++;
          cov_b9hc7fgit().s[143]++;
          for (const participant of participants) {
            /* istanbul ignore next */
            cov_b9hc7fgit().s[144]++;
            try {
              /* istanbul ignore next */
              cov_b9hc7fgit().s[145]++;
              await emailService.sendEventCancellation(participant, event, reason);
            } catch (error) {
              /* istanbul ignore next */
              cov_b9hc7fgit().s[146]++;
              console.error('Failed to send cancellation email:', error);
            }
          }
        } else
        /* istanbul ignore next */
        {
          cov_b9hc7fgit().b[48][1]++;
        }
        cov_b9hc7fgit().s[147]++;
        break;
      case 'ongoing':
        /* istanbul ignore next */
        cov_b9hc7fgit().b[47][1]++;
        cov_b9hc7fgit().s[148]++;
        // Close registration
        await database.update('events', id, {
          registrationOpen: false
        });
        /* istanbul ignore next */
        cov_b9hc7fgit().s[149]++;
        break;
      case 'completed':
        /* istanbul ignore next */
        cov_b9hc7fgit().b[47][2]++;
        cov_b9hc7fgit().s[150]++;
        // Close everything and trigger post-event processes
        await database.update('events', id, {
          registrationOpen: false,
          talkSubmissionOpen: false
        });

        // Send feedback request emails
        /* istanbul ignore next */
        cov_b9hc7fgit().s[151]++;
        if (settings.emailEnabled) {
          /* istanbul ignore next */
          cov_b9hc7fgit().b[49][0]++;
          cov_b9hc7fgit().s[152]++;
          for (const participant of participants) {
            /* istanbul ignore next */
            cov_b9hc7fgit().s[153]++;
            try {
              /* istanbul ignore next */
              cov_b9hc7fgit().s[154]++;
              await emailService.sendFeedbackRequest(participant, event);
            } catch (error) {
              /* istanbul ignore next */
              cov_b9hc7fgit().s[155]++;
              console.error('Failed to send feedback email:', error);
            }
          }
        } else
        /* istanbul ignore next */
        {
          cov_b9hc7fgit().b[49][1]++;
        }
        cov_b9hc7fgit().s[156]++;
        break;
    }

    // Track analytics
    /* istanbul ignore next */
    cov_b9hc7fgit().s[157]++;
    await eventService.trackAnalytics(id, 'event_status_changed', {
      from: event.status,
      to: status,
      reason: reason,
      participantCount: participants.length
    });
    /* istanbul ignore next */
    cov_b9hc7fgit().s[158]++;
    res.json({
      success: true,
      message: `Event status updated to ${status}`,
      event: updatedEvent,
      actionsPerformed: {
        emailsSent: settings.emailEnabled ?
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[50][0]++, participants.length) :
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[50][1]++, 0),
        registrationClosed: ['cancelled', 'ongoing', 'completed'].includes(status),
        talkSubmissionClosed: ['cancelled', 'completed'].includes(status)
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_b9hc7fgit().s[159]++;
    console.error('Error updating event status:', error);
    /* istanbul ignore next */
    cov_b9hc7fgit().s[160]++;
    res.status(500).json({
      error: 'Failed to update event status',
      message: 'イベントステータスの更新に失敗しました'
    });
  }
});
export default router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,