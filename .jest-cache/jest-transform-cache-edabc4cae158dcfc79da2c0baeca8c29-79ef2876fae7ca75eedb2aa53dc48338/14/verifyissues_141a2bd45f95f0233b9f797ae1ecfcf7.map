{"version":3,"names":["cov_gbnzwq72z","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","_coverageSchema","coverage","actualCoverage","Octokit","dotenv","fs","fileURLToPath","config","chalk","default","e","blue","text","green","yellow","red","bold","REPO_OWNER","REPO_NAME","__filename","import","meta","url","__dirname","dirname","isGitHubActions","process","env","GITHUB_ACTIONS","ISSUES_DATA_PATH","resolve","cwd","console","log","readdirSync","join","existsSync","octokit","auth","GITHUB_TOKEN","verifyIssues","Error","issuesData","JSON","parse","readFileSync","data","repoIssues","issues","listForRepo","owner","repo","state","per_page","expectedIssues","Map","infrastructure_foundation_issues","forEach","issue","set","title","category","core_feature_issues","enhancement_optimization_issues","compliance_maintenance_issues","size","length","foundIssues","Set","missingIssues","mismatchedIssues","repoIssue","expected","get","add","expectedLabels","labels","repoLabels","map","label","missingLabels","filter","includes","push","number","problem","entries","has","summary","summaryPath","GITHUB_STEP_SUMMARY","appendFileSync","error","message","setGitHubActionsWarning","setGitHubActionsFailed","main","exit","success","catch"],"sources":["verify-issues.js"],"sourcesContent":["#!/usr/bin/env node\n\n/**\n * Issue Verification Script\n * \n * This script verifies that all expected issues have been created in the GitHub repository\n * and checks if they have the appropriate labels and content.\n * \n * Prerequisites:\n * - Node.js installed (v14.x or later)\n * - GitHub Personal Access Token with 'repo' scope (for local use)\n * - npm packages: @octokit/rest, dotenv, chalk\n * \n * Setup:\n * 1. npm install @octokit/rest dotenv chalk\n * 2. Create a .env file with GITHUB_TOKEN=your_personal_access_token (for local use)\n * 3. Run: node verify-issues.js\n */\n\nimport { Octokit } from '@octokit/rest';\nimport dotenv from 'dotenv';\nimport fs from 'fs';\nimport { fileURLToPath } from 'url';\nimport path from 'path';\n\ndotenv.config();\n\n// Try to import chalk, but don't fail if it's not available\nlet chalk;\ntry {\n  chalk = await import('chalk');\n  chalk = chalk.default;\n} catch (e) {\n  // Create a simple chalk replacement\n  chalk = {\n    blue: (text) => text,\n    green: (text) => text,\n    yellow: (text) => text,\n    red: (text) => text,\n    bold: (text) => text\n  };\n}\n\n// Configuration\nconst REPO_OWNER = '20m61';\nconst REPO_NAME = 'lightningtalk-circle';\n\n// Get current file path and directory (ES Module equivalent of __dirname)\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\n// Check if running in GitHub Actions\nconst isGitHubActions = process.env.GITHUB_ACTIONS === 'true';\n\n// Use process.cwd() to ensure correct path resolution in GitHub Actions environment\nconst ISSUES_DATA_PATH = path.resolve(process.cwd(), 'docs/project/issues-data.json');\n\n// Debug: Log file path and check if it exists\nif (isGitHubActions) {\n  console.log(`Debug: Looking for data file at: ${ISSUES_DATA_PATH}`);\n  console.log(`Debug: Working directory: ${process.cwd()}`);\n  console.log(`Debug: Directory contents: ${fs.readdirSync(path.dirname(ISSUES_DATA_PATH)).join(', ')}`);\n  console.log(`Debug: File exists: ${fs.existsSync(ISSUES_DATA_PATH)}`);\n}\n\n// Initialize Octokit\nconst octokit = new Octokit({\n  auth: process.env.GITHUB_TOKEN\n});\n\nasync function verifyIssues() {\n  try {\n    // Check if data file exists first\n    if (!fs.existsSync(ISSUES_DATA_PATH)) {\n      throw new Error(`Data file not found: ${ISSUES_DATA_PATH}. Check that the file exists and the path is correct.`);\n    }\n    \n    // Load expected issues data\n    const issuesData = JSON.parse(fs.readFileSync(ISSUES_DATA_PATH, 'utf8'));\n    \n    log(chalk.blue('Starting issue verification process...'));\n    \n    // Get all issues from the repository\n    const { data: repoIssues } = await octokit.issues.listForRepo({\n      owner: REPO_OWNER,\n      repo: REPO_NAME,\n      state: 'all',\n      per_page: 100\n    });\n    \n    // Create a map of expected issues by title\n    const expectedIssues = new Map();\n    \n    // Add infrastructure/foundation issues\n    issuesData.infrastructure_foundation_issues.forEach(issue => {\n      expectedIssues.set(issue.title, {\n        category: 'Infrastructure/Foundation',\n        issue: issue\n      });\n    });\n    \n    // Add core feature issues\n    issuesData.core_feature_issues.forEach(issue => {\n      expectedIssues.set(issue.title, {\n        category: 'Core Feature',\n        issue: issue\n      });\n    });\n    \n    // Add enhancement/optimization issues\n    issuesData.enhancement_optimization_issues.forEach(issue => {\n      expectedIssues.set(issue.title, {\n        category: 'Enhancement/Optimization',\n        issue: issue\n      });\n    });\n    \n    // Add compliance/maintenance issues\n    issuesData.compliance_maintenance_issues.forEach(issue => {\n      expectedIssues.set(issue.title, {\n        category: 'Compliance/Maintenance',\n        issue: issue\n      });\n    });\n    \n    log(`Expected issues: ${expectedIssues.size}`);\n    log(`Repository issues: ${repoIssues.length}`);\n    \n    // Check for missing issues\n    const foundIssues = new Set();\n    const missingIssues = [];\n    const mismatchedIssues = [];\n    \n    // Verify each repository issue\n    for (const repoIssue of repoIssues) {\n      const expected = expectedIssues.get(repoIssue.title);\n      \n      if (expected) {\n        foundIssues.add(repoIssue.title);\n        \n        // Check labels\n        const expectedLabels = expected.issue.labels;\n        const repoLabels = repoIssue.labels.map(label => label.name);\n        \n        const missingLabels = expectedLabels.filter(label => !repoLabels.includes(label));\n        \n        if (missingLabels.length > 0) {\n          mismatchedIssues.push({\n            title: repoIssue.title,\n            number: repoIssue.number,\n            problem: `Missing labels: ${missingLabels.join(', ')}`\n          });\n        }\n      }\n    }\n    \n    // Find missing issues\n    for (const [title, data] of expectedIssues.entries()) {\n      if (!foundIssues.has(title)) {\n        missingIssues.push({\n          title: title,\n          category: data.category\n        });\n      }\n    }\n    \n    // Print verification results\n    log('\\n--- Verification Results ---');\n    \n    if (missingIssues.length === 0) {\n      log(chalk.green('✓ All expected issues are created'));\n    } else {\n      log(chalk.red(`✗ Missing issues: ${missingIssues.length}`));\n      missingIssues.forEach(issue => {\n        log(chalk.yellow(`  - [${issue.category}] ${issue.title}`));\n      });\n    }\n    \n    if (mismatchedIssues.length === 0) {\n      log(chalk.green('✓ All issues have the expected labels'));\n    } else {\n      log(chalk.red(`✗ Issues with label mismatches: ${mismatchedIssues.length}`));\n      mismatchedIssues.forEach(issue => {\n        log(chalk.yellow(`  - #${issue.number} ${issue.title}: ${issue.problem}`));\n      });\n    }\n    \n    log('\\n--- Summary ---');\n    log(`Expected issues: ${expectedIssues.size}`);\n    log(`Found issues: ${foundIssues.size}`);\n    log(`Missing issues: ${missingIssues.length}`);\n    log(`Issues with problems: ${mismatchedIssues.length}`);\n    \n    // Generate summary for GitHub Actions\n    if (isGitHubActions) {\n      const summary = `\n## Issue Verification Summary\n\n| Category | Count |\n|----------|-------|\n| Expected issues | ${expectedIssues.size} |\n| Found issues | ${foundIssues.size} |\n| Missing issues | ${missingIssues.length} |\n| Issues with problems | ${mismatchedIssues.length} |\n\n${missingIssues.length > 0 ? \n`### Missing Issues\\n\\n${missingIssues.map(issue => `- [${issue.category}] ${issue.title}`).join('\\n')}\\n` : ''}\n\n${mismatchedIssues.length > 0 ? \n`### Issues With Problems\\n\\n${mismatchedIssues.map(issue => `- #${issue.number} ${issue.title}: ${issue.problem}`).join('\\n')}\\n` : ''}\n`;\n      \n      // Write to GitHub Actions summary\n      const summaryPath = process.env.GITHUB_STEP_SUMMARY;\n      if (summaryPath) {\n        try {\n          fs.appendFileSync(summaryPath, summary);\n        } catch (error) {\n          console.log(`::warning::Could not write to summary: ${error.message}`);\n        }\n      }\n      \n      // Set status based on verification results\n      if (missingIssues.length > 0 || mismatchedIssues.length > 0) {\n        setGitHubActionsWarning(`Verification found ${missingIssues.length} missing issues and ${mismatchedIssues.length} issues with problems`);\n      }\n    }\n    \n    if (missingIssues.length === 0 && mismatchedIssues.length === 0) {\n      log(chalk.green('\\n✅ All issues verified successfully!'));\n      return true;\n    } else {\n      log(chalk.red('\\n❌ Some issues are missing or have problems.'));\n      return false;\n    }\n    \n  } catch (error) {\n    log(chalk.red(`Error verifying issues: ${error.message}`));\n    setGitHubActionsFailed(`Error verifying issues: ${error.message}`);\n    return false;\n  }\n}\n\n/**\n * Helper for logging with consistent formatting\n */\nfunction log(message) {\n  console.log(message);\n}\n\n/**\n * Set GitHub Actions step as failed\n */\nfunction setGitHubActionsFailed(message) {\n  if (isGitHubActions) {\n    console.log(`::error::${message}`);\n  }\n}\n\n/**\n * Set GitHub Actions step warning\n */\nfunction setGitHubActionsWarning(message) {\n  if (isGitHubActions) {\n    console.log(`::warning::${message}`);\n  }\n}\n\n// Main execution\nasync function main() {\n  log(chalk.blue('GitHub Issue Verification Script'));\n  log(chalk.blue('==============================='));\n  \n  // Verify GitHub token\n  if (!process.env.GITHUB_TOKEN) {\n    log(chalk.red('Error: GITHUB_TOKEN environment variable is not set.'));\n    log('Please create a .env file with your GitHub token or set it in your environment.');\n    setGitHubActionsFailed('GITHUB_TOKEN environment variable is not set');\n    process.exit(1);\n  }\n  \n  const success = await verifyIssues();\n  \n  if (!success && isGitHubActions) {\n    // In GitHub Actions, we'll exit with a non-zero code if verification failed\n    process.exit(1);\n  }\n}\n\nmain().catch(error => {\n  log(chalk.red(`Unhandled error: ${error.message}`));\n  setGitHubActionsFailed(`Unhandled error: ${error.message}`);\n  process.exit(1);\n});"],"mappings":"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","ignoreList":[]}