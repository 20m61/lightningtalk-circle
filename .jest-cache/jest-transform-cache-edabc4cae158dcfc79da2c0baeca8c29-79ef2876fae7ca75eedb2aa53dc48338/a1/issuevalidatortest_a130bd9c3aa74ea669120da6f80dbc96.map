{"version":3,"names":["describe","it","expect","beforeEach","issueFixtures","generateTestIssue","validateIssue","issue","Error","title","trim","description","Array","isArray","labels","length","validPriorities","priority","includes","validateIssueLabels","hasTypeLabel","some","label","hasPriorityLabel","validIssue","valid","infrastructure","not","toThrow","toBe","invalidIssue","invalid","missingTitle","missingDescription","emptyLabels","invalidPriority","undefined","issueWithEmptyTitle","issueWithWhitespaceTitle","validLabels","labelsWithoutType","labelsWithoutPriority","longTitle","repeat","issueWithLongTitle","specialTitle","issueWithSpecialTitle","multipleLabels","issueWithMultipleLabels","feature","toBeValidIssue"],"sources":["issue-validator.test.js"],"sourcesContent":["/**\n * Issue バリデーター ユニットテスト\n */\n\nimport { describe, it, expect, beforeEach } from '@jest/globals';\nimport { issueFixtures, generateTestIssue } from '../fixtures/issues.js';\n\n// バリデーター関数（実装予定）\nfunction validateIssue(issue) {\n  if (!issue) {\n    throw new Error('Issue is required');\n  }\n  \n  if (!issue.title || typeof issue.title !== 'string' || issue.title.trim() === '') {\n    throw new Error('Issue title is required');\n  }\n  \n  if (!issue.description || typeof issue.description !== 'string' || issue.description.trim() === '') {\n    throw new Error('Issue description is required');\n  }\n  \n  if (!Array.isArray(issue.labels) || issue.labels.length === 0) {\n    throw new Error('Issue must have at least one label');\n  }\n  \n  const validPriorities = ['low', 'medium', 'high'];\n  if (!issue.priority || !validPriorities.includes(issue.priority)) {\n    throw new Error('Issue must have a valid priority (low, medium, high)');\n  }\n  \n  return true;\n}\n\nfunction validateIssueLabels(labels) {\n  if (!Array.isArray(labels)) {\n    return false;\n  }\n  \n  // 必須ラベルの検証\n  const hasTypeLabel = labels.some(label => \n    ['bug', 'enhancement', 'documentation', 'infrastructure'].includes(label)\n  );\n  \n  const hasPriorityLabel = labels.some(label => \n    ['low-priority', 'medium-priority', 'high-priority'].includes(label)\n  );\n  \n  return hasTypeLabel && hasPriorityLabel;\n}\n\ndescribe('Issue Validator', () => {\n  describe('validateIssue', () => {\n    it('should validate a valid issue structure', () => {\n      const validIssue = issueFixtures.valid.infrastructure;\n      expect(() => validateIssue(validIssue)).not.toThrow();\n      expect(validateIssue(validIssue)).toBe(true);\n    });\n\n    it('should reject issue without title', () => {\n      const invalidIssue = issueFixtures.invalid.missingTitle;\n      expect(() => validateIssue(invalidIssue))\n        .toThrow('Issue title is required');\n    });\n\n    it('should reject issue without description', () => {\n      const invalidIssue = issueFixtures.invalid.missingDescription;\n      expect(() => validateIssue(invalidIssue))\n        .toThrow('Issue description is required');\n    });\n\n    it('should reject issue with empty labels', () => {\n      const invalidIssue = issueFixtures.invalid.emptyLabels;\n      expect(() => validateIssue(invalidIssue))\n        .toThrow('Issue must have at least one label');\n    });\n\n    it('should reject issue with invalid priority', () => {\n      const invalidIssue = issueFixtures.invalid.invalidPriority;\n      expect(() => validateIssue(invalidIssue))\n        .toThrow('Issue must have a valid priority (low, medium, high)');\n    });\n\n    it('should reject null or undefined issue', () => {\n      expect(() => validateIssue(null)).toThrow('Issue is required');\n      expect(() => validateIssue(undefined)).toThrow('Issue is required');\n    });\n\n    it('should reject issue with empty title', () => {\n      const issueWithEmptyTitle = {\n        ...issueFixtures.valid.infrastructure,\n        title: ''\n      };\n      expect(() => validateIssue(issueWithEmptyTitle))\n        .toThrow('Issue title is required');\n    });\n\n    it('should reject issue with whitespace-only title', () => {\n      const issueWithWhitespaceTitle = {\n        ...issueFixtures.valid.infrastructure,\n        title: '   '\n      };\n      expect(() => validateIssue(issueWithWhitespaceTitle))\n        .toThrow('Issue title is required');\n    });\n  });\n\n  describe('validateIssueLabels', () => {\n    it('should validate labels with type and priority', () => {\n      const validLabels = ['enhancement', 'frontend', 'high-priority'];\n      expect(validateIssueLabels(validLabels)).toBe(true);\n    });\n\n    it('should reject labels without type', () => {\n      const labelsWithoutType = ['frontend', 'high-priority'];\n      expect(validateIssueLabels(labelsWithoutType)).toBe(false);\n    });\n\n    it('should reject labels without priority', () => {\n      const labelsWithoutPriority = ['enhancement', 'frontend'];\n      expect(validateIssueLabels(labelsWithoutPriority)).toBe(false);\n    });\n\n    it('should reject non-array labels', () => {\n      expect(validateIssueLabels('not-array')).toBe(false);\n      expect(validateIssueLabels(null)).toBe(false);\n      expect(validateIssueLabels(undefined)).toBe(false);\n    });\n  });\n\n  describe('Edge Cases', () => {\n    it('should handle very long titles', () => {\n      const longTitle = 'A'.repeat(1000);\n      const issueWithLongTitle = generateTestIssue({ title: longTitle });\n      expect(() => validateIssue(issueWithLongTitle)).not.toThrow();\n    });\n\n    it('should handle special characters in title', () => {\n      const specialTitle = 'Fix #123: Handle UTF-8 characters 日本語 🚀';\n      const issueWithSpecialTitle = generateTestIssue({ title: specialTitle });\n      expect(() => validateIssue(issueWithSpecialTitle)).not.toThrow();\n    });\n\n    it('should handle multiple labels of same type', () => {\n      const multipleLabels = ['enhancement', 'bug', 'high-priority', 'medium-priority'];\n      const issueWithMultipleLabels = generateTestIssue({ labels: multipleLabels });\n      expect(() => validateIssue(issueWithMultipleLabels)).not.toThrow();\n    });\n  });\n\n  describe('Custom Matchers', () => {\n    it('should use custom toBeValidIssue matcher', () => {\n      const validIssue = issueFixtures.valid.feature;\n      expect(validIssue).toBeValidIssue();\n    });\n\n    it('should fail custom matcher for invalid issue', () => {\n      const invalidIssue = issueFixtures.invalid.missingTitle;\n      expect(invalidIssue).not.toBeValidIssue();\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}