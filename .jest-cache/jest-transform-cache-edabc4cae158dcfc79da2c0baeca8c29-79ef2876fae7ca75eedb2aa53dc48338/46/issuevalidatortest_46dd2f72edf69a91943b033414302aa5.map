{"version":3,"names":["_globals","require","_issues","validateIssue","issue","Error","title","trim","description","Array","isArray","labels","length","validPriorities","priority","includes","validateIssueLabels","hasTypeLabel","some","label","hasPriorityLabel","describe","it","validIssue","issueFixtures","valid","infrastructure","expect","not","toThrow","toBe","invalidIssue","invalid","missingTitle","missingDescription","emptyLabels","invalidPriority","undefined","issueWithEmptyTitle","issueWithWhitespaceTitle","validLabels","labelsWithoutType","labelsWithoutPriority","longTitle","repeat","issueWithLongTitle","generateTestIssue","specialTitle","issueWithSpecialTitle","multipleLabels","issueWithMultipleLabels","feature","toBeValidIssue"],"sources":["issue-validator.test.js"],"sourcesContent":["/**\n * Issue バリデーター ユニットテスト\n */\n\nimport { describe, it, expect, beforeEach } from '@jest/globals';\nimport { issueFixtures, generateTestIssue } from '../fixtures/issues.js';\n\n// バリデーター関数（実装予定）\nfunction validateIssue(issue) {\n  if (!issue) {\n    throw new Error('Issue is required');\n  }\n  \n  if (!issue.title || typeof issue.title !== 'string' || issue.title.trim() === '') {\n    throw new Error('Issue title is required');\n  }\n  \n  if (!issue.description || typeof issue.description !== 'string' || issue.description.trim() === '') {\n    throw new Error('Issue description is required');\n  }\n  \n  if (!Array.isArray(issue.labels) || issue.labels.length === 0) {\n    throw new Error('Issue must have at least one label');\n  }\n  \n  const validPriorities = ['low', 'medium', 'high'];\n  if (!issue.priority || !validPriorities.includes(issue.priority)) {\n    throw new Error('Issue must have a valid priority (low, medium, high)');\n  }\n  \n  return true;\n}\n\nfunction validateIssueLabels(labels) {\n  if (!Array.isArray(labels)) {\n    return false;\n  }\n  \n  // 必須ラベルの検証\n  const hasTypeLabel = labels.some(label => \n    ['bug', 'enhancement', 'documentation', 'infrastructure'].includes(label)\n  );\n  \n  const hasPriorityLabel = labels.some(label => \n    ['low-priority', 'medium-priority', 'high-priority'].includes(label)\n  );\n  \n  return hasTypeLabel && hasPriorityLabel;\n}\n\ndescribe('Issue Validator', () => {\n  describe('validateIssue', () => {\n    it('should validate a valid issue structure', () => {\n      const validIssue = issueFixtures.valid.infrastructure;\n      expect(() => validateIssue(validIssue)).not.toThrow();\n      expect(validateIssue(validIssue)).toBe(true);\n    });\n\n    it('should reject issue without title', () => {\n      const invalidIssue = issueFixtures.invalid.missingTitle;\n      expect(() => validateIssue(invalidIssue))\n        .toThrow('Issue title is required');\n    });\n\n    it('should reject issue without description', () => {\n      const invalidIssue = issueFixtures.invalid.missingDescription;\n      expect(() => validateIssue(invalidIssue))\n        .toThrow('Issue description is required');\n    });\n\n    it('should reject issue with empty labels', () => {\n      const invalidIssue = issueFixtures.invalid.emptyLabels;\n      expect(() => validateIssue(invalidIssue))\n        .toThrow('Issue must have at least one label');\n    });\n\n    it('should reject issue with invalid priority', () => {\n      const invalidIssue = issueFixtures.invalid.invalidPriority;\n      expect(() => validateIssue(invalidIssue))\n        .toThrow('Issue must have a valid priority (low, medium, high)');\n    });\n\n    it('should reject null or undefined issue', () => {\n      expect(() => validateIssue(null)).toThrow('Issue is required');\n      expect(() => validateIssue(undefined)).toThrow('Issue is required');\n    });\n\n    it('should reject issue with empty title', () => {\n      const issueWithEmptyTitle = {\n        ...issueFixtures.valid.infrastructure,\n        title: ''\n      };\n      expect(() => validateIssue(issueWithEmptyTitle))\n        .toThrow('Issue title is required');\n    });\n\n    it('should reject issue with whitespace-only title', () => {\n      const issueWithWhitespaceTitle = {\n        ...issueFixtures.valid.infrastructure,\n        title: '   '\n      };\n      expect(() => validateIssue(issueWithWhitespaceTitle))\n        .toThrow('Issue title is required');\n    });\n  });\n\n  describe('validateIssueLabels', () => {\n    it('should validate labels with type and priority', () => {\n      const validLabels = ['enhancement', 'frontend', 'high-priority'];\n      expect(validateIssueLabels(validLabels)).toBe(true);\n    });\n\n    it('should reject labels without type', () => {\n      const labelsWithoutType = ['frontend', 'high-priority'];\n      expect(validateIssueLabels(labelsWithoutType)).toBe(false);\n    });\n\n    it('should reject labels without priority', () => {\n      const labelsWithoutPriority = ['enhancement', 'frontend'];\n      expect(validateIssueLabels(labelsWithoutPriority)).toBe(false);\n    });\n\n    it('should reject non-array labels', () => {\n      expect(validateIssueLabels('not-array')).toBe(false);\n      expect(validateIssueLabels(null)).toBe(false);\n      expect(validateIssueLabels(undefined)).toBe(false);\n    });\n  });\n\n  describe('Edge Cases', () => {\n    it('should handle very long titles', () => {\n      const longTitle = 'A'.repeat(1000);\n      const issueWithLongTitle = generateTestIssue({ title: longTitle });\n      expect(() => validateIssue(issueWithLongTitle)).not.toThrow();\n    });\n\n    it('should handle special characters in title', () => {\n      const specialTitle = 'Fix #123: Handle UTF-8 characters 日本語 🚀';\n      const issueWithSpecialTitle = generateTestIssue({ title: specialTitle });\n      expect(() => validateIssue(issueWithSpecialTitle)).not.toThrow();\n    });\n\n    it('should handle multiple labels of same type', () => {\n      const multipleLabels = ['enhancement', 'bug', 'high-priority', 'medium-priority'];\n      const issueWithMultipleLabels = generateTestIssue({ labels: multipleLabels });\n      expect(() => validateIssue(issueWithMultipleLabels)).not.toThrow();\n    });\n  });\n\n  describe('Custom Matchers', () => {\n    it('should use custom toBeValidIssue matcher', () => {\n      const validIssue = issueFixtures.valid.feature;\n      expect(validIssue).toBeValidIssue();\n    });\n\n    it('should fail custom matcher for invalid issue', () => {\n      const invalidIssue = issueFixtures.invalid.missingTitle;\n      expect(invalidIssue).not.toBeValidIssue();\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}