e9dd31bfb2a21033da3c43c4fe099984
/* istanbul ignore next */
function cov_b9hc7fgit() {
  var path = "/home/ec2-user/workspace/lightningtalk-circle/server/routes/events.js";
  var hash = "007f873fd4bba3c86ab8db5bd9f8c9070ffb3388";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ec2-user/workspace/lightningtalk-circle/server/routes/events.js",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 31
        }
      },
      "1": {
        start: {
          line: 12,
          column: 31
        },
        end: {
          line: 21,
          column: 1
        }
      },
      "2": {
        start: {
          line: 13,
          column: 19
        },
        end: {
          line: 13,
          column: 40
        }
      },
      "3": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 19,
          column: 5
        }
      },
      "4": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 18,
          column: 11
        }
      },
      "5": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 11
        }
      },
      "6": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 105,
          column: 3
        }
      },
      "7": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 104,
          column: 5
        }
      },
      "8": {
        start: {
          line: 29,
          column: 29
        },
        end: {
          line: 29,
          column: 43
        }
      },
      "9": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 21
        }
      },
      "10": {
        start: {
          line: 40,
          column: 23
        },
        end: {
          line: 40,
          column: 25
        }
      },
      "11": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 43
        }
      },
      "12": {
        start: {
          line: 41,
          column: 20
        },
        end: {
          line: 41,
          column: 43
        }
      },
      "13": {
        start: {
          line: 44,
          column: 21
        },
        end: {
          line: 44,
          column: 61
        }
      },
      "14": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "15": {
        start: {
          line: 48,
          column: 24
        },
        end: {
          line: 48,
          column: 34
        }
      },
      "16": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 72
        }
      },
      "17": {
        start: {
          line: 49,
          column: 44
        },
        end: {
          line: 49,
          column: 70
        }
      },
      "18": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 60,
          column: 11
        }
      },
      "19": {
        start: {
          line: 54,
          column: 27
        },
        end: {
          line: 54,
          column: 46
        }
      },
      "20": {
        start: {
          line: 55,
          column: 27
        },
        end: {
          line: 55,
          column: 46
        }
      },
      "21": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "22": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 39
        }
      },
      "23": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 35
        }
      },
      "24": {
        start: {
          line: 63,
          column: 22
        },
        end: {
          line: 63,
          column: 35
        }
      },
      "25": {
        start: {
          line: 64,
          column: 32
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "26": {
        start: {
          line: 70,
          column: 31
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "27": {
        start: {
          line: 72,
          column: 54
        },
        end: {
          line: 75,
          column: 18
        }
      },
      "28": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 84,
          column: 18
        }
      },
      "29": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 96,
          column: 11
        }
      },
      "30": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 55
        }
      },
      "31": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 103,
          column: 11
        }
      },
      "32": {
        start: {
          line: 111,
          column: 0
        },
        end: {
          line: 152,
          column: 3
        }
      },
      "33": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 151,
          column: 5
        }
      },
      "34": {
        start: {
          line: 113,
          column: 29
        },
        end: {
          line: 113,
          column: 43
        }
      },
      "35": {
        start: {
          line: 115,
          column: 29
        },
        end: {
          line: 115,
          column: 61
        }
      },
      "36": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "37": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 121,
          column: 15
        }
      },
      "38": {
        start: {
          line: 125,
          column: 57
        },
        end: {
          line: 129,
          column: 10
        }
      },
      "39": {
        start: {
          line: 131,
          column: 30
        },
        end: {
          line: 139,
          column: 9
        }
      },
      "40": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 143,
          column: 11
        }
      },
      "41": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 62
        }
      },
      "42": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 150,
          column: 11
        }
      },
      "43": {
        start: {
          line: 158,
          column: 0
        },
        end: {
          line: 231,
          column: 2
        }
      },
      "44": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 229,
          column: 9
        }
      },
      "45": {
        start: {
          line: 163,
          column: 33
        },
        end: {
          line: 163,
          column: 47
        }
      },
      "46": {
        start: {
          line: 164,
          column: 27
        },
        end: {
          line: 164,
          column: 37
        }
      },
      "47": {
        start: {
          line: 165,
          column: 74
        },
        end: {
          line: 165,
          column: 83
        }
      },
      "48": {
        start: {
          line: 167,
          column: 26
        },
        end: {
          line: 167,
          column: 63
        }
      },
      "49": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 174,
          column: 13
        }
      },
      "50": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 173,
          column: 19
        }
      },
      "51": {
        start: {
          line: 177,
          column: 50
        },
        end: {
          line: 180,
          column: 14
        }
      },
      "52": {
        start: {
          line: 182,
          column: 34
        },
        end: {
          line: 189,
          column: 13
        }
      },
      "53": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 202,
          column: 13
        }
      },
      "54": {
        start: {
          line: 193,
          column: 37
        },
        end: {
          line: 193,
          column: 92
        }
      },
      "55": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 201,
          column: 20
        }
      },
      "56": {
        start: {
          line: 194,
          column: 68
        },
        end: {
          line: 201,
          column: 17
        }
      },
      "57": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 217,
          column: 13
        }
      },
      "58": {
        start: {
          line: 206,
          column: 30
        },
        end: {
          line: 206,
          column: 78
        }
      },
      "59": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 216,
          column: 20
        }
      },
      "60": {
        start: {
          line: 207,
          column: 54
        },
        end: {
          line: 216,
          column: 17
        }
      },
      "61": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 221,
          column: 15
        }
      },
      "62": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 58
        }
      },
      "63": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 228,
          column: 15
        }
      },
      "64": {
        start: {
          line: 237,
          column: 0
        },
        end: {
          line: 326,
          column: 2
        }
      },
      "65": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 324,
          column: 9
        }
      },
      "66": {
        start: {
          line: 274,
          column: 47
        },
        end: {
          line: 274,
          column: 61
        }
      },
      "67": {
        start: {
          line: 275,
          column: 30
        },
        end: {
          line: 275,
          column: 38
        }
      },
      "68": {
        start: {
          line: 278,
          column: 29
        },
        end: {
          line: 292,
          column: 13
        }
      },
      "69": {
        start: {
          line: 295,
          column: 30
        },
        end: {
          line: 295,
          column: 53
        }
      },
      "70": {
        start: {
          line: 296,
          column: 28
        },
        end: {
          line: 296,
          column: 80
        }
      },
      "71": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 303,
          column: 13
        }
      },
      "72": {
        start: {
          line: 299,
          column: 16
        },
        end: {
          line: 302,
          column: 19
        }
      },
      "73": {
        start: {
          line: 305,
          column: 26
        },
        end: {
          line: 305,
          column: 67
        }
      },
      "74": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 310,
          column: 15
        }
      },
      "75": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 316,
          column: 15
        }
      },
      "76": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 319,
          column: 58
        }
      },
      "77": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 323,
          column: 15
        }
      },
      "78": {
        start: {
          line: 332,
          column: 0
        },
        end: {
          line: 401,
          column: 2
        }
      },
      "79": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 399,
          column: 9
        }
      },
      "80": {
        start: {
          line: 348,
          column: 47
        },
        end: {
          line: 348,
          column: 61
        }
      },
      "81": {
        start: {
          line: 349,
          column: 27
        },
        end: {
          line: 349,
          column: 37
        }
      },
      "82": {
        start: {
          line: 350,
          column: 28
        },
        end: {
          line: 350,
          column: 36
        }
      },
      "83": {
        start: {
          line: 353,
          column: 26
        },
        end: {
          line: 353,
          column: 63
        }
      },
      "84": {
        start: {
          line: 354,
          column: 12
        },
        end: {
          line: 359,
          column: 13
        }
      },
      "85": {
        start: {
          line: 355,
          column: 16
        },
        end: {
          line: 358,
          column: 19
        }
      },
      "86": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 374,
          column: 13
        }
      },
      "87": {
        start: {
          line: 363,
          column: 34
        },
        end: {
          line: 363,
          column: 70
        }
      },
      "88": {
        start: {
          line: 364,
          column: 32
        },
        end: {
          line: 366,
          column: 68
        }
      },
      "89": {
        start: {
          line: 368,
          column: 16
        },
        end: {
          line: 373,
          column: 17
        }
      },
      "90": {
        start: {
          line: 369,
          column: 20
        },
        end: {
          line: 372,
          column: 23
        }
      },
      "91": {
        start: {
          line: 377,
          column: 33
        },
        end: {
          line: 377,
          column: 77
        }
      },
      "92": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 385,
          column: 13
        }
      },
      "93": {
        start: {
          line: 381,
          column: 16
        },
        end: {
          line: 384,
          column: 19
        }
      },
      "94": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 391,
          column: 15
        }
      },
      "95": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 394,
          column: 58
        }
      },
      "96": {
        start: {
          line: 395,
          column: 12
        },
        end: {
          line: 398,
          column: 15
        }
      },
      "97": {
        start: {
          line: 407,
          column: 0
        },
        end: {
          line: 463,
          column: 2
        }
      },
      "98": {
        start: {
          line: 411,
          column: 8
        },
        end: {
          line: 461,
          column: 9
        }
      },
      "99": {
        start: {
          line: 412,
          column: 47
        },
        end: {
          line: 412,
          column: 61
        }
      },
      "100": {
        start: {
          line: 413,
          column: 27
        },
        end: {
          line: 413,
          column: 37
        }
      },
      "101": {
        start: {
          line: 416,
          column: 26
        },
        end: {
          line: 416,
          column: 63
        }
      },
      "102": {
        start: {
          line: 417,
          column: 12
        },
        end: {
          line: 422,
          column: 13
        }
      },
      "103": {
        start: {
          line: 418,
          column: 16
        },
        end: {
          line: 421,
          column: 19
        }
      },
      "104": {
        start: {
          line: 425,
          column: 37
        },
        end: {
          line: 425,
          column: 90
        }
      },
      "105": {
        start: {
          line: 426,
          column: 12
        },
        end: {
          line: 432,
          column: 13
        }
      },
      "106": {
        start: {
          line: 427,
          column: 16
        },
        end: {
          line: 431,
          column: 19
        }
      },
      "107": {
        start: {
          line: 435,
          column: 26
        },
        end: {
          line: 435,
          column: 74
        }
      },
      "108": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 438,
          column: 13
        }
      },
      "109": {
        start: {
          line: 437,
          column: 16
        },
        end: {
          line: 437,
          column: 56
        }
      },
      "110": {
        start: {
          line: 441,
          column: 12
        },
        end: {
          line: 441,
          column: 48
        }
      },
      "111": {
        start: {
          line: 444,
          column: 12
        },
        end: {
          line: 447,
          column: 15
        }
      },
      "112": {
        start: {
          line: 449,
          column: 12
        },
        end: {
          line: 453,
          column: 15
        }
      },
      "113": {
        start: {
          line: 456,
          column: 12
        },
        end: {
          line: 456,
          column: 58
        }
      },
      "114": {
        start: {
          line: 457,
          column: 12
        },
        end: {
          line: 460,
          column: 15
        }
      },
      "115": {
        start: {
          line: 469,
          column: 0
        },
        end: {
          line: 538,
          column: 2
        }
      },
      "116": {
        start: {
          line: 473,
          column: 8
        },
        end: {
          line: 536,
          column: 9
        }
      },
      "117": {
        start: {
          line: 474,
          column: 33
        },
        end: {
          line: 474,
          column: 47
        }
      },
      "118": {
        start: {
          line: 475,
          column: 27
        },
        end: {
          line: 475,
          column: 37
        }
      },
      "119": {
        start: {
          line: 478,
          column: 26
        },
        end: {
          line: 478,
          column: 63
        }
      },
      "120": {
        start: {
          line: 479,
          column: 12
        },
        end: {
          line: 484,
          column: 13
        }
      },
      "121": {
        start: {
          line: 480,
          column: 16
        },
        end: {
          line: 483,
          column: 19
        }
      },
      "122": {
        start: {
          line: 487,
          column: 30
        },
        end: {
          line: 487,
          column: 66
        }
      },
      "123": {
        start: {
          line: 490,
          column: 33
        },
        end: {
          line: 490,
          column: 88
        }
      },
      "124": {
        start: {
          line: 491,
          column: 26
        },
        end: {
          line: 491,
          column: 74
        }
      },
      "125": {
        start: {
          line: 493,
          column: 38
        },
        end: {
          line: 518,
          column: 13
        }
      },
      "126": {
        start: {
          line: 509,
          column: 46
        },
        end: {
          line: 509,
          column: 51
        }
      },
      "127": {
        start: {
          line: 520,
          column: 12
        },
        end: {
          line: 528,
          column: 15
        }
      },
      "128": {
        start: {
          line: 531,
          column: 12
        },
        end: {
          line: 531,
          column: 62
        }
      },
      "129": {
        start: {
          line: 532,
          column: 12
        },
        end: {
          line: 535,
          column: 15
        }
      },
      "130": {
        start: {
          line: 544,
          column: 0
        },
        end: {
          line: 666,
          column: 2
        }
      },
      "131": {
        start: {
          line: 552,
          column: 8
        },
        end: {
          line: 664,
          column: 9
        }
      },
      "132": {
        start: {
          line: 553,
          column: 61
        },
        end: {
          line: 553,
          column: 75
        }
      },
      "133": {
        start: {
          line: 554,
          column: 27
        },
        end: {
          line: 554,
          column: 37
        }
      },
      "134": {
        start: {
          line: 555,
          column: 44
        },
        end: {
          line: 555,
          column: 52
        }
      },
      "135": {
        start: {
          line: 558,
          column: 26
        },
        end: {
          line: 558,
          column: 63
        }
      },
      "136": {
        start: {
          line: 559,
          column: 12
        },
        end: {
          line: 564,
          column: 13
        }
      },
      "137": {
        start: {
          line: 560,
          column: 16
        },
        end: {
          line: 563,
          column: 19
        }
      },
      "138": {
        start: {
          line: 567,
          column: 37
        },
        end: {
          line: 572,
          column: 13
        }
      },
      "139": {
        start: {
          line: 574,
          column: 12
        },
        end: {
          line: 579,
          column: 13
        }
      },
      "140": {
        start: {
          line: 575,
          column: 16
        },
        end: {
          line: 578,
          column: 19
        }
      },
      "141": {
        start: {
          line: 582,
          column: 33
        },
        end: {
          line: 586,
          column: 14
        }
      },
      "142": {
        start: {
          line: 589,
          column: 33
        },
        end: {
          line: 589,
          column: 88
        }
      },
      "143": {
        start: {
          line: 590,
          column: 29
        },
        end: {
          line: 590,
          column: 57
        }
      },
      "144": {
        start: {
          line: 592,
          column: 12
        },
        end: {
          line: 637,
          column: 13
        }
      },
      "145": {
        start: {
          line: 595,
          column: 20
        },
        end: {
          line: 598,
          column: 23
        }
      },
      "146": {
        start: {
          line: 601,
          column: 20
        },
        end: {
          line: 609,
          column: 21
        }
      },
      "147": {
        start: {
          line: 602,
          column: 24
        },
        end: {
          line: 608,
          column: 25
        }
      },
      "148": {
        start: {
          line: 603,
          column: 28
        },
        end: {
          line: 607,
          column: 29
        }
      },
      "149": {
        start: {
          line: 604,
          column: 32
        },
        end: {
          line: 604,
          column: 101
        }
      },
      "150": {
        start: {
          line: 606,
          column: 32
        },
        end: {
          line: 606,
          column: 91
        }
      },
      "151": {
        start: {
          line: 610,
          column: 20
        },
        end: {
          line: 610,
          column: 26
        }
      },
      "152": {
        start: {
          line: 614,
          column: 20
        },
        end: {
          line: 616,
          column: 23
        }
      },
      "153": {
        start: {
          line: 617,
          column: 20
        },
        end: {
          line: 617,
          column: 26
        }
      },
      "154": {
        start: {
          line: 621,
          column: 20
        },
        end: {
          line: 624,
          column: 23
        }
      },
      "155": {
        start: {
          line: 627,
          column: 20
        },
        end: {
          line: 635,
          column: 21
        }
      },
      "156": {
        start: {
          line: 628,
          column: 24
        },
        end: {
          line: 634,
          column: 25
        }
      },
      "157": {
        start: {
          line: 629,
          column: 28
        },
        end: {
          line: 633,
          column: 29
        }
      },
      "158": {
        start: {
          line: 630,
          column: 32
        },
        end: {
          line: 630,
          column: 91
        }
      },
      "159": {
        start: {
          line: 632,
          column: 32
        },
        end: {
          line: 632,
          column: 87
        }
      },
      "160": {
        start: {
          line: 636,
          column: 20
        },
        end: {
          line: 636,
          column: 26
        }
      },
      "161": {
        start: {
          line: 640,
          column: 12
        },
        end: {
          line: 645,
          column: 15
        }
      },
      "162": {
        start: {
          line: 647,
          column: 12
        },
        end: {
          line: 656,
          column: 15
        }
      },
      "163": {
        start: {
          line: 659,
          column: 12
        },
        end: {
          line: 659,
          column: 65
        }
      },
      "164": {
        start: {
          line: 660,
          column: 12
        },
        end: {
          line: 663,
          column: 15
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 31
          },
          end: {
            line: 12,
            column: 32
          }
        },
        loc: {
          start: {
            line: 12,
            column: 51
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 27,
            column: 17
          }
        },
        loc: {
          start: {
            line: 27,
            column: 36
          },
          end: {
            line: 105,
            column: 1
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 49,
            column: 35
          },
          end: {
            line: 49,
            column: 36
          }
        },
        loc: {
          start: {
            line: 49,
            column: 44
          },
          end: {
            line: 49,
            column: 70
          }
        },
        line: 49
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 53,
            column: 20
          },
          end: {
            line: 53,
            column: 21
          }
        },
        loc: {
          start: {
            line: 53,
            column: 30
          },
          end: {
            line: 60,
            column: 9
          }
        },
        line: 53
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 71,
            column: 32
          },
          end: {
            line: 71,
            column: 33
          }
        },
        loc: {
          start: {
            line: 71,
            column: 49
          },
          end: {
            line: 85,
            column: 13
          }
        },
        line: 71
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 111,
            column: 23
          },
          end: {
            line: 111,
            column: 24
          }
        },
        loc: {
          start: {
            line: 111,
            column: 43
          },
          end: {
            line: 152,
            column: 1
          }
        },
        line: 111
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        loc: {
          start: {
            line: 161,
            column: 24
          },
          end: {
            line: 230,
            column: 5
          }
        },
        line: 161
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 194,
            column: 62
          },
          end: {
            line: 194,
            column: 63
          }
        },
        loc: {
          start: {
            line: 194,
            column: 68
          },
          end: {
            line: 201,
            column: 17
          }
        },
        line: 194
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 207,
            column: 48
          },
          end: {
            line: 207,
            column: 49
          }
        },
        loc: {
          start: {
            line: 207,
            column: 54
          },
          end: {
            line: 216,
            column: 17
          }
        },
        line: 207
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 272,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        },
        loc: {
          start: {
            line: 272,
            column: 24
          },
          end: {
            line: 325,
            column: 5
          }
        },
        line: 272
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 346,
            column: 4
          },
          end: {
            line: 346,
            column: 5
          }
        },
        loc: {
          start: {
            line: 346,
            column: 24
          },
          end: {
            line: 400,
            column: 5
          }
        },
        line: 346
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 410,
            column: 4
          },
          end: {
            line: 410,
            column: 5
          }
        },
        loc: {
          start: {
            line: 410,
            column: 24
          },
          end: {
            line: 462,
            column: 5
          }
        },
        line: 410
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 472,
            column: 4
          },
          end: {
            line: 472,
            column: 5
          }
        },
        loc: {
          start: {
            line: 472,
            column: 24
          },
          end: {
            line: 537,
            column: 5
          }
        },
        line: 472
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 509,
            column: 30
          },
          end: {
            line: 509,
            column: 31
          }
        },
        loc: {
          start: {
            line: 509,
            column: 46
          },
          end: {
            line: 509,
            column: 51
          }
        },
        line: 509
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 551,
            column: 4
          },
          end: {
            line: 551,
            column: 5
          }
        },
        loc: {
          start: {
            line: 551,
            column: 24
          },
          end: {
            line: 665,
            column: 5
          }
        },
        line: 551
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 32,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 23
          },
          end: {
            line: 32,
            column: 28
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 33,
            column: 20
          },
          end: {
            line: 33,
            column: 22
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 34,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 34,
            column: 21
          },
          end: {
            line: 34,
            column: 22
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 35,
            column: 21
          },
          end: {
            line: 35,
            column: 27
          }
        }],
        line: 35
      },
      "5": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 29
          }
        }],
        line: 36
      },
      "6": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "7": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "8": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "9": {
        loc: {
          start: {
            line: 82,
            column: 53
          },
          end: {
            line: 82,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 53
          },
          end: {
            line: 82,
            column: 67
          }
        }, {
          start: {
            line: 82,
            column: 71
          },
          end: {
            line: 82,
            column: 73
          }
        }],
        line: 82
      },
      "10": {
        loc: {
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "11": {
        loc: {
          start: {
            line: 136,
            column: 45
          },
          end: {
            line: 136,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 45
          },
          end: {
            line: 136,
            column: 66
          }
        }, {
          start: {
            line: 136,
            column: 70
          },
          end: {
            line: 136,
            column: 72
          }
        }],
        line: 136
      },
      "12": {
        loc: {
          start: {
            line: 165,
            column: 20
          },
          end: {
            line: 165,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 165,
            column: 42
          },
          end: {
            line: 165,
            column: 47
          }
        }],
        line: 165
      },
      "13": {
        loc: {
          start: {
            line: 165,
            column: 49
          },
          end: {
            line: 165,
            column: 69
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 165,
            column: 64
          },
          end: {
            line: 165,
            column: 69
          }
        }],
        line: 165
      },
      "14": {
        loc: {
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 174,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 174,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "15": {
        loc: {
          start: {
            line: 187,
            column: 49
          },
          end: {
            line: 187,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 49
          },
          end: {
            line: 187,
            column: 63
          }
        }, {
          start: {
            line: 187,
            column: 67
          },
          end: {
            line: 187,
            column: 69
          }
        }],
        line: 187
      },
      "16": {
        loc: {
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 202,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 202,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "17": {
        loc: {
          start: {
            line: 199,
            column: 31
          },
          end: {
            line: 199,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 31
          },
          end: {
            line: 199,
            column: 42
          }
        }, {
          start: {
            line: 199,
            column: 46
          },
          end: {
            line: 199,
            column: 51
          }
        }],
        line: 199
      },
      "18": {
        loc: {
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 217,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 217,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "19": {
        loc: {
          start: {
            line: 280,
            column: 24
          },
          end: {
            line: 280,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 24
          },
          end: {
            line: 280,
            column: 40
          }
        }, {
          start: {
            line: 280,
            column: 44
          },
          end: {
            line: 280,
            column: 54
          }
        }],
        line: 280
      },
      "20": {
        loc: {
          start: {
            line: 283,
            column: 26
          },
          end: {
            line: 283,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 283,
            column: 26
          },
          end: {
            line: 283,
            column: 44
          }
        }, {
          start: {
            line: 283,
            column: 48
          },
          end: {
            line: 283,
            column: 50
          }
        }],
        line: 283
      },
      "21": {
        loc: {
          start: {
            line: 284,
            column: 30
          },
          end: {
            line: 284,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 284,
            column: 30
          },
          end: {
            line: 284,
            column: 52
          }
        }, {
          start: {
            line: 284,
            column: 56
          },
          end: {
            line: 284,
            column: 57
          }
        }],
        line: 284
      },
      "22": {
        loc: {
          start: {
            line: 287,
            column: 29
          },
          end: {
            line: 287,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 287,
            column: 29
          },
          end: {
            line: 287,
            column: 52
          }
        }, {
          start: {
            line: 287,
            column: 56
          },
          end: {
            line: 287,
            column: 58
          }
        }],
        line: 287
      },
      "23": {
        loc: {
          start: {
            line: 288,
            column: 30
          },
          end: {
            line: 288,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 288,
            column: 30
          },
          end: {
            line: 288,
            column: 54
          }
        }, {
          start: {
            line: 288,
            column: 58
          },
          end: {
            line: 288,
            column: 61
          }
        }],
        line: 288
      },
      "24": {
        loc: {
          start: {
            line: 289,
            column: 28
          },
          end: {
            line: 289,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 289,
            column: 28
          },
          end: {
            line: 289,
            column: 50
          }
        }, {
          start: {
            line: 289,
            column: 54
          },
          end: {
            line: 289,
            column: 59
          }
        }],
        line: 289
      },
      "25": {
        loc: {
          start: {
            line: 290,
            column: 31
          },
          end: {
            line: 290,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 290,
            column: 31
          },
          end: {
            line: 290,
            column: 56
          }
        }, {
          start: {
            line: 290,
            column: 60
          },
          end: {
            line: 290,
            column: 62
          }
        }],
        line: 290
      },
      "26": {
        loc: {
          start: {
            line: 296,
            column: 28
          },
          end: {
            line: 296,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 296,
            column: 47
          },
          end: {
            line: 296,
            column: 73
          }
        }, {
          start: {
            line: 296,
            column: 76
          },
          end: {
            line: 296,
            column: 80
          }
        }],
        line: 296
      },
      "27": {
        loc: {
          start: {
            line: 298,
            column: 12
          },
          end: {
            line: 303,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 12
          },
          end: {
            line: 303,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      },
      "28": {
        loc: {
          start: {
            line: 298,
            column: 16
          },
          end: {
            line: 298,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 298,
            column: 16
          },
          end: {
            line: 298,
            column: 23
          }
        }, {
          start: {
            line: 298,
            column: 27
          },
          end: {
            line: 298,
            column: 47
          }
        }],
        line: 298
      },
      "29": {
        loc: {
          start: {
            line: 354,
            column: 12
          },
          end: {
            line: 359,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 354,
            column: 12
          },
          end: {
            line: 359,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 354
      },
      "30": {
        loc: {
          start: {
            line: 362,
            column: 12
          },
          end: {
            line: 374,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 362,
            column: 12
          },
          end: {
            line: 374,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 362
      },
      "31": {
        loc: {
          start: {
            line: 362,
            column: 16
          },
          end: {
            line: 362,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 362,
            column: 16
          },
          end: {
            line: 362,
            column: 28
          }
        }, {
          start: {
            line: 362,
            column: 32
          },
          end: {
            line: 362,
            column: 47
          }
        }],
        line: 362
      },
      "32": {
        loc: {
          start: {
            line: 363,
            column: 43
          },
          end: {
            line: 363,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 363,
            column: 43
          },
          end: {
            line: 363,
            column: 55
          }
        }, {
          start: {
            line: 363,
            column: 59
          },
          end: {
            line: 363,
            column: 69
          }
        }],
        line: 363
      },
      "33": {
        loc: {
          start: {
            line: 364,
            column: 32
          },
          end: {
            line: 366,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 365,
            column: 20
          },
          end: {
            line: 365,
            column: 45
          }
        }, {
          start: {
            line: 366,
            column: 21
          },
          end: {
            line: 366,
            column: 67
          }
        }],
        line: 364
      },
      "34": {
        loc: {
          start: {
            line: 366,
            column: 21
          },
          end: {
            line: 366,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 366,
            column: 37
          },
          end: {
            line: 366,
            column: 60
          }
        }, {
          start: {
            line: 366,
            column: 63
          },
          end: {
            line: 366,
            column: 67
          }
        }],
        line: 366
      },
      "35": {
        loc: {
          start: {
            line: 368,
            column: 16
          },
          end: {
            line: 373,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 368,
            column: 16
          },
          end: {
            line: 373,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 368
      },
      "36": {
        loc: {
          start: {
            line: 368,
            column: 20
          },
          end: {
            line: 368,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 368,
            column: 20
          },
          end: {
            line: 368,
            column: 27
          }
        }, {
          start: {
            line: 368,
            column: 31
          },
          end: {
            line: 368,
            column: 51
          }
        }],
        line: 368
      },
      "37": {
        loc: {
          start: {
            line: 380,
            column: 12
          },
          end: {
            line: 385,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 380,
            column: 12
          },
          end: {
            line: 385,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 380
      },
      "38": {
        loc: {
          start: {
            line: 380,
            column: 16
          },
          end: {
            line: 380,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 380,
            column: 16
          },
          end: {
            line: 380,
            column: 30
          }
        }, {
          start: {
            line: 380,
            column: 34
          },
          end: {
            line: 380,
            column: 65
          }
        }],
        line: 380
      },
      "39": {
        loc: {
          start: {
            line: 417,
            column: 12
          },
          end: {
            line: 422,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 417,
            column: 12
          },
          end: {
            line: 422,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 417
      },
      "40": {
        loc: {
          start: {
            line: 426,
            column: 12
          },
          end: {
            line: 432,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 426,
            column: 12
          },
          end: {
            line: 432,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 426
      },
      "41": {
        loc: {
          start: {
            line: 479,
            column: 12
          },
          end: {
            line: 484,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 479,
            column: 12
          },
          end: {
            line: 484,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 479
      },
      "42": {
        loc: {
          start: {
            line: 503,
            column: 34
          },
          end: {
            line: 503,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 503,
            column: 34
          },
          end: {
            line: 503,
            column: 69
          }
        }, {
          start: {
            line: 503,
            column: 73
          },
          end: {
            line: 503,
            column: 74
          }
        }],
        line: 503
      },
      "43": {
        loc: {
          start: {
            line: 513,
            column: 67
          },
          end: {
            line: 513,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 513,
            column: 67
          },
          end: {
            line: 513,
            column: 88
          }
        }, {
          start: {
            line: 513,
            column: 92
          },
          end: {
            line: 513,
            column: 95
          }
        }],
        line: 513
      },
      "44": {
        loc: {
          start: {
            line: 514,
            column: 61
          },
          end: {
            line: 514,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 514,
            column: 61
          },
          end: {
            line: 514,
            column: 75
          }
        }, {
          start: {
            line: 514,
            column: 79
          },
          end: {
            line: 514,
            column: 81
          }
        }],
        line: 514
      },
      "45": {
        loc: {
          start: {
            line: 515,
            column: 49
          },
          end: {
            line: 515,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 515,
            column: 49
          },
          end: {
            line: 515,
            column: 63
          }
        }, {
          start: {
            line: 515,
            column: 67
          },
          end: {
            line: 515,
            column: 69
          }
        }],
        line: 515
      },
      "46": {
        loc: {
          start: {
            line: 555,
            column: 28
          },
          end: {
            line: 555,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 555,
            column: 37
          },
          end: {
            line: 555,
            column: 39
          }
        }],
        line: 555
      },
      "47": {
        loc: {
          start: {
            line: 559,
            column: 12
          },
          end: {
            line: 564,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 559,
            column: 12
          },
          end: {
            line: 564,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 559
      },
      "48": {
        loc: {
          start: {
            line: 574,
            column: 12
          },
          end: {
            line: 579,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 574,
            column: 12
          },
          end: {
            line: 579,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 574
      },
      "49": {
        loc: {
          start: {
            line: 592,
            column: 12
          },
          end: {
            line: 637,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 593,
            column: 16
          },
          end: {
            line: 610,
            column: 26
          }
        }, {
          start: {
            line: 612,
            column: 16
          },
          end: {
            line: 617,
            column: 26
          }
        }, {
          start: {
            line: 619,
            column: 16
          },
          end: {
            line: 636,
            column: 26
          }
        }],
        line: 592
      },
      "50": {
        loc: {
          start: {
            line: 601,
            column: 20
          },
          end: {
            line: 609,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 601,
            column: 20
          },
          end: {
            line: 609,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 601
      },
      "51": {
        loc: {
          start: {
            line: 627,
            column: 20
          },
          end: {
            line: 635,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 627,
            column: 20
          },
          end: {
            line: 635,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 627
      },
      "52": {
        loc: {
          start: {
            line: 652,
            column: 32
          },
          end: {
            line: 652,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 652,
            column: 56
          },
          end: {
            line: 652,
            column: 75
          }
        }, {
          start: {
            line: 652,
            column: 78
          },
          end: {
            line: 652,
            column: 79
          }
        }],
        line: 652
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0],
      "13": [0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "007f873fd4bba3c86ab8db5bd9f8c9070ffb3388"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_b9hc7fgit = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_b9hc7fgit();
/**
 * Events API Routes
 * Handle event creation, management, and queries
 */

import express from 'express';
import { body, param, query, validationResult } from 'express-validator';
const router =
/* istanbul ignore next */
(cov_b9hc7fgit().s[0]++, express.Router());

// Helper function to handle validation errors
/* istanbul ignore next */
cov_b9hc7fgit().s[1]++;
const handleValidationErrors = (req, res, next) => {
  /* istanbul ignore next */
  cov_b9hc7fgit().f[0]++;
  const errors =
  /* istanbul ignore next */
  (cov_b9hc7fgit().s[2]++, validationResult(req));
  /* istanbul ignore next */
  cov_b9hc7fgit().s[3]++;
  if (!errors.isEmpty()) {
    /* istanbul ignore next */
    cov_b9hc7fgit().b[0][0]++;
    cov_b9hc7fgit().s[4]++;
    return res.status(400).json({
      error: 'Validation failed',
      details: errors.array()
    });
  } else
  /* istanbul ignore next */
  {
    cov_b9hc7fgit().b[0][1]++;
  }
  cov_b9hc7fgit().s[5]++;
  next();
};

/**
 * GET /api/events
 * Get all events with optional filtering
 */
/* istanbul ignore next */
cov_b9hc7fgit().s[6]++;
router.get('/', async (req, res) => {
  /* istanbul ignore next */
  cov_b9hc7fgit().f[1]++;
  cov_b9hc7fgit().s[7]++;
  try {
    const {
      database
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[8]++, req.app.locals);
    const {
      status,
      upcoming =
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[1][0]++, false),
      limit =
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[2][0]++, 10),
      offset =
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[3][0]++, 0),
      sortBy =
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[4][0]++, 'date'),
      sortOrder =
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[5][0]++, 'asc')
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[9]++, req.query);

    // Build filter
    const filter =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[10]++, {});
    /* istanbul ignore next */
    cov_b9hc7fgit().s[11]++;
    if (status) {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[6][0]++;
      cov_b9hc7fgit().s[12]++;
      filter.status = status;
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[6][1]++;
    }

    // Get events
    let events =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[13]++, await database.findAll('events', filter));

    // Filter upcoming events
    /* istanbul ignore next */
    cov_b9hc7fgit().s[14]++;
    if (upcoming === 'true') {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[7][0]++;
      const now =
      /* istanbul ignore next */
      (cov_b9hc7fgit().s[15]++, new Date());
      /* istanbul ignore next */
      cov_b9hc7fgit().s[16]++;
      events = events.filter(event => {
        /* istanbul ignore next */
        cov_b9hc7fgit().f[2]++;
        cov_b9hc7fgit().s[17]++;
        return new Date(event.date) > now;
      });
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[7][1]++;
    }

    // Sort events
    cov_b9hc7fgit().s[18]++;
    events.sort((a, b) => {
      /* istanbul ignore next */
      cov_b9hc7fgit().f[3]++;
      const aValue =
      /* istanbul ignore next */
      (cov_b9hc7fgit().s[19]++, new Date(a[sortBy]));
      const bValue =
      /* istanbul ignore next */
      (cov_b9hc7fgit().s[20]++, new Date(b[sortBy]));
      /* istanbul ignore next */
      cov_b9hc7fgit().s[21]++;
      if (sortOrder === 'desc') {
        /* istanbul ignore next */
        cov_b9hc7fgit().b[8][0]++;
        cov_b9hc7fgit().s[22]++;
        return bValue - aValue;
      } else
      /* istanbul ignore next */
      {
        cov_b9hc7fgit().b[8][1]++;
      }
      cov_b9hc7fgit().s[23]++;
      return aValue - bValue;
    });

    // Paginate
    const total =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[24]++, events.length);
    const paginatedEvents =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[25]++, events.slice(parseInt(offset), parseInt(offset) + parseInt(limit)));

    // Enhance events with additional data
    const enhancedEvents =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[26]++, await Promise.all(paginatedEvents.map(async event => {
      /* istanbul ignore next */
      cov_b9hc7fgit().f[4]++;
      const [participantCount, talkCount] =
      /* istanbul ignore next */
      (cov_b9hc7fgit().s[27]++, await Promise.all([database.count('participants', {
        eventId: event.id
      }), database.count('talks', {
        eventId: event.id
      })]));
      /* istanbul ignore next */
      cov_b9hc7fgit().s[28]++;
      return {
        ...event,
        stats: {
          participantCount,
          talkCount,
          spotsRemaining: Math.max(0, (
          /* istanbul ignore next */
          (cov_b9hc7fgit().b[9][0]++, event.maxTalks) ||
          /* istanbul ignore next */
          (cov_b9hc7fgit().b[9][1]++, 20)) - talkCount)
        }
      };
    })));
    /* istanbul ignore next */
    cov_b9hc7fgit().s[29]++;
    res.json({
      events: enhancedEvents,
      pagination: {
        total,
        limit: parseInt(limit),
        offset: parseInt(offset),
        hasMore: parseInt(offset) + parseInt(limit) < total
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_b9hc7fgit().s[30]++;
    console.error('Error fetching events:', error);
    /* istanbul ignore next */
    cov_b9hc7fgit().s[31]++;
    res.status(500).json({
      error: 'Failed to fetch events',
      message: 'イベント情報の取得に失敗しました'
    });
  }
});

/**
 * GET /api/events/current
 * Get the current/next upcoming event
 */
/* istanbul ignore next */
cov_b9hc7fgit().s[32]++;
router.get('/current', async (req, res) => {
  /* istanbul ignore next */
  cov_b9hc7fgit().f[5]++;
  cov_b9hc7fgit().s[33]++;
  try {
    const {
      database
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[34]++, req.app.locals);
    const currentEvent =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[35]++, await database.getCurrentEvent());
    /* istanbul ignore next */
    cov_b9hc7fgit().s[36]++;
    if (!currentEvent) {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[10][0]++;
      cov_b9hc7fgit().s[37]++;
      return res.status(404).json({
        error: 'No current event',
        message: '現在開催予定のイベントはありません'
      });
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[10][1]++;
    }

    // Get event statistics
    const [participantCount, talkCount, analytics] =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[38]++, await Promise.all([database.count('participants', {
      eventId: currentEvent.id
    }), database.count('talks', {
      eventId: currentEvent.id
    }), database.getEventAnalytics(currentEvent.id)]));
    const enhancedEvent =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[39]++, {
      ...currentEvent,
      stats: {
        participantCount,
        talkCount,
        spotsRemaining: Math.max(0, (
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[11][0]++, currentEvent.maxTalks) ||
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[11][1]++, 20)) - talkCount),
        ...analytics
      }
    });
    /* istanbul ignore next */
    cov_b9hc7fgit().s[40]++;
    res.json({
      event: enhancedEvent
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_b9hc7fgit().s[41]++;
    console.error('Error fetching current event:', error);
    /* istanbul ignore next */
    cov_b9hc7fgit().s[42]++;
    res.status(500).json({
      error: 'Failed to fetch current event',
      message: '現在のイベント情報の取得に失敗しました'
    });
  }
});

/**
 * GET /api/events/:id
 * Get a specific event by ID
 */
/* istanbul ignore next */
cov_b9hc7fgit().s[43]++;
router.get('/:id', param('id').isLength({
  min: 1
}).withMessage('Event ID is required'), handleValidationErrors, async (req, res) => {
  /* istanbul ignore next */
  cov_b9hc7fgit().f[6]++;
  cov_b9hc7fgit().s[44]++;
  try {
    const {
      database
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[45]++, req.app.locals);
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[46]++, req.params);
    const {
      includeParticipants =
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[12][0]++, false),
      includeTalks =
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[13][0]++, false)
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[47]++, req.query);
    const event =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[48]++, await database.findById('events', id));
    /* istanbul ignore next */
    cov_b9hc7fgit().s[49]++;
    if (!event) {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[14][0]++;
      cov_b9hc7fgit().s[50]++;
      return res.status(404).json({
        error: 'Event not found',
        message: 'イベントが見つかりません'
      });
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[14][1]++;
    }

    // Get event statistics
    const [participantCount, talkCount] =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[51]++, await Promise.all([database.count('participants', {
      eventId: id
    }), database.count('talks', {
      eventId: id
    })]));
    const enhancedEvent =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[52]++, {
      ...event,
      stats: {
        participantCount,
        talkCount,
        spotsRemaining: Math.max(0, (
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[15][0]++, event.maxTalks) ||
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[15][1]++, 20)) - talkCount)
      }
    });

    // Include participants if requested
    /* istanbul ignore next */
    cov_b9hc7fgit().s[53]++;
    if (includeParticipants === 'true') {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[16][0]++;
      const participants =
      /* istanbul ignore next */
      (cov_b9hc7fgit().s[54]++, await database.findAll('participants', {
        eventId: id
      }));
      /* istanbul ignore next */
      cov_b9hc7fgit().s[55]++;
      enhancedEvent.participants = participants.map(p => {
        /* istanbul ignore next */
        cov_b9hc7fgit().f[7]++;
        cov_b9hc7fgit().s[56]++;
        return {
          id: p.id,
          name: p.name,
          participationType: p.participationType,
          status: p.status,
          isSpeaker:
          /* istanbul ignore next */
          (cov_b9hc7fgit().b[17][0]++, p.isSpeaker) ||
          /* istanbul ignore next */
          (cov_b9hc7fgit().b[17][1]++, false),
          registeredAt: p.createdAt
        };
      });
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[16][1]++;
    }

    // Include talks if requested
    cov_b9hc7fgit().s[57]++;
    if (includeTalks === 'true') {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[18][0]++;
      const talks =
      /* istanbul ignore next */
      (cov_b9hc7fgit().s[58]++, await database.findAll('talks', {
        eventId: id
      }));
      /* istanbul ignore next */
      cov_b9hc7fgit().s[59]++;
      enhancedEvent.talks = talks.map(t => {
        /* istanbul ignore next */
        cov_b9hc7fgit().f[8]++;
        cov_b9hc7fgit().s[60]++;
        return {
          id: t.id,
          title: t.title,
          description: t.description,
          category: t.category,
          speakerName: t.speakerName,
          duration: t.duration,
          status: t.status,
          submittedAt: t.createdAt
        };
      });
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[18][1]++;
    }
    cov_b9hc7fgit().s[61]++;
    res.json({
      event: enhancedEvent
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_b9hc7fgit().s[62]++;
    console.error('Error fetching event:', error);
    /* istanbul ignore next */
    cov_b9hc7fgit().s[63]++;
    res.status(500).json({
      error: 'Failed to fetch event',
      message: 'イベント情報の取得に失敗しました'
    });
  }
});

/**
 * POST /api/events
 * Create a new event (admin only)
 */
/* istanbul ignore next */
cov_b9hc7fgit().s[64]++;
router.post('/', [body('title').trim().isLength({
  min: 1,
  max: 200
}).withMessage('Title is required and must be less than 200 characters'), body('description').trim().isLength({
  min: 1,
  max: 2000
}).withMessage('Description is required and must be less than 2000 characters'), body('date').isISO8601().withMessage('Valid date is required'), body('endDate').optional().isISO8601().withMessage('Valid end date is required'), body('venue.name').trim().isLength({
  min: 1,
  max: 200
}).withMessage('Venue name is required'), body('venue.capacity').optional().isInt({
  min: 1
}).withMessage('Venue capacity must be a positive integer'), body('maxTalks').optional().isInt({
  min: 1,
  max: 100
}).withMessage('Max talks must be between 1 and 100'), body('talkDuration').optional().isInt({
  min: 1,
  max: 30
}).withMessage('Talk duration must be between 1 and 30 minutes')], handleValidationErrors, async (req, res) => {
  /* istanbul ignore next */
  cov_b9hc7fgit().f[9]++;
  cov_b9hc7fgit().s[65]++;
  try {
    const {
      database,
      eventService
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[66]++, req.app.locals);
    const eventData =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[67]++, req.body);

    // Set defaults
    const newEvent =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[68]++, {
      ...eventData,
      status:
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[19][0]++, eventData.status) ||
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[19][1]++, 'upcoming'),
      registrationOpen: eventData.registrationOpen !== false,
      talkSubmissionOpen: eventData.talkSubmissionOpen !== false,
      maxTalks:
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[20][0]++, eventData.maxTalks) ||
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[20][1]++, 20),
      talkDuration:
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[21][0]++, eventData.talkDuration) ||
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[21][1]++, 5),
      venue: {
        name: eventData.venue.name,
        address:
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[22][0]++, eventData.venue.address) ||
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[22][1]++, ''),
        capacity:
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[23][0]++, eventData.venue.capacity) ||
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[23][1]++, 100),
        online:
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[24][0]++, eventData.venue.online) ||
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[24][1]++, false),
        onlineUrl:
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[25][0]++, eventData.venue.onlineUrl) ||
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[25][1]++, '')
      }
    });

    // Validate dates
    const startDate =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[69]++, new Date(newEvent.date));
    const endDate =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[70]++, newEvent.endDate ?
    /* istanbul ignore next */
    (cov_b9hc7fgit().b[26][0]++, new Date(newEvent.endDate)) :
    /* istanbul ignore next */
    (cov_b9hc7fgit().b[26][1]++, null));
    /* istanbul ignore next */
    cov_b9hc7fgit().s[71]++;
    if (
    /* istanbul ignore next */
    (cov_b9hc7fgit().b[28][0]++, endDate) &&
    /* istanbul ignore next */
    (cov_b9hc7fgit().b[28][1]++, endDate <= startDate)) {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[27][0]++;
      cov_b9hc7fgit().s[72]++;
      return res.status(400).json({
        error: 'Invalid dates',
        message: 'End date must be after start date'
      });
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[27][1]++;
    }
    const event =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[73]++, await database.create('events', newEvent));

    // Track analytics
    /* istanbul ignore next */
    cov_b9hc7fgit().s[74]++;
    await eventService.trackAnalytics(event.id, 'event_created', {
      source: 'admin'
    });
    /* istanbul ignore next */
    cov_b9hc7fgit().s[75]++;
    res.status(201).json({
      success: true,
      message: 'Event created successfully',
      event
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_b9hc7fgit().s[76]++;
    console.error('Error creating event:', error);
    /* istanbul ignore next */
    cov_b9hc7fgit().s[77]++;
    res.status(500).json({
      error: 'Failed to create event',
      message: 'イベントの作成に失敗しました'
    });
  }
});

/**
 * PUT /api/events/:id
 * Update an event (admin only)
 */
/* istanbul ignore next */
cov_b9hc7fgit().s[78]++;
router.put('/:id', [param('id').isLength({
  min: 1
}).withMessage('Event ID is required'), body('title').optional().trim().isLength({
  min: 1,
  max: 200
}), body('description').optional().trim().isLength({
  min: 1,
  max: 2000
}), body('date').optional().isISO8601(), body('endDate').optional().isISO8601(), body('status').optional().isIn(['upcoming', 'ongoing', 'completed', 'cancelled']), body('registrationOpen').optional().isBoolean(), body('talkSubmissionOpen').optional().isBoolean(), body('maxTalks').optional().isInt({
  min: 1,
  max: 100
}), body('talkDuration').optional().isInt({
  min: 1,
  max: 30
})], handleValidationErrors, async (req, res) => {
  /* istanbul ignore next */
  cov_b9hc7fgit().f[10]++;
  cov_b9hc7fgit().s[79]++;
  try {
    const {
      database,
      eventService
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[80]++, req.app.locals);
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[81]++, req.params);
    const updates =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[82]++, req.body);

    // Find existing event
    const event =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[83]++, await database.findById('events', id));
    /* istanbul ignore next */
    cov_b9hc7fgit().s[84]++;
    if (!event) {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[29][0]++;
      cov_b9hc7fgit().s[85]++;
      return res.status(404).json({
        error: 'Event not found',
        message: 'イベントが見つかりません'
      });
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[29][1]++;
    }

    // Validate date changes
    cov_b9hc7fgit().s[86]++;
    if (
    /* istanbul ignore next */
    (cov_b9hc7fgit().b[31][0]++, updates.date) ||
    /* istanbul ignore next */
    (cov_b9hc7fgit().b[31][1]++, updates.endDate)) {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[30][0]++;
      const startDate =
      /* istanbul ignore next */
      (cov_b9hc7fgit().s[87]++, new Date(
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[32][0]++, updates.date) ||
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[32][1]++, event.date)));
      const endDate =
      /* istanbul ignore next */
      (cov_b9hc7fgit().s[88]++, updates.endDate ?
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[33][0]++, new Date(updates.endDate)) :
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[33][1]++, event.endDate ?
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[34][0]++, new Date(event.endDate)) :
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[34][1]++, null)));
      /* istanbul ignore next */
      cov_b9hc7fgit().s[89]++;
      if (
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[36][0]++, endDate) &&
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[36][1]++, endDate <= startDate)) {
        /* istanbul ignore next */
        cov_b9hc7fgit().b[35][0]++;
        cov_b9hc7fgit().s[90]++;
        return res.status(400).json({
          error: 'Invalid dates',
          message: 'End date must be after start date'
        });
      } else
      /* istanbul ignore next */
      {
        cov_b9hc7fgit().b[35][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[30][1]++;
    }

    // Update event
    const updatedEvent =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[91]++, await database.update('events', id, updates));

    // Track analytics for status changes
    /* istanbul ignore next */
    cov_b9hc7fgit().s[92]++;
    if (
    /* istanbul ignore next */
    (cov_b9hc7fgit().b[38][0]++, updates.status) &&
    /* istanbul ignore next */
    (cov_b9hc7fgit().b[38][1]++, updates.status !== event.status)) {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[37][0]++;
      cov_b9hc7fgit().s[93]++;
      await eventService.trackAnalytics(id, 'event_status_changed', {
        from: event.status,
        to: updates.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[37][1]++;
    }
    cov_b9hc7fgit().s[94]++;
    res.json({
      success: true,
      message: 'Event updated successfully',
      event: updatedEvent
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_b9hc7fgit().s[95]++;
    console.error('Error updating event:', error);
    /* istanbul ignore next */
    cov_b9hc7fgit().s[96]++;
    res.status(500).json({
      error: 'Failed to update event',
      message: 'イベントの更新に失敗しました'
    });
  }
});

/**
 * DELETE /api/events/:id
 * Delete an event (admin only)
 */
/* istanbul ignore next */
cov_b9hc7fgit().s[97]++;
router.delete('/:id', param('id').isLength({
  min: 1
}).withMessage('Event ID is required'), handleValidationErrors, async (req, res) => {
  /* istanbul ignore next */
  cov_b9hc7fgit().f[11]++;
  cov_b9hc7fgit().s[98]++;
  try {
    const {
      database,
      eventService
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[99]++, req.app.locals);
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[100]++, req.params);

    // Find existing event
    const event =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[101]++, await database.findById('events', id));
    /* istanbul ignore next */
    cov_b9hc7fgit().s[102]++;
    if (!event) {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[39][0]++;
      cov_b9hc7fgit().s[103]++;
      return res.status(404).json({
        error: 'Event not found',
        message: 'イベントが見つかりません'
      });
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[39][1]++;
    }

    // Check if event has participants
    const participantCount =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[104]++, await database.count('participants', {
      eventId: id
    }));
    /* istanbul ignore next */
    cov_b9hc7fgit().s[105]++;
    if (participantCount > 0) {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[40][0]++;
      cov_b9hc7fgit().s[106]++;
      return res.status(400).json({
        error: 'Cannot delete event with participants',
        message: '参加者がいるイベントは削除できません。代わりにキャンセルすることを検討してください。',
        suggestion: 'Consider updating status to "cancelled" instead'
      });
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[40][1]++;
    }

    // Delete related talks first
    const talks =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[107]++, await database.findAll('talks', {
      eventId: id
    }));
    /* istanbul ignore next */
    cov_b9hc7fgit().s[108]++;
    for (const talk of talks) {
      /* istanbul ignore next */
      cov_b9hc7fgit().s[109]++;
      await database.delete('talks', talk.id);
    }

    // Delete event
    /* istanbul ignore next */
    cov_b9hc7fgit().s[110]++;
    await database.delete('events', id);

    // Track analytics
    /* istanbul ignore next */
    cov_b9hc7fgit().s[111]++;
    await eventService.trackAnalytics(id, 'event_deleted', {
      participantCount,
      talkCount: talks.length
    });
    /* istanbul ignore next */
    cov_b9hc7fgit().s[112]++;
    res.json({
      success: true,
      message: 'Event deleted successfully',
      eventId: id
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_b9hc7fgit().s[113]++;
    console.error('Error deleting event:', error);
    /* istanbul ignore next */
    cov_b9hc7fgit().s[114]++;
    res.status(500).json({
      error: 'Failed to delete event',
      message: 'イベントの削除に失敗しました'
    });
  }
});

/**
 * GET /api/events/:id/analytics
 * Get event analytics (admin only)
 */
/* istanbul ignore next */
cov_b9hc7fgit().s[115]++;
router.get('/:id/analytics', param('id').isLength({
  min: 1
}).withMessage('Event ID is required'), handleValidationErrors, async (req, res) => {
  /* istanbul ignore next */
  cov_b9hc7fgit().f[12]++;
  cov_b9hc7fgit().s[116]++;
  try {
    const {
      database
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[117]++, req.app.locals);
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[118]++, req.params);

    // Check if event exists
    const event =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[119]++, await database.findById('events', id));
    /* istanbul ignore next */
    cov_b9hc7fgit().s[120]++;
    if (!event) {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[41][0]++;
      cov_b9hc7fgit().s[121]++;
      return res.status(404).json({
        error: 'Event not found',
        message: 'イベントが見つかりません'
      });
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[41][1]++;
    }

    // Get comprehensive analytics
    const analytics =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[122]++, await database.getEventAnalytics(id));

    // Additional analytics
    const participants =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[123]++, await database.findAll('participants', {
      eventId: id
    }));
    const talks =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[124]++, await database.findAll('talks', {
      eventId: id
    }));
    const enhancedAnalytics =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[125]++, {
      ...analytics,
      timeline: {
        registrationTrend: analytics.registrationTrend,
        dailyRegistrations: this.getDailyRegistrations(participants),
        peakRegistrationDay: this.getPeakRegistrationDay(participants)
      },
      demographics: {
        participationTypes: analytics.participationTypes,
        speakerRatio: analytics.speakerCount / analytics.participantCount,
        onlineRatio: (
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[42][0]++, analytics.participationTypes.online) ||
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[42][1]++, 0)) / analytics.participantCount
      },
      content: {
        talkCategories: analytics.talkCategories,
        avgTalkRating: analytics.avgRating,
        topCategories: Object.entries(analytics.talkCategories).sort(([, a], [, b]) => {
          /* istanbul ignore next */
          cov_b9hc7fgit().f[13]++;
          cov_b9hc7fgit().s[126]++;
          return b - a;
        }).slice(0, 5)
      },
      capacity: {
        currentCapacity: analytics.participantCount / (
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[43][0]++, event.venue?.capacity) ||
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[43][1]++, 100)),
        talkSlotsUsed: analytics.speakerCount / (
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[44][0]++, event.maxTalks) ||
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[44][1]++, 20)),
        remainingSlots: Math.max(0, (
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[45][0]++, event.maxTalks) ||
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[45][1]++, 20)) - analytics.speakerCount)
      },
      generatedAt: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_b9hc7fgit().s[127]++;
    res.json({
      analytics: enhancedAnalytics,
      event: {
        id: event.id,
        title: event.title,
        date: event.date,
        status: event.status
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_b9hc7fgit().s[128]++;
    console.error('Error fetching analytics:', error);
    /* istanbul ignore next */
    cov_b9hc7fgit().s[129]++;
    res.status(500).json({
      error: 'Failed to fetch analytics',
      message: 'アナリティクスデータの取得に失敗しました'
    });
  }
});

/**
 * POST /api/events/:id/status
 * Update event status with automatic actions
 */
/* istanbul ignore next */
cov_b9hc7fgit().s[130]++;
router.post('/:id/status', [param('id').isLength({
  min: 1
}).withMessage('Event ID is required'), body('status').isIn(['upcoming', 'ongoing', 'completed', 'cancelled']).withMessage('Valid status is required'), body('reason').optional().trim().isLength({
  max: 500
}).withMessage('Reason must be less than 500 characters')], handleValidationErrors, async (req, res) => {
  /* istanbul ignore next */
  cov_b9hc7fgit().f[14]++;
  cov_b9hc7fgit().s[131]++;
  try {
    const {
      database,
      eventService,
      emailService
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[132]++, req.app.locals);
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[133]++, req.params);
    const {
      status,
      reason =
      /* istanbul ignore next */
      (cov_b9hc7fgit().b[46][0]++, '')
    } =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[134]++, req.body);

    // Find existing event
    const event =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[135]++, await database.findById('events', id));
    /* istanbul ignore next */
    cov_b9hc7fgit().s[136]++;
    if (!event) {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[47][0]++;
      cov_b9hc7fgit().s[137]++;
      return res.status(404).json({
        error: 'Event not found',
        message: 'イベントが見つかりません'
      });
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[47][1]++;
    }

    // Prevent invalid status transitions
    const validTransitions =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[138]++, {
      upcoming: ['ongoing', 'cancelled'],
      ongoing: ['completed', 'cancelled'],
      completed: [],
      cancelled: []
    });
    /* istanbul ignore next */
    cov_b9hc7fgit().s[139]++;
    if (!validTransitions[event.status].includes(status)) {
      /* istanbul ignore next */
      cov_b9hc7fgit().b[48][0]++;
      cov_b9hc7fgit().s[140]++;
      return res.status(400).json({
        error: 'Invalid status transition',
        message: `Cannot change status from ${event.status} to ${status}`
      });
    } else
    /* istanbul ignore next */
    {
      cov_b9hc7fgit().b[48][1]++;
    }

    // Update event status
    const updatedEvent =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[141]++, await database.update('events', id, {
      status,
      statusChangeReason: reason,
      statusChangedAt: new Date().toISOString()
    }));

    // Perform status-specific actions
    const participants =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[142]++, await database.findAll('participants', {
      eventId: id
    }));
    const settings =
    /* istanbul ignore next */
    (cov_b9hc7fgit().s[143]++, await database.getSettings());
    /* istanbul ignore next */
    cov_b9hc7fgit().s[144]++;
    switch (status) {
      case 'cancelled':
        /* istanbul ignore next */
        cov_b9hc7fgit().b[49][0]++;
        cov_b9hc7fgit().s[145]++;
        // Close registration and talk submission
        await database.update('events', id, {
          registrationOpen: false,
          talkSubmissionOpen: false
        });

        // Notify participants if email is enabled
        /* istanbul ignore next */
        cov_b9hc7fgit().s[146]++;
        if (settings.emailEnabled) {
          /* istanbul ignore next */
          cov_b9hc7fgit().b[50][0]++;
          cov_b9hc7fgit().s[147]++;
          for (const participant of participants) {
            /* istanbul ignore next */
            cov_b9hc7fgit().s[148]++;
            try {
              /* istanbul ignore next */
              cov_b9hc7fgit().s[149]++;
              await emailService.sendEventCancellation(participant, event, reason);
            } catch (error) {
              /* istanbul ignore next */
              cov_b9hc7fgit().s[150]++;
              console.error('Failed to send cancellation email:', error);
            }
          }
        } else
        /* istanbul ignore next */
        {
          cov_b9hc7fgit().b[50][1]++;
        }
        cov_b9hc7fgit().s[151]++;
        break;
      case 'ongoing':
        /* istanbul ignore next */
        cov_b9hc7fgit().b[49][1]++;
        cov_b9hc7fgit().s[152]++;
        // Close registration
        await database.update('events', id, {
          registrationOpen: false
        });
        /* istanbul ignore next */
        cov_b9hc7fgit().s[153]++;
        break;
      case 'completed':
        /* istanbul ignore next */
        cov_b9hc7fgit().b[49][2]++;
        cov_b9hc7fgit().s[154]++;
        // Close everything and trigger post-event processes
        await database.update('events', id, {
          registrationOpen: false,
          talkSubmissionOpen: false
        });

        // Send feedback request emails
        /* istanbul ignore next */
        cov_b9hc7fgit().s[155]++;
        if (settings.emailEnabled) {
          /* istanbul ignore next */
          cov_b9hc7fgit().b[51][0]++;
          cov_b9hc7fgit().s[156]++;
          for (const participant of participants) {
            /* istanbul ignore next */
            cov_b9hc7fgit().s[157]++;
            try {
              /* istanbul ignore next */
              cov_b9hc7fgit().s[158]++;
              await emailService.sendFeedbackRequest(participant, event);
            } catch (error) {
              /* istanbul ignore next */
              cov_b9hc7fgit().s[159]++;
              console.error('Failed to send feedback email:', error);
            }
          }
        } else
        /* istanbul ignore next */
        {
          cov_b9hc7fgit().b[51][1]++;
        }
        cov_b9hc7fgit().s[160]++;
        break;
    }

    // Track analytics
    /* istanbul ignore next */
    cov_b9hc7fgit().s[161]++;
    await eventService.trackAnalytics(id, 'event_status_changed', {
      from: event.status,
      to: status,
      reason: reason,
      participantCount: participants.length
    });
    /* istanbul ignore next */
    cov_b9hc7fgit().s[162]++;
    res.json({
      success: true,
      message: `Event status updated to ${status}`,
      event: updatedEvent,
      actionsPerformed: {
        emailsSent: settings.emailEnabled ?
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[52][0]++, participants.length) :
        /* istanbul ignore next */
        (cov_b9hc7fgit().b[52][1]++, 0),
        registrationClosed: ['cancelled', 'ongoing', 'completed'].includes(status),
        talkSubmissionClosed: ['cancelled', 'completed'].includes(status)
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_b9hc7fgit().s[163]++;
    console.error('Error updating event status:', error);
    /* istanbul ignore next */
    cov_b9hc7fgit().s[164]++;
    res.status(500).json({
      error: 'Failed to update event status',
      message: 'イベントステータスの更新に失敗しました'
    });
  }
});
export default router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,