{"version":3,"names":["fs","path","fileURLToPath","EventEmitter","__filename","import","meta","url","__dirname","dirname","DatabaseService","constructor","dataDir","join","cache","Map","initialized","saveQueue","saveTimeout","initialize","mkdir","recursive","collections","events","participants","talks","settings","analytics","collection","filename","Object","entries","initializeCollection","initializeSettings","emit","console","log","error","filePath","data","readFile","set","JSON","parse","code","emptyData","saveCollection","defaultSettings","siteName","siteUrl","process","env","SITE_URL","adminEmail","ADMIN_EMAIL","emailEnabled","EMAIL_ENABLED","analyticsEnabled","registrationSettings","requireApproval","allowWalkIn","maxParticipants","autoConfirmation","talkSettings","allowLastMinute","maxDuration","categories","notificationSettings","emailOnRegistration","emailOnTalkSubmission","reminderEmails","reminderDays","createdAt","Date","toISOString","updatedAt","existingSettings","get","length","waitForConnection","Promise","resolve","once","findAll","filter","validateCollection","keys","item","matchesFilter","findById","id","find","findOne","create","document","now","newDocument","generateId","push","queueSave","update","updates","index","findIndex","Error","updatedDocument","delete","deletedDocument","splice","count","results","countByField","field","counts","forEach","value","getStats","total","createdToday","created","today","toDateString","createdThisWeek","weekAgo","setDate","getDate","lastUpdated","Math","max","map","getCurrentEvent","status","sort","a","b","date","getEventParticipants","eventId","getEventTalks","getEventAnalytics","participantCount","speakerCount","participationTypes","talkCategories","registrationTrend","getRegistrationTrend","avgRating","calculateAverageRating","trend","participant","ratingsArray","talk","rating","reduce","sum","getSettings","updateSettings","updatedSettings","seed","seedData","exportData","exportedAt","version","importData","Array","isArray","every","key","operator","operatorValue","includes","random","toString","substr","clearTimeout","setTimeout","collectionsToSave","from","clear","writeFile","stringify","close"],"sources":["database.js"],"sourcesContent":["/**\n * Database Service for Lightning Talk Event Management\n * File-based JSON database with in-memory caching for development\n * Can be easily replaced with PostgreSQL/MongoDB for production\n */\n\nimport fs from 'fs/promises';\nimport path from 'path';\nimport { fileURLToPath } from 'url';\nimport { EventEmitter } from 'events';\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\nexport class DatabaseService extends EventEmitter {\n  constructor() {\n    super();\n    this.dataDir = path.join(__dirname, '../data');\n    this.cache = new Map();\n    this.initialized = false;\n    this.saveQueue = new Map();\n    this.saveTimeout = null;\n  }\n\n  async initialize() {\n    try {\n      // Ensure data directory exists\n      await fs.mkdir(this.dataDir, { recursive: true });\n\n      // Initialize collections\n      this.collections = {\n        events: 'events.json',\n        participants: 'participants.json',\n        talks: 'talks.json',\n        settings: 'settings.json',\n        analytics: 'analytics.json'\n      };\n\n      // Load or create each collection\n      for (const [collection, filename] of Object.entries(this.collections)) {\n        await this.initializeCollection(collection, filename);\n      }\n\n      // Initialize settings\n      await this.initializeSettings();\n\n      this.initialized = true;\n      this.emit('ready');\n\n      console.log('📦 Database service initialized');\n    } catch (error) {\n      console.error('Failed to initialize database:', error);\n      throw error;\n    }\n  }\n\n  async initializeCollection(collection, filename) {\n    const filePath = path.join(this.dataDir, filename);\n\n    try {\n      const data = await fs.readFile(filePath, 'utf8');\n      this.cache.set(collection, JSON.parse(data));\n    } catch (error) {\n      if (error.code === 'ENOENT') {\n        // File doesn't exist, create empty collection\n        const emptyData = [];\n        this.cache.set(collection, emptyData);\n        await this.saveCollection(collection);\n        console.log(`📝 Created new collection: ${collection}`);\n      } else {\n        throw error;\n      }\n    }\n  }\n\n  async initializeSettings() {\n    const defaultSettings = {\n      siteName: 'なんでもライトニングトーク',\n      siteUrl: process.env.SITE_URL || 'http://localhost:3000',\n      adminEmail: process.env.ADMIN_EMAIL || 'admin@example.com',\n      emailEnabled: process.env.EMAIL_ENABLED === 'true',\n      analyticsEnabled: true,\n      registrationSettings: {\n        requireApproval: false,\n        allowWalkIn: true,\n        maxParticipants: 100,\n        autoConfirmation: true\n      },\n      talkSettings: {\n        requireApproval: false,\n        allowLastMinute: true,\n        maxDuration: 5,\n        categories: [\n          'tech',\n          'hobby',\n          'learning',\n          'travel',\n          'food',\n          'game',\n          'lifehack',\n          'pet',\n          'garden',\n          'money',\n          'sports',\n          'music',\n          'other'\n        ]\n      },\n      notificationSettings: {\n        emailOnRegistration: true,\n        emailOnTalkSubmission: true,\n        reminderEmails: true,\n        reminderDays: [7, 1]\n      },\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n\n    const existingSettings = this.cache.get('settings');\n    if (!existingSettings || existingSettings.length === 0) {\n      this.cache.set('settings', [defaultSettings]);\n      await this.saveCollection('settings');\n    }\n  }\n\n  async waitForConnection() {\n    if (this.initialized) {\n      return;\n    }\n\n    return new Promise(resolve => {\n      this.once('ready', resolve);\n    });\n  }\n\n  // CRUD Operations\n  async findAll(collection, filter = {}) {\n    this.validateCollection(collection);\n    const data = this.cache.get(collection) || [];\n\n    if (Object.keys(filter).length === 0) {\n      return data;\n    }\n\n    return data.filter(item => this.matchesFilter(item, filter));\n  }\n\n  async findById(collection, id) {\n    this.validateCollection(collection);\n    const data = this.cache.get(collection) || [];\n    return data.find(item => item.id === id);\n  }\n\n  async findOne(collection, filter) {\n    this.validateCollection(collection);\n    const data = this.cache.get(collection) || [];\n    return data.find(item => this.matchesFilter(item, filter));\n  }\n\n  async create(collection, document) {\n    this.validateCollection(collection);\n\n    // Add metadata\n    const now = new Date().toISOString();\n    const newDocument = {\n      id: this.generateId(),\n      ...document,\n      createdAt: now,\n      updatedAt: now\n    };\n\n    // Add to cache\n    const data = this.cache.get(collection) || [];\n    data.push(newDocument);\n    this.cache.set(collection, data);\n\n    // Queue save\n    this.queueSave(collection);\n\n    // Emit event\n    this.emit('created', { collection, document: newDocument });\n\n    return newDocument;\n  }\n\n  async update(collection, id, updates) {\n    this.validateCollection(collection);\n\n    const data = this.cache.get(collection) || [];\n    const index = data.findIndex(item => item.id === id);\n\n    if (index === -1) {\n      throw new Error(`Document with id ${id} not found in ${collection}`);\n    }\n\n    // Apply updates\n    const updatedDocument = {\n      ...data[index],\n      ...updates,\n      updatedAt: new Date().toISOString()\n    };\n\n    data[index] = updatedDocument;\n    this.cache.set(collection, data);\n\n    // Queue save\n    this.queueSave(collection);\n\n    // Emit event\n    this.emit('updated', { collection, document: updatedDocument });\n\n    return updatedDocument;\n  }\n\n  async delete(collection, id) {\n    this.validateCollection(collection);\n\n    const data = this.cache.get(collection) || [];\n    const index = data.findIndex(item => item.id === id);\n\n    if (index === -1) {\n      throw new Error(`Document with id ${id} not found in ${collection}`);\n    }\n\n    const deletedDocument = data[index];\n    data.splice(index, 1);\n    this.cache.set(collection, data);\n\n    // Queue save\n    this.queueSave(collection);\n\n    // Emit event\n    this.emit('deleted', { collection, document: deletedDocument });\n\n    return deletedDocument;\n  }\n\n  // Aggregation methods\n  async count(collection, filter = {}) {\n    const results = await this.findAll(collection, filter);\n    return results.length;\n  }\n\n  async countByField(collection, field) {\n    const data = await this.findAll(collection);\n    const counts = {};\n\n    data.forEach(item => {\n      const value = item[field] || 'unknown';\n      counts[value] = (counts[value] || 0) + 1;\n    });\n\n    return counts;\n  }\n\n  async getStats(collection) {\n    const data = await this.findAll(collection);\n\n    return {\n      total: data.length,\n      createdToday: data.filter(item => {\n        const created = new Date(item.createdAt);\n        const today = new Date();\n        return created.toDateString() === today.toDateString();\n      }).length,\n      createdThisWeek: data.filter(item => {\n        const created = new Date(item.createdAt);\n        const weekAgo = new Date();\n        weekAgo.setDate(weekAgo.getDate() - 7);\n        return created >= weekAgo;\n      }).length,\n      lastUpdated: data.length > 0 ? Math.max(...data.map(item => new Date(item.updatedAt))) : null\n    };\n  }\n\n  // Event-specific methods\n  async getCurrentEvent() {\n    const events = await this.findAll('events', { status: 'upcoming' });\n    return events.sort((a, b) => new Date(a.date) - new Date(b.date))[0];\n  }\n\n  async getEventParticipants(eventId) {\n    return await this.findAll('participants', { eventId });\n  }\n\n  async getEventTalks(eventId) {\n    return await this.findAll('talks', { eventId });\n  }\n\n  async getEventAnalytics(eventId) {\n    const participants = await this.getEventParticipants(eventId);\n    const talks = await this.getEventTalks(eventId);\n\n    return {\n      participantCount: participants.length,\n      speakerCount: talks.length,\n      participationTypes: await this.countByField('participants', 'participationType'),\n      talkCategories: await this.countByField('talks', 'category'),\n      registrationTrend: this.getRegistrationTrend(participants),\n      avgRating: this.calculateAverageRating(talks)\n    };\n  }\n\n  getRegistrationTrend(participants) {\n    const trend = {};\n    participants.forEach(participant => {\n      const date = new Date(participant.createdAt).toDateString();\n      trend[date] = (trend[date] || 0) + 1;\n    });\n    return trend;\n  }\n\n  calculateAverageRating(talks) {\n    const ratingsArray = talks.filter(talk => talk.rating).map(talk => talk.rating);\n\n    if (ratingsArray.length === 0) {\n      return null;\n    }\n\n    return ratingsArray.reduce((sum, rating) => sum + rating, 0) / ratingsArray.length;\n  }\n\n  // Settings management\n  async getSettings() {\n    const settings = this.cache.get('settings') || [];\n    return settings[0] || {};\n  }\n\n  async updateSettings(updates) {\n    const settings = await this.getSettings();\n    const updatedSettings = {\n      ...settings,\n      ...updates,\n      updatedAt: new Date().toISOString()\n    };\n\n    this.cache.set('settings', [updatedSettings]);\n    await this.queueSave('settings');\n\n    return updatedSettings;\n  }\n\n  // Data seeding for development\n  async seed(seedData) {\n    for (const [collection, data] of Object.entries(seedData)) {\n      if (this.collections[collection]) {\n        this.cache.set(collection, data);\n        await this.saveCollection(collection);\n        console.log(`🌱 Seeded ${collection} with ${data.length} items`);\n      }\n    }\n  }\n\n  // Data export/backup\n  async exportData() {\n    const exportData = {};\n\n    for (const collection of Object.keys(this.collections)) {\n      exportData[collection] = this.cache.get(collection) || [];\n    }\n\n    return {\n      ...exportData,\n      exportedAt: new Date().toISOString(),\n      version: '1.0.0'\n    };\n  }\n\n  async importData(importData) {\n    for (const [collection, data] of Object.entries(importData)) {\n      if (this.collections[collection] && Array.isArray(data)) {\n        this.cache.set(collection, data);\n        await this.saveCollection(collection);\n        console.log(`📥 Imported ${collection} with ${data.length} items`);\n      }\n    }\n  }\n\n  // Helper methods\n  validateCollection(collection) {\n    if (!this.collections[collection]) {\n      throw new Error(`Invalid collection: ${collection}`);\n    }\n  }\n\n  matchesFilter(item, filter) {\n    return Object.entries(filter).every(([key, value]) => {\n      if (typeof value === 'object' && value !== null) {\n        // Handle operators like { $gte: value }\n        return Object.entries(value).every(([operator, operatorValue]) => {\n          switch (operator) {\n            case '$gte':\n              return item[key] >= operatorValue;\n            case '$lte':\n              return item[key] <= operatorValue;\n            case '$gt':\n              return item[key] > operatorValue;\n            case '$lt':\n              return item[key] < operatorValue;\n            case '$ne':\n              return item[key] !== operatorValue;\n            case '$in':\n              return Array.isArray(operatorValue) && operatorValue.includes(item[key]);\n            case '$nin':\n              return Array.isArray(operatorValue) && !operatorValue.includes(item[key]);\n            default:\n              return false;\n          }\n        });\n      }\n      return item[key] === value;\n    });\n  }\n\n  generateId() {\n    return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  queueSave(collection) {\n    this.saveQueue.set(collection, true);\n\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    this.saveTimeout = setTimeout(async () => {\n      const collectionsToSave = Array.from(this.saveQueue.keys());\n      this.saveQueue.clear();\n\n      for (const collection of collectionsToSave) {\n        await this.saveCollection(collection);\n      }\n    }, 1000); // Batch saves every 1 second\n  }\n\n  async saveCollection(collection) {\n    try {\n      const filename = this.collections[collection];\n      const filePath = path.join(this.dataDir, filename);\n      const data = this.cache.get(collection) || [];\n\n      await fs.writeFile(filePath, JSON.stringify(data, null, 2));\n    } catch (error) {\n      console.error(`Failed to save collection ${collection}:`, error);\n      throw error;\n    }\n  }\n\n  async close() {\n    // Save all pending changes\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    const collectionsToSave = Array.from(this.saveQueue.keys());\n    for (const collection of collectionsToSave) {\n      await this.saveCollection(collection);\n    }\n\n    console.log('📦 Database service closed');\n  }\n}\n"],"mappings":"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","ignoreList":[]}