cd8ab7b5c772991d2037b81e2c261e19
/* istanbul ignore next */
function cov_7pwt6a1ow() {
  var path = "/home/ec2-user/workspace/lightningtalk-circle/server/routes/health.js";
  var hash = "1dd11b8817e056262d8c861d7cfed28926c8bd6d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ec2-user/workspace/lightningtalk-circle/server/routes/health.js",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 31
        }
      },
      "1": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 27,
          column: 3
        }
      },
      "2": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "3": {
        start: {
          line: 15,
          column: 29
        },
        end: {
          line: 15,
          column: 56
        }
      },
      "4": {
        start: {
          line: 17,
          column: 23
        },
        end: {
          line: 17,
          column: 69
        }
      },
      "5": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 46
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 52
        }
      },
      "7": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 25,
          column: 11
        }
      },
      "8": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 44,
          column: 3
        }
      },
      "9": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "10": {
        start: {
          line: 32,
          column: 29
        },
        end: {
          line: 32,
          column: 64
        }
      },
      "11": {
        start: {
          line: 34,
          column: 23
        },
        end: {
          line: 34,
          column: 69
        }
      },
      "12": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 46
        }
      },
      "13": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 61
        }
      },
      "14": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 42,
          column: 11
        }
      },
      "15": {
        start: {
          line: 47,
          column: 0
        },
        end: {
          line: 71,
          column: 3
        }
      },
      "16": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "17": {
        start: {
          line: 49,
          column: 23
        },
        end: {
          line: 49,
          column: 53
        }
      },
      "18": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "19": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 56,
          column: 15
        }
      },
      "20": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 62,
          column: 15
        }
      },
      "21": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 69,
          column: 11
        }
      },
      "22": {
        start: {
          line: 74,
          column: 0
        },
        end: {
          line: 81,
          column: 3
        }
      },
      "23": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 80,
          column: 7
        }
      },
      "24": {
        start: {
          line: 84,
          column: 0
        },
        end: {
          line: 95,
          column: 3
        }
      },
      "25": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 94,
          column: 5
        }
      },
      "26": {
        start: {
          line: 86,
          column: 24
        },
        end: {
          line: 86,
          column: 53
        }
      },
      "27": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 26
        }
      },
      "28": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 93,
          column: 11
        }
      },
      "29": {
        start: {
          line: 99,
          column: 19
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "30": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "31": {
        start: {
          line: 109,
          column: 28
        },
        end: {
          line: 109,
          column: 78
        }
      },
      "32": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 35
        }
      },
      "33": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 115,
          column: 10
        }
      },
      "34": {
        start: {
          line: 119,
          column: 21
        },
        end: {
          line: 121,
          column: 5
        }
      },
      "35": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 72
        }
      },
      "36": {
        start: {
          line: 123,
          column: 28
        },
        end: {
          line: 125,
          column: 5
        }
      },
      "37": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 44
        }
      },
      "38": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 127,
          column: 89
        }
      },
      "39": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 129,
          column: 18
        }
      },
      "40": {
        start: {
          line: 134,
          column: 18
        },
        end: {
          line: 134,
          column: 45
        }
      },
      "41": {
        start: {
          line: 137,
          column: 19
        },
        end: {
          line: 146,
          column: 5
        }
      },
      "42": {
        start: {
          line: 149,
          column: 24
        },
        end: {
          line: 154,
          column: 5
        }
      },
      "43": {
        start: {
          line: 157,
          column: 24
        },
        end: {
          line: 163,
          column: 5
        }
      },
      "44": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 170,
          column: 6
        }
      },
      "45": {
        start: {
          line: 175,
          column: 20
        },
        end: {
          line: 175,
          column: 22
        }
      },
      "46": {
        start: {
          line: 176,
          column: 19
        },
        end: {
          line: 176,
          column: 23
        }
      },
      "47": {
        start: {
          line: 179,
          column: 4
        },
        end: {
          line: 197,
          column: 5
        }
      },
      "48": {
        start: {
          line: 180,
          column: 32
        },
        end: {
          line: 180,
          column: 75
        }
      },
      "49": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 186,
          column: 10
        }
      },
      "50": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 190,
          column: 9
        }
      },
      "51": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 29
        }
      },
      "52": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 195,
          column: 10
        }
      },
      "53": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 25
        }
      },
      "54": {
        start: {
          line: 200,
          column: 28
        },
        end: {
          line: 204,
          column: 5
        }
      },
      "55": {
        start: {
          line: 206,
          column: 27
        },
        end: {
          line: 206,
          column: 83
        }
      },
      "56": {
        start: {
          line: 206,
          column: 61
        },
        end: {
          line: 206,
          column: 82
        }
      },
      "57": {
        start: {
          line: 207,
          column: 4
        },
        end: {
          line: 210,
          column: 6
        }
      },
      "58": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 214,
          column: 5
        }
      },
      "59": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 25
        }
      },
      "60": {
        start: {
          line: 216,
          column: 4
        },
        end: {
          line: 219,
          column: 6
        }
      },
      "61": {
        start: {
          line: 224,
          column: 21
        },
        end: {
          line: 224,
          column: 42
        }
      },
      "62": {
        start: {
          line: 225,
          column: 21
        },
        end: {
          line: 225,
          column: 39
        }
      },
      "63": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 251,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 16
          },
          end: {
            line: 13,
            column: 17
          }
        },
        loc: {
          start: {
            line: 13,
            column: 36
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 30,
            column: 24
          },
          end: {
            line: 30,
            column: 25
          }
        },
        loc: {
          start: {
            line: 30,
            column: 44
          },
          end: {
            line: 44,
            column: 1
          }
        },
        line: 30
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 47,
            column: 21
          },
          end: {
            line: 47,
            column: 22
          }
        },
        loc: {
          start: {
            line: 47,
            column: 41
          },
          end: {
            line: 71,
            column: 1
          }
        },
        line: 47
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 74,
            column: 20
          },
          end: {
            line: 74,
            column: 21
          }
        },
        loc: {
          start: {
            line: 74,
            column: 34
          },
          end: {
            line: 81,
            column: 1
          }
        },
        line: 74
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 84,
            column: 23
          },
          end: {
            line: 84,
            column: 24
          }
        },
        loc: {
          start: {
            line: 84,
            column: 43
          },
          end: {
            line: 95,
            column: 1
          }
        },
        line: 84
      },
      "5": {
        name: "performHealthChecks",
        decl: {
          start: {
            line: 98,
            column: 15
          },
          end: {
            line: 98,
            column: 34
          }
        },
        loc: {
          start: {
            line: 98,
            column: 37
          },
          end: {
            line: 130,
            column: 1
          }
        },
        line: 98
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 119,
            column: 48
          },
          end: {
            line: 119,
            column: 49
          }
        },
        loc: {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 120,
            column: 72
          }
        },
        line: 120
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 123,
            column: 44
          },
          end: {
            line: 123,
            column: 45
          }
        },
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 124,
            column: 44
          }
        },
        line: 124
      },
      "8": {
        name: "performDetailedHealthChecks",
        decl: {
          start: {
            line: 133,
            column: 15
          },
          end: {
            line: 133,
            column: 42
          }
        },
        loc: {
          start: {
            line: 133,
            column: 45
          },
          end: {
            line: 171,
            column: 1
          }
        },
        line: 133
      },
      "9": {
        name: "performReadinessChecks",
        decl: {
          start: {
            line: 174,
            column: 15
          },
          end: {
            line: 174,
            column: 37
          }
        },
        loc: {
          start: {
            line: 174,
            column: 40
          },
          end: {
            line: 220,
            column: 1
          }
        },
        line: 174
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 206,
            column: 50
          },
          end: {
            line: 206,
            column: 51
          }
        },
        loc: {
          start: {
            line: 206,
            column: 61
          },
          end: {
            line: 206,
            column: 82
          }
        },
        line: 206
      },
      "11": {
        name: "getPerformanceMetrics",
        decl: {
          start: {
            line: 223,
            column: 15
          },
          end: {
            line: 223,
            column: 36
          }
        },
        loc: {
          start: {
            line: 223,
            column: 39
          },
          end: {
            line: 252,
            column: 1
          }
        },
        line: 223
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 23
          },
          end: {
            line: 17,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 60
          },
          end: {
            line: 17,
            column: 63
          }
        }, {
          start: {
            line: 17,
            column: 66
          },
          end: {
            line: 17,
            column: 69
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 23
          },
          end: {
            line: 34,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 60
          },
          end: {
            line: 34,
            column: 63
          }
        }, {
          start: {
            line: 34,
            column: 66
          },
          end: {
            line: 34,
            column: 69
          }
        }],
        line: 34
      },
      "2": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: 57,
            column: 15
          },
          end: {
            line: 63,
            column: 9
          }
        }],
        line: 51
      },
      "3": {
        loc: {
          start: {
            line: 103,
            column: 17
          },
          end: {
            line: 103,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 17
          },
          end: {
            line: 103,
            column: 48
          }
        }, {
          start: {
            line: 103,
            column: 52
          },
          end: {
            line: 103,
            column: 59
          }
        }],
        line: 103
      },
      "4": {
        loc: {
          start: {
            line: 104,
            column: 21
          },
          end: {
            line: 104,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 21
          },
          end: {
            line: 104,
            column: 41
          }
        }, {
          start: {
            line: 104,
            column: 45
          },
          end: {
            line: 104,
            column: 58
          }
        }],
        line: 104
      },
      "5": {
        loc: {
          start: {
            line: 127,
            column: 21
          },
          end: {
            line: 127,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 127,
            column: 66
          },
          end: {
            line: 127,
            column: 75
          }
        }, {
          start: {
            line: 127,
            column: 78
          },
          end: {
            line: 127,
            column: 88
          }
        }],
        line: 127
      },
      "6": {
        loc: {
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 190,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 190,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "7": {
        loc: {
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 214,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 214,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1dd11b8817e056262d8c861d7cfed28926c8bd6d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_7pwt6a1ow = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_7pwt6a1ow();
/**
 * Health Check API Routes
 * Provides comprehensive application health monitoring
 */

import express from 'express';
import os from 'os';
import { EmailServiceFactory } from '../services/email-factory.js';
const router =
/* istanbul ignore next */
(cov_7pwt6a1ow().s[0]++, express.Router());

// Basic health check
/* istanbul ignore next */
cov_7pwt6a1ow().s[1]++;
router.get('/', async (req, res) => {
  /* istanbul ignore next */
  cov_7pwt6a1ow().f[0]++;
  cov_7pwt6a1ow().s[2]++;
  try {
    const healthStatus =
    /* istanbul ignore next */
    (cov_7pwt6a1ow().s[3]++, await performHealthChecks());
    const status =
    /* istanbul ignore next */
    (cov_7pwt6a1ow().s[4]++, healthStatus.overall === 'healthy' ?
    /* istanbul ignore next */
    (cov_7pwt6a1ow().b[0][0]++, 200) :
    /* istanbul ignore next */
    (cov_7pwt6a1ow().b[0][1]++, 503));
    /* istanbul ignore next */
    cov_7pwt6a1ow().s[5]++;
    res.status(status).json(healthStatus);
  } catch (error) {
    /* istanbul ignore next */
    cov_7pwt6a1ow().s[6]++;
    console.error('Health check error:', error);
    /* istanbul ignore next */
    cov_7pwt6a1ow().s[7]++;
    res.status(503).json({
      status: 'unhealthy',
      error: 'Health check failed',
      timestamp: new Date().toISOString()
    });
  }
});

// Detailed health check
/* istanbul ignore next */
cov_7pwt6a1ow().s[8]++;
router.get('/detailed', async (req, res) => {
  /* istanbul ignore next */
  cov_7pwt6a1ow().f[1]++;
  cov_7pwt6a1ow().s[9]++;
  try {
    const healthStatus =
    /* istanbul ignore next */
    (cov_7pwt6a1ow().s[10]++, await performDetailedHealthChecks());
    const status =
    /* istanbul ignore next */
    (cov_7pwt6a1ow().s[11]++, healthStatus.overall === 'healthy' ?
    /* istanbul ignore next */
    (cov_7pwt6a1ow().b[1][0]++, 200) :
    /* istanbul ignore next */
    (cov_7pwt6a1ow().b[1][1]++, 503));
    /* istanbul ignore next */
    cov_7pwt6a1ow().s[12]++;
    res.status(status).json(healthStatus);
  } catch (error) {
    /* istanbul ignore next */
    cov_7pwt6a1ow().s[13]++;
    console.error('Detailed health check error:', error);
    /* istanbul ignore next */
    cov_7pwt6a1ow().s[14]++;
    res.status(503).json({
      status: 'unhealthy',
      error: 'Detailed health check failed',
      timestamp: new Date().toISOString()
    });
  }
});

// Readiness probe (for Kubernetes/Docker)
/* istanbul ignore next */
cov_7pwt6a1ow().s[15]++;
router.get('/ready', async (req, res) => {
  /* istanbul ignore next */
  cov_7pwt6a1ow().f[2]++;
  cov_7pwt6a1ow().s[16]++;
  try {
    const checks =
    /* istanbul ignore next */
    (cov_7pwt6a1ow().s[17]++, await performReadinessChecks());
    /* istanbul ignore next */
    cov_7pwt6a1ow().s[18]++;
    if (checks.ready) {
      /* istanbul ignore next */
      cov_7pwt6a1ow().b[2][0]++;
      cov_7pwt6a1ow().s[19]++;
      res.status(200).json({
        status: 'ready',
        checks: checks.results,
        timestamp: new Date().toISOString()
      });
    } else {
      /* istanbul ignore next */
      cov_7pwt6a1ow().b[2][1]++;
      cov_7pwt6a1ow().s[20]++;
      res.status(503).json({
        status: 'not-ready',
        checks: checks.results,
        timestamp: new Date().toISOString()
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_7pwt6a1ow().s[21]++;
    res.status(503).json({
      status: 'not-ready',
      error: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Liveness probe (for Kubernetes/Docker)
/* istanbul ignore next */
cov_7pwt6a1ow().s[22]++;
router.get('/live', (req, res) => {
  /* istanbul ignore next */
  cov_7pwt6a1ow().f[3]++;
  cov_7pwt6a1ow().s[23]++;
  res.status(200).json({
    status: 'alive',
    timestamp: new Date().toISOString(),
    uptime: process.uptime(),
    pid: process.pid
  });
});

// Performance metrics
/* istanbul ignore next */
cov_7pwt6a1ow().s[24]++;
router.get('/metrics', async (req, res) => {
  /* istanbul ignore next */
  cov_7pwt6a1ow().f[4]++;
  cov_7pwt6a1ow().s[25]++;
  try {
    const metrics =
    /* istanbul ignore next */
    (cov_7pwt6a1ow().s[26]++, await getPerformanceMetrics());
    /* istanbul ignore next */
    cov_7pwt6a1ow().s[27]++;
    res.json(metrics);
  } catch (error) {
    /* istanbul ignore next */
    cov_7pwt6a1ow().s[28]++;
    res.status(500).json({
      error: 'Failed to get metrics',
      message: error.message,
      timestamp: new Date().toISOString()
    });
  }
});

// Basic health checks
async function performHealthChecks() {
  /* istanbul ignore next */
  cov_7pwt6a1ow().f[5]++;
  const checks =
  /* istanbul ignore next */
  (cov_7pwt6a1ow().s[29]++, {
    app: {
      status: 'healthy',
      message: 'Application running'
    },
    timestamp: new Date().toISOString(),
    uptime: process.uptime(),
    version:
    /* istanbul ignore next */
    (cov_7pwt6a1ow().b[3][0]++, process.env.npm_package_version) ||
    /* istanbul ignore next */
    (cov_7pwt6a1ow().b[3][1]++, '1.0.0'),
    environment:
    /* istanbul ignore next */
    (cov_7pwt6a1ow().b[4][0]++, process.env.NODE_ENV) ||
    /* istanbul ignore next */
    (cov_7pwt6a1ow().b[4][1]++, 'development')
  });

  // Check email service
  /* istanbul ignore next */
  cov_7pwt6a1ow().s[30]++;
  try {
    const emailHealth =
    /* istanbul ignore next */
    (cov_7pwt6a1ow().s[31]++, await EmailServiceFactory.testEmailConfiguration());
    /* istanbul ignore next */
    cov_7pwt6a1ow().s[32]++;
    checks.email = emailHealth;
  } catch (error) {
    /* istanbul ignore next */
    cov_7pwt6a1ow().s[33]++;
    checks.email = {
      status: 'unhealthy',
      error: error.message
    };
  }

  // Determine overall status
  const services =
  /* istanbul ignore next */
  (cov_7pwt6a1ow().s[34]++, Object.keys(checks).filter(key => {
    /* istanbul ignore next */
    cov_7pwt6a1ow().f[6]++;
    cov_7pwt6a1ow().s[35]++;
    return !['timestamp', 'uptime', 'version', 'environment'].includes(key);
  }));
  const healthyServices =
  /* istanbul ignore next */
  (cov_7pwt6a1ow().s[36]++, services.filter(service => {
    /* istanbul ignore next */
    cov_7pwt6a1ow().f[7]++;
    cov_7pwt6a1ow().s[37]++;
    return checks[service].status === 'healthy';
  }));
  /* istanbul ignore next */
  cov_7pwt6a1ow().s[38]++;
  checks.overall = healthyServices.length === services.length ?
  /* istanbul ignore next */
  (cov_7pwt6a1ow().b[5][0]++, 'healthy') :
  /* istanbul ignore next */
  (cov_7pwt6a1ow().b[5][1]++, 'degraded');
  /* istanbul ignore next */
  cov_7pwt6a1ow().s[39]++;
  return checks;
}

// Detailed health checks
async function performDetailedHealthChecks() {
  /* istanbul ignore next */
  cov_7pwt6a1ow().f[8]++;
  const basic =
  /* istanbul ignore next */
  (cov_7pwt6a1ow().s[40]++, await performHealthChecks());

  // System information
  const system =
  /* istanbul ignore next */
  (cov_7pwt6a1ow().s[41]++, {
    hostname: os.hostname(),
    platform: os.platform(),
    arch: os.arch(),
    cpus: os.cpus().length,
    totalMemory: os.totalmem(),
    freeMemory: os.freemem(),
    loadAverage: os.loadavg(),
    nodeVersion: process.version
  });

  // Process information
  const processInfo =
  /* istanbul ignore next */
  (cov_7pwt6a1ow().s[42]++, {
    pid: process.pid,
    uptime: process.uptime(),
    memoryUsage: process.memoryUsage(),
    cpuUsage: process.cpuUsage()
  });

  // Environment checks
  const environment =
  /* istanbul ignore next */
  (cov_7pwt6a1ow().s[43]++, {
    nodeEnv: process.env.NODE_ENV,
    port: process.env.PORT,
    databaseType: process.env.DATABASE_TYPE,
    emailEnabled: process.env.EMAIL_ENABLED,
    emailProvider: process.env.EMAIL_PROVIDER
  });
  /* istanbul ignore next */
  cov_7pwt6a1ow().s[44]++;
  return {
    ...basic,
    system,
    process: processInfo,
    environment
  };
}

// Readiness checks (for orchestration platforms)
async function performReadinessChecks() {
  /* istanbul ignore next */
  cov_7pwt6a1ow().f[9]++;
  const results =
  /* istanbul ignore next */
  (cov_7pwt6a1ow().s[45]++, {});
  let allReady =
  /* istanbul ignore next */
  (cov_7pwt6a1ow().s[46]++, true);

  // Check if email service is configured
  /* istanbul ignore next */
  cov_7pwt6a1ow().s[47]++;
  try {
    const emailValidation =
    /* istanbul ignore next */
    (cov_7pwt6a1ow().s[48]++, EmailServiceFactory.validateConfiguration());
    /* istanbul ignore next */
    cov_7pwt6a1ow().s[49]++;
    results.email = {
      ready: emailValidation.valid,
      provider: emailValidation.provider,
      warnings: emailValidation.warnings,
      errors: emailValidation.errors
    };
    /* istanbul ignore next */
    cov_7pwt6a1ow().s[50]++;
    if (!emailValidation.valid) {
      /* istanbul ignore next */
      cov_7pwt6a1ow().b[6][0]++;
      cov_7pwt6a1ow().s[51]++;
      allReady = false;
    } else
    /* istanbul ignore next */
    {
      cov_7pwt6a1ow().b[6][1]++;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_7pwt6a1ow().s[52]++;
    results.email = {
      ready: false,
      error: error.message
    };
    /* istanbul ignore next */
    cov_7pwt6a1ow().s[53]++;
    allReady = false;
  }

  // Check environment variables
  const requiredEnvVars =
  /* istanbul ignore next */
  (cov_7pwt6a1ow().s[54]++, ['NODE_ENV', 'JWT_SECRET', 'SESSION_SECRET']);
  const missingEnvVars =
  /* istanbul ignore next */
  (cov_7pwt6a1ow().s[55]++, requiredEnvVars.filter(varName => {
    /* istanbul ignore next */
    cov_7pwt6a1ow().f[10]++;
    cov_7pwt6a1ow().s[56]++;
    return !process.env[varName];
  }));
  /* istanbul ignore next */
  cov_7pwt6a1ow().s[57]++;
  results.environment = {
    ready: missingEnvVars.length === 0,
    missing: missingEnvVars
  };
  /* istanbul ignore next */
  cov_7pwt6a1ow().s[58]++;
  if (missingEnvVars.length > 0) {
    /* istanbul ignore next */
    cov_7pwt6a1ow().b[7][0]++;
    cov_7pwt6a1ow().s[59]++;
    allReady = false;
  } else
  /* istanbul ignore next */
  {
    cov_7pwt6a1ow().b[7][1]++;
  }
  cov_7pwt6a1ow().s[60]++;
  return {
    ready: allReady,
    results
  };
}

// Performance metrics
async function getPerformanceMetrics() {
  /* istanbul ignore next */
  cov_7pwt6a1ow().f[11]++;
  const memUsage =
  /* istanbul ignore next */
  (cov_7pwt6a1ow().s[61]++, process.memoryUsage());
  const cpuUsage =
  /* istanbul ignore next */
  (cov_7pwt6a1ow().s[62]++, process.cpuUsage());
  /* istanbul ignore next */
  cov_7pwt6a1ow().s[63]++;
  return {
    timestamp: new Date().toISOString(),
    uptime: process.uptime(),
    memory: {
      rss: memUsage.rss,
      heapTotal: memUsage.heapTotal,
      heapUsed: memUsage.heapUsed,
      external: memUsage.external,
      arrayBuffers: memUsage.arrayBuffers
    },
    cpu: {
      user: cpuUsage.user,
      system: cpuUsage.system
    },
    system: {
      totalMemory: os.totalmem(),
      freeMemory: os.freemem(),
      loadAverage: os.loadavg(),
      cpuCount: os.cpus().length
    },
    eventLoop: {
      // Event loop lag would be measured here in a real implementation
      lag: 0
    }
  };
}
export default router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,