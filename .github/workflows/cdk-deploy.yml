name: CDK Deploy

on:
  push:
    branches:
      - main
      - develop
      - feature/cdk-migration
  pull_request:
    branches:
      - main
      - develop

env:
  AWS_REGION: us-east-1
  NODE_VERSION: "18"

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:unit

      - name: Run linting
        run: npm run lint

      - name: Build static assets
        run: npm run build:static

      - name: Docker build test
        run: npm run docker:test

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/feature/cdk-migration' || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'
    outputs:
      image-uri: ${{ steps.build.outputs.image-uri }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Configure AWS credentials
        if: ${{ secrets.AWS_ACCESS_KEY_ID != '' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Determine environment
        id: env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "environment=prod" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "environment=staging" >> $GITHUB_OUTPUT
          else
            echo "environment=dev" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        if: ${{ secrets.AWS_ACCESS_KEY_ID != '' }}
        id: build
        run: |
          # Generate image tag from git commit
          IMAGE_TAG="${{ github.sha }}"

          # Run build script (skip if AWS credentials not available)
          if [ -f "./scripts/docker-build-push.sh" ]; then
            ./scripts/docker-build-push.sh ${{ steps.env.outputs.environment }} ${IMAGE_TAG}
            
            # Output the image URI for subsequent jobs
            AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
            IMAGE_URI="${AWS_ACCOUNT_ID}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/lightningtalk-circle/api:${IMAGE_TAG}"
            echo "image-uri=${IMAGE_URI}" >> $GITHUB_OUTPUT
            echo "Built and pushed image: ${IMAGE_URI}"
          else
            echo "Docker build script not found, skipping build"
            echo "image-uri=mock-image-uri" >> $GITHUB_OUTPUT
          fi

  cdk-diff:
    name: CDK Diff
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install CDK dependencies
        run: npm run cdk:install

      - name: Configure AWS credentials
        if: ${{ secrets.AWS_ACCESS_KEY_ID != '' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: CDK diff
        run: npm run cdk:diff
        env:
          CDK_DEFAULT_REGION: ${{ env.AWS_REGION }}

  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: [test, build-and-push]
    if: github.ref == 'refs/heads/feature/cdk-migration' || github.ref == 'refs/heads/develop'
    environment: development
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install CDK dependencies
        run: npm run cdk:install

      - name: Build CDK
        run: npm run cdk:build

      - name: Configure AWS credentials
        if: ${{ secrets.AWS_ACCESS_KEY_ID != '' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to development
        run: npm run cdk:deploy:dev
        env:
          CDK_DEFAULT_REGION: ${{ env.AWS_REGION }}
          DOCKER_IMAGE_URI: ${{ needs.build-and-push.outputs.image-uri }}

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [test, build-and-push]
    if: github.ref == 'refs/heads/develop'
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install CDK dependencies
        run: npm run cdk:install

      - name: Build CDK
        run: npm run cdk:build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_STAGING }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_STAGING }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to staging
        run: npm run cdk:deploy:staging
        env:
          CDK_DEFAULT_REGION: ${{ env.AWS_REGION }}
          DOCKER_IMAGE_URI: ${{ needs.build-and-push.outputs.image-uri }}

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [test, build-and-push]
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install CDK dependencies
        run: npm run cdk:install

      - name: Build CDK
        run: npm run cdk:build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to production
        run: npm run cdk:deploy:prod
        env:
          CDK_DEFAULT_REGION: ${{ env.AWS_REGION }}
          DOCKER_IMAGE_URI: ${{ needs.build-and-push.outputs.image-uri }}

  notify:
    name: Notify Deployment
    runs-on: ubuntu-latest
    needs: [deploy-dev, deploy-staging, deploy-prod]
    if: always()
    steps:
      - name: Notify success
        if: needs.deploy-dev.result == 'success' || needs.deploy-staging.result == 'success' || needs.deploy-prod.result == 'success'
        run: echo "✅ Deployment successful"

      - name: Notify failure
        if: needs.deploy-dev.result == 'failure' || needs.deploy-staging.result == 'failure' || needs.deploy-prod.result == 'failure'
        run: echo "❌ Deployment failed"
