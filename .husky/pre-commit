# !/usr/bin/env sh
# . "$(dirname -- "$0")/_/husky.sh"

echo "🔍 Running pre-commit hooks..."

# ステージされたファイルを取得
staged_files=$(git diff --cached --name-only --diff-filter=ACM)

if [ -z "$staged_files" ]; then
  echo "✅ No staged files to check"
  exit 0
fi

echo "📁 Staged files: $staged_files"

# JavaScript/TypeScript/JSON ファイルをフィルタ
js_files=$(echo "$staged_files" | grep -E '\.(js|ts|jsx|tsx|json)$' || true)
css_files=$(echo "$staged_files" | grep -E '\.(css|scss|sass|less)$' || true)
md_files=$(echo "$staged_files" | grep -E '\.md$' || true)

# ESLint チェック（JavaScript/TypeScript ファイル）
if [ ! -z "$js_files" ]; then
  echo "🔧 Running ESLint on JavaScript/TypeScript files..."
  echo "$js_files" | xargs npx eslint --fix --quiet
  
  if [ $? -ne 0 ]; then
    echo "❌ ESLint found issues that couldn't be automatically fixed"
    echo "Please fix the issues and commit again"
    exit 1
  fi
  
  # ESLint で修正されたファイルを再ステージ
  echo "$js_files" | xargs git add
  echo "✅ ESLint completed"
fi

# Prettier フォーマット（全対象ファイル）
if [ ! -z "$staged_files" ]; then
  echo "🎨 Running Prettier formatting..."
  echo "$staged_files" | xargs npx prettier --write --loglevel=warn
  
  if [ $? -ne 0 ]; then
    echo "❌ Prettier formatting failed"
    exit 1
  fi
  
  # Prettier で修正されたファイルを再ステージ
  echo "$staged_files" | xargs git add
  echo "✅ Prettier formatting completed"
fi

# テスト実行（Node.js プロジェクトの場合）
if [ -f "package.json" ]; then
  echo "🧪 Running unit tests..."
  
  # 高速テストのみ実行（unit tests）
  npm run test:unit -- --passWithNoTests --bail
  
  if [ $? -ne 0 ]; then
    echo "❌ Tests failed"
    echo "Please fix failing tests before committing"
    exit 1
  fi
  
  echo "✅ Tests passed"
fi

# TypeScript 型チェック（TypeScript プロジェクトの場合）
if [ -f "tsconfig.json" ] || [ -f "lightningtalk-modern/tsconfig.json" ]; then
  echo "🔍 Running TypeScript type check..."
  
  if [ -f "lightningtalk-modern/package.json" ]; then
    cd lightningtalk-modern && npm run type-check
    type_check_result=$?
    cd ..
  else
    npx tsc --noEmit
    type_check_result=$?
  fi
  
  if [ $type_check_result -ne 0 ]; then
    echo "❌ TypeScript type check failed"
    echo "Please fix type errors before committing"
    exit 1
  fi
  
  echo "✅ TypeScript type check passed"
fi

# セキュリティチェック（package.json の変更がある場合）
if echo "$staged_files" | grep -q "package.json\|package-lock.json\|yarn.lock"; then
  echo "🔒 Running security audit..."
  
  npm audit --audit-level=high
  
  if [ $? -ne 0 ]; then
    echo "⚠️  Security vulnerabilities found"
    echo "Consider running 'npm audit fix' after commit"
    # セキュリティ監査は警告のみ（失敗させない）
  else
    echo "✅ Security audit passed"
  fi
fi

echo "🎉 All pre-commit hooks passed!"
echo "💾 Ready to commit"