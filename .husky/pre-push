#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "🚀 Running pre-push hooks..."

# ブランチ情報を取得
current_branch=$(git rev-parse --abbrev-ref HEAD)
remote=$1
url=$2

echo "📍 Current branch: $current_branch"
echo "📡 Remote: $remote"
echo "🔗 URL: $url"

# main/masterブランチへのプッシュ時の追加チェック
if [ "$current_branch" = "main" ] || [ "$current_branch" = "master" ]; then
  echo "⚠️  Pushing to $current_branch branch - Running comprehensive checks..."
  
  # 包括的テストスイート実行
  echo "🧪 Running full test suite..."
  npm test
  
  if [ $? -ne 0 ]; then
    echo "❌ Full test suite failed"
    echo "Cannot push to $current_branch with failing tests"
    exit 1
  fi
  
  # 型チェック（TypeScript）
  if [ -f "tsconfig.json" ] || [ -f "lightningtalk-modern/tsconfig.json" ]; then
    echo "🔍 Running TypeScript type check..."
    
    if [ -f "lightningtalk-modern/package.json" ]; then
      cd lightningtalk-modern && npm run type-check
      type_check_result=$?
      cd ..
    else
      npx tsc --noEmit
      type_check_result=$?
    fi
    
    if [ $type_check_result -ne 0 ]; then
      echo "❌ TypeScript type check failed"
      echo "Cannot push to $current_branch with type errors"
      exit 1
    fi
  fi
  
  # ビルドテスト
  echo "🏗️  Testing build process..."
  
  if [ -f "lightningtalk-modern/package.json" ]; then
    cd lightningtalk-modern && npm run build
    build_result=$?
    cd ..
    
    if [ $build_result -ne 0 ]; then
      echo "❌ Modern WordPress build failed"
      echo "Cannot push to $current_branch with build errors"
      exit 1
    fi
  fi
  
  # WordPress テーマビルド
  if [ -f "gulpfile.js" ]; then
    echo "🎨 Testing WordPress theme build..."
    npm run wp:build
    
    if [ $? -ne 0 ]; then
      echo "❌ WordPress theme build failed"
      echo "Cannot push to $current_branch with build errors"
      exit 1
    fi
  fi
  
  # セキュリティ監査
  echo "🔒 Running security audit..."
  npm audit --audit-level=moderate
  
  if [ $? -ne 0 ]; then
    echo "⚠️  Security vulnerabilities detected"
    echo "Consider addressing these before pushing to production"
    echo "Run 'npm audit fix' to auto-fix issues"
    # セキュリティ監査は警告のみ（main/masterでも通す）
  fi
  
else
  echo "📝 Feature branch detected - Running basic checks..."
  
  # 基本的なテストのみ実行
  echo "🧪 Running unit tests..."
  npm run test:unit -- --passWithNoTests
  
  if [ $? -ne 0 ]; then
    echo "❌ Unit tests failed"
    echo "Please fix failing tests before pushing"
    exit 1
  fi
fi

# リモート追跡ブランチとの差分チェック
echo "📊 Checking differences with remote..."
remote_branch="$remote/$current_branch"

if git rev-parse --verify "$remote_branch" >/dev/null 2>&1; then
  commits_ahead=$(git rev-list --count "$remote_branch..$current_branch")
  commits_behind=$(git rev-list --count "$current_branch..$remote_branch")
  
  echo "📈 Commits ahead: $commits_ahead"
  echo "📉 Commits behind: $commits_behind"
  
  if [ "$commits_behind" -gt 0 ]; then
    echo "⚠️  Warning: Your branch is $commits_behind commits behind $remote_branch"
    echo "Consider pulling latest changes before pushing"
    
    # main/masterブランチの場合は強制的に停止
    if [ "$current_branch" = "main" ] || [ "$current_branch" = "master" ]; then
      echo "❌ Cannot push to $current_branch when behind remote"
      echo "Please pull and merge/rebase first"
      exit 1
    fi
  fi
else
  echo "📤 New branch - first push"
fi

# 大きなファイルのチェック
echo "📁 Checking for large files..."
large_files=$(git diff --cached --name-only | xargs -I {} find {} -size +10M 2>/dev/null || true)

if [ ! -z "$large_files" ]; then
  echo "⚠️  Warning: Large files detected (>10MB):"
  echo "$large_files"
  echo "Consider using Git LFS for large files"
fi

# .env ファイルや秘密情報のチェック
echo "🔐 Checking for sensitive files..."
sensitive_patterns="\.env$|\.env\.|id_rsa|private\.key|\.pem$|password|secret|token"
sensitive_files=$(git diff --cached --name-only | grep -E "$sensitive_patterns" || true)

if [ ! -z "$sensitive_files" ]; then
  echo "❌ Sensitive files detected in commit:"
  echo "$sensitive_files"
  echo "These files should not be committed to version control"
  exit 1
fi

echo "✅ All pre-push checks passed!"
echo "🚀 Ready to push to $remote/$current_branch"